<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0053)http://blog.csdn.net/v_july_v/article/details/6897097 -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">          
            <link rel="canonical" href="http://blog.csdn.net/v_july_v/article/details/6897097"> 

   

  
 <meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" media="handheld" href="http://blog.csdn.net/v_july_v/article/details/6897097#">

    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848"> 
       
    <title>从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道
        - CSDN博客</title>
    
    <meta name="description" content="从Trie树（字典树）谈到后缀树作者：July、yansha。出处：http://blog.csdn.net/v_JULY_v 。 引言    常关注本blog的读者朋友想必看过此篇文章：从B树、B+树、B*树谈到R 树，这次，咱们来讲另外两种树：Tire树与后缀树。不过，在此之前，先来看两个问题。    第一个问题： 一个文本文件，大约有一万行，每行一个词，要求统计出其中最频繁出现的前10个词，">

    <meta name="keywords" content="算法,数据结构,construction">

   
    <script src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/hm.js"></script><script src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/blog_static_head.min.js" type="text/javascript"></script>

    
        <!--new top-->
       
       
        <!--new top-->
    
      <!-- ad begin -->
         
    <!-- ad end-->

    <link rel="Stylesheet" type="text/css" href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/style.css">

    

    <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://blog.csdn.net/v_JULY_v/rss/list">
    <link rel="shortcut icon" href="http://c.csdnimg.cn/public/favicon.ico">
    <link type="text/css" rel="stylesheet" href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/simple.css">
 



    <link href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/csdn_public_blog_detail.min.css" type="text/css" rel="stylesheet">
     
         <link rel="stylesheet" href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/csdn_blog_detail.min.css">

  


    <!-- 请置于所有广告位代码之前 --> 
            <script src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/ds.js"></script>

<script src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/share.js"></script><script src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/wxLogin.js"></script><link type="text/css" rel="stylesheet" href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/style(1).css"><link rel="stylesheet" type="text/css" href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/style(2).css"><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><script src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/logger.js"></script><link href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/bdsstyle.css" rel="stylesheet" type="text/css"><link rel="stylesheet" href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/share_style0_16.css"></head>


<body><div id="BAIDU_DUP_fp_wrapper" style="position: absolute; left: -1px; bottom: -1px; z-index: 0; width: 0px; height: 0px; overflow: hidden; visibility: hidden; display: none;"><iframe id="BAIDU_DUP_fp_iframe" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/o.html" style="width: 0px; height: 0px; visibility: hidden; display: none;"></iframe></div><iframe frameborder="0" style="display: none;" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/saved_resource.html"></iframe><div id="MathJax_Message" style="display: none;"></div><div class="csdn-toolbar csdn-toolbar-skin-black ">        <div class="container row center-block ">          <div class="col-md-3 pull-left logo clearfix"><a href="http://www.csdn.net/?ref=toolbar" title="CSDN首页" target="_blank" class="icon"></a><a title="频道首页" href="http://blog.csdn.net/?ref=toolbar_logo" class="img blog-icon"></a></div>          <div class="pull-right login-wrap unlogin">            <ul class="btns">              <li class="loginlink"><a href="https://passport.csdn.net/account/login?ref=toolbar" target="_top">登录&nbsp;</a>|<a target="_top" href="http://passport.csdn.net/account/mobileregister?ref=toolbar&amp;action=mobileRegister">&nbsp;注册</a></li>              <li class="search">                <div class="icon on-search-icon">                  <div class="wrap">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <form action="http://so.csdn.net/search" id="toolbar_search" method="get" target="_blank">                      <input type="hidden" value="toolbar" name="ref" accesskey="2">                      <div class="border">                        <input placeholder="搜索" type="text" value="" name="q" accesskey="2"><span class="icon-enter-sm"></span>                      </div>                    </form>                  </div>                </div>              </li>              <li class="favor">                <div class="icon on-favor-icon">                  <div class="wrap">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <div style="display:none;" class="favor-success"><span class="msg">收藏成功</span>                      <div class="btns"><span class="btn btn-primary ok">确定</span></div>                    </div>                    <div style="display:none;" class="favor-failed"><span class="icon-danger-lg"></span><span class="msg">收藏失败，请重新收藏</span>                      <div class="btns"><span class="btn btn-primary ok">确定</span></div>                    </div>                    <form role="form" class="form-horizontal favor-form">                      <div class="form-group">                        <div class="clearfix">                          <label for="input-title" class="col-sm-2 control-label"><span class="red_txt">*</span>标题</label>                          <div class="col-sm-10">                            <input id="inputTitle" type="text" placeholder="" class="title form-control">                          </div>                        </div>                        <div class="alert alert-danger"><strong></strong>标题不能为空</div>                      </div>                      <div class="form-group" style="display:none;">                        <label for="input-url" class="col-sm-2 control-label">网址</label>                        <div class="col-sm-10">                          <input id="input-url" type="text" placeholder="" class="url form-control">                        </div>                      </div>                      <div class="form-group">                        <label for="input-tag" class="col-sm-2 tag control-label">标签</label>                        <div class="col-sm-10">                          <input id="input-tag" type="text" class="form-control tag">                        </div>                      </div>                      <div class="form-group">                        <label for="input-description" class="description col-sm-2 control-label">位置</label>                        <div class="col-sm-10">                          <div class="my_lib_box">                            个人主页&nbsp;-&nbsp;<a href="http://my.csdn.net/" target="_blank">我的知识</a>                          </div>                          <div class="checkbox">                            <div class="pull-left">                              <label>                                <input type="checkbox" name="share" class="save_lib_map" checked="checked">同时保存至：                              </label>                            </div>                            <div class="pull-left">                              <div class="dropdown">                                <button id="toolbar_sele_map" type="button">                                  选择知识图谱                                  <i class="fa fa-chevron-down"></i>                                </button>                                <div class="top_arr"></div>                                <div class="outside">                                  <ul class="dropdown-menu" id="toolbar_Design_knowledge"><li>选择知识图谱</li></ul>                                </div>                              </div>                            </div>                            <div class="pull-left new_txt">                              <a href="http://lib.csdn.net/my/create/structure" target="_blank">新建？</a>                            </div>                          </div>                        </div>                      </div>                      <div class="form-group">                        <div class="col-sm-offset-2 col-sm-10 ft">                          <div class="col-sm-4 pull-left" style="display:none">                            <div class="checkbox">                              <label>                                <input type="checkbox" name="share" checked="checked" class="share">公开                              </label>                            </div>                          </div>                          <div class="col-sm-8 pull-right favor-btns">                            <button type="button" class="cancel btn btn-default">取消</button>                            <button type="submit" class="submit btn btn-primary">收藏</button>                          </div>                        </div>                      </div>                    </form>                  </div>                </div>              </li>              <li class="notify">                <div style="display:none" class="number"></div>                <div style="display:none" class="icon-hasnotes-sm"></div>                <div id="header_notice_num"></div>                <div class="icon on-notify-icon">                  <div class="wrap">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <div id="note1" class="csdn_note">                      <div class="box"></div>                    <iframe src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/saved_resource(1).html" frameborder="0" allowtransparency="true" style="z-index:-1;position:absolute;top:0;left:0;width:100%;height:100%;background:transparent"></iframe></div>                  </div>                </div>              </li>              <li class="ugc">                <div class="icon on-ugc-icon">                  <div class="wrap clearfix">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <dl>                      <dt><a href="http://geek.csdn.net/news/expert?ref=toolbar" target="_blank" class="p-news clearfix" style="display:none;"><em class="icon"></em><span>分享资讯</span></a></dt>                      <dt style="border: none;"><a href="http://u.download.csdn.net/upload?ref=toolbar" target="_blank" class="p-doc clearfix"><em class="icon"></em><span>传PPT/文档</span></a></dt>                      <dt><a href="http://bbs.csdn.net/topics/new?ref=toolbar" target="_blank" class="p-ask clearfix"><em class="icon"></em><span>提问题</span></a></dt>                      <dt><a href="http://write.blog.csdn.net/postedit?ref=toolbar" target="_blank" class="p-blog clearfix"><em class="icon"></em><span>写博客</span></a></dt>                      <dt><a href="http://u.download.csdn.net/upload?ref=toolbar" target="_blank" class="p-src clearfix"><em class="icon"></em><span>传资源</span></a></dt>                      <dt><a href="https://code.csdn.net/projects/new?ref=toolbar" target="_blank" class="c-obj clearfix"><em class="icon"></em><span>创建项目</span></a></dt>                      <dt><a href="https://code.csdn.net/snippets/new?ref=toolbar" target="_blank" class="c-code clearfix"><em class="icon"></em><span>创建代码片</span></a></dt>                    </dl>                  </div>                </div>              </li>              <li class="profile">                <div class="icon on-profile-icon"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/100x100.jpg" class="curr-icon-img">                  <div class="wrap clearfix">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <div class="bd">                      <dl class="clearfix">                        <dt class="pull-left img"><a target="_blank" href="http://my.csdn.net/?ref=toolbar" class="avatar"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/100x100.jpg"></a></dt>                        <dd class="info" style="border: none;"><a target="_blank" href="http://my.csdn.net/?ref=toolbar" class="nickname"></a><a class="set-nick" href="https://passport.csdn.net/account/profile">设置昵称<span class="write-icon"></span></a><span class="dec"><a class="fill-dec" href="http://my.csdn.net/" target="_blank">编辑自我介绍，让更多人了解你<span class="write-icon"></span></a></span></dd>                      </dl>                    </div>                    <div class="ft clearfix"><a target="_blank" href="http://my.csdn.net/my/account/changepwd?ref=toolbar" class="pull-left"><span class="icon-cog"></span>帐号设置</a><a href="https://passport.csdn.net/account/logout?ref=toolbar" target="_top" class="pull-left" style="margin-left:132px; width:18px; height:27px; white-space:nowrap; overflow:hidden;"><span class="icon-signout"></span><span class="out">退出</span></a></div>                  </div>                </div>              </li>              <li class="apps">                <div id="chasnew123" class="hasnew" style="display: none;"></div>                <div id="cappsarea123" class="icon on-apps-icon">                  <div class="wrap clearfix">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                  <div class="detail">                    <dl>                      <dt>                        <h5>社区</h5>                      </dt>                      <dd> <a href="http://blog.csdn.net/?ref=toolbar" target="_blank">博客</a></dd>                      <dd> <a href="http://bbs.csdn.net/?ref=toolbar" target="_blank">论坛</a></dd>                      <dd> <a href="http://download.csdn.net/?ref=toolbar" target="_blank">下载</a></dd>                      <dd> <a href="http://lib.csdn.net/?ref=toolbar" target="_blank">知识库</a></dd>                      <dd><a href="http://ask.csdn.net/?ref=toolbar" target="_blank">技术问答</a></dd>                      <dd><a href="http://geek.csdn.net/?ref=toolbar" target="_blank">极客头条</a></dd>                      <dd style="display:none"> <a href="http://hero.csdn.net/?ref=toolbar" target="_blank">英雄会</a></dd>                    </dl>                  </div>                  <div class="detail">                    <dl>                      <dt>                        <h5>服务</h5>                      </dt>                      <dd style="display:none"> <a href="http://job.csdn.net/?ref=toolbar" target="_blank">JOB<img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/new.gif" style="display: none; margin-top: -26px; width: 23px;"></a></dd>                      <dd> <a href="http://edu.csdn.net/?ref=toolbar" target="_blank">学院<img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/new.gif" style="display: none; margin-top: -26px; width: 23px;"></a></dd>                      <dd> <a href="https://code.csdn.net/?ref=toolbar" target="_blank">CODE</a></dd>                      <dd> <a href="http://huiyi.csdn.net/?ref=toolbar" target="_blank">活动</a></dd>                      <dd> <a href="http://www.csto.com/?ref=toolbar" target="_blank">CSTO</a></dd>                      <dd> <a href="http://mall.csdn.net/?ref=toolbar" target="_blank">C币兑换<img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/new.gif" style="display: none; margin-top: -26px; width: 23px;"></a></dd>                    </dl>                  </div>                  <div class="detail last">                    <dl>                      <dt>                        <h5>俱乐部</h5>                      </dt>                      <dd> <a href="http://cto.csdn.net/?ref=toolbar" target="_blank">CTO俱乐部</a></dd>                      <dd> <a href="http://student.csdn.net/?ref=toolbar" target="_blank">高校俱乐部</a></dd>                    </dl>                  </div>                </div>              </div>            </li>            </ul>          </div>        </div>    </div>  
     

    <!-- 广告位开始 -->
        
    <!-- 广告位结束 -->

    
   
      <!--new top-->
    <script id="toolbar-tpl-scriptId" fixed="true" prod="blog" skin="black" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/html.js" type="text/javascript"></script>
     <!--new top-->
    <div id="container">
        <div id="header">
    <div class="header">
        <div id="blog_title">
            <h2>
                <a href="http://blog.csdn.net/v_july_v">结构之法 算法之道</a></h2>
            <h3>面试、算法、机器学习在线课程：julyedu.com</h3>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
        
     
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>           
                <li id="btnContents"><a href="http://blog.csdn.net/v_july_v?viewmode=contents"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_mulu&#39;])">
                    <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/ico_list.gif">目录视图</span></a></li>
                <li id="btnView"><a href="http://blog.csdn.net/v_july_v?viewmode=list"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_zhaiyao&#39;])">
                    <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/ico_summary.gif">摘要视图</span></a></li>
                <li id="btnRss"><a href="http://blog.csdn.net/v_july_v/rss/list"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_RSS&#39;])">
                    <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/ico_rss.gif">订阅</span></a></li>                
            

            </ul>
    </div>
</div>
<script type="text/javascript">
    var username = "v_JULY_v";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/v_july_v";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";  
</script>

        <div id="body">
            <div id="main">
                <div class="main">
                        <div class="ad_class">
<div class="notice tracking-ad" data-mod="popu_3"> 


<a href="http://blog.csdn.net/epubit17/article/details/78038722" target="_blank">
<font color="red"><strong>异步赠书：9月重磅新书升级，本本经典</strong></font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://edu.csdn.net/huiyiCourse/series_detail/66" target="_blank">
<font color="blue"><strong>SDCC 2017之区块链技术实战线上峰会</strong></font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/turingbooks/article/details/78017356" target="_blank">
<font color="blue"><strong>程序员9月书讯</strong></font></a>

&nbsp;&nbsp;&nbsp;&nbsp;


<a href="http://blog.csdn.net/broadview2006/article/details/78018836" target="_blank">
<font color="red"><strong>每周荐书：ES6、虚拟现实、物联网（评论送书）</strong></font></a>



</div>                        </div>

                        



  






<script type="text/javascript" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/category.js"></script>

  <script type="text/ecmascript">
      window.quickReplyflag = true;
      var isBole = false; 
      var fasrc="http://my.csdn.net/my/favorite/miniadd?t=%e4%bb%8eTrie%e6%a0%91%ef%bc%88%e5%ad%97%e5%85%b8%e6%a0%91%ef%bc%89%e8%b0%88%e5%88%b0%e5%90%8e%e7%bc%80%e6%a0%91%ef%bc%8810.28%e4%bf%ae%e8%ae%a2%ef%bc%89&u=http://blog.csdn.net/v_july_v/article/details/6897097"
    </script>
<div id="article_details" class="details">
    <div class="article_title">   
         <span class="ico ico_type_Original"></span>

    <h1>
        <span class="link_title"><a href="http://blog.csdn.net/v_july_v/article/details/6897097">
        从Trie树（字典树）谈到后缀树（10.28修订）        
           
        </a>
        </span>

         
    </h1>
</div>

   

        <div class="article_manage clearfix">
        <div class="article_l">
            <span class="link_categories">
            标签：
              <a href="http://www.csdn.net/tag/%e7%ae%97%e6%b3%95" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">算法</a><a href="http://www.csdn.net/tag/%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">数据结构</a><a href="http://www.csdn.net/tag/construction" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">construction</a><a href="http://www.csdn.net/tag/tree" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">tree</a><a href="http://www.csdn.net/tag/null" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">null</a>
            </span>
        </div>
        <div class="article_r">
            <span class="link_postdate">2011-10-22 20:34</span>
            <span class="link_view" title="阅读次数">139015人阅读</span>
            <span class="link_comments" title="评论次数"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#comments" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_pinglun&#39;])">评论</a>(95)</span>
            <span class="link_collect tracking-ad" data-mod="popu_171"> <a href="javascript:void(0);" onclick="javascript:collectArticle(&#39;%e4%bb%8eTrie%e6%a0%91%ef%bc%88%e5%ad%97%e5%85%b8%e6%a0%91%ef%bc%89%e8%b0%88%e5%88%b0%e5%90%8e%e7%bc%80%e6%a0%91%ef%bc%8810.28%e4%bf%ae%e8%ae%a2%ef%bc%89&#39;,&#39;6897097&#39;);return false;" title="收藏" target="_blank">收藏</a></span>
             <span class="link_report"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" onclick="javascript:report(6897097,2);return false;" title="举报">举报</a></span>

        </div>
    </div>    <style type="text/css">        
            .embody{
                padding:10px 10px 10px;
                margin:0 -20px;
                border-bottom:solid 1px #ededed;                
            }
            .embody_b{
                margin:0 ;
                padding:10px 0;
            }
            .embody .embody_t,.embody .embody_c{
                display: inline-block;
                margin-right:10px;
            }
            .embody_t{
                font-size: 12px;
                color:#999;
            }
            .embody_c{
                font-size: 12px;
            }
            .embody_c img,.embody_c em{
                display: inline-block;
                vertical-align: middle;               
            }
             .embody_c img{               
                width:30px;
                height:30px;
            }
            .embody_c em{
                margin: 0 20px 0 10px;
                color:#333;
                font-style: normal;
            }
    </style>
    <script type="text/javascript">
        $(function () {
            try
            {
                var lib = eval("("+$("#lib").attr("value")+")");
                var html = "";
                if (lib.err == 0) {
                    $.each(lib.data, function (i) {
                        var obj = lib.data[i];
                        //html += '<img src="' + obj.logo + '"/>' + obj.name + "&nbsp;&nbsp;";
                        html += ' <a href="' + obj.url + '" target="_blank">';
                        html += ' <img src="' + obj.logo + '">';
                        html += ' <em><b>' + obj.name + '</b></em>';
                        html += ' </a>';
                    });
                    if (html != "") {
                        setTimeout(function () {
                            $("#lib").html(html);                      
                            $("#embody").show();
                        }, 100);
                    }
                }      
            } catch (err)
            { }
            
        });
    </script>
      <div class="category clearfix">
        <div class="category_l">
           <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/category_icon.jpg">
            <span>分类：</span>
        </div>
        <div class="category_r">
                    <label onclick="GetCategoryArticles(&#39;771597&#39;,&#39;v_JULY_v&#39;,&#39;top&#39;,&#39;6897097&#39;);">
                        <span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_fenlei&#39;]);">24.data structures<em>（11）</em></span>
                      <img class="arrow-down" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/arrow_triangle _down.jpg" style="display:inline;">
                      <img class="arrow-up" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/arrow_triangle_up.jpg" style="display:none;">
                        <div class="subItem">
                            <div class="subItem_t"><a href="http://blog.csdn.net/v_JULY_v/article/category/771597" target="_blank">作者同类文章</a><i class="J_close">X</i></div>
                            <ul class="subItem_l" id="top_771597">                            
                            </ul>
                        </div>
                    </label>                    
                    <label onclick="GetCategoryArticles(&#39;823989&#39;,&#39;v_JULY_v&#39;,&#39;top&#39;,&#39;6897097&#39;);">
                        <span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_fenlei&#39;]);">16.TAOPP tree<em>（1）</em></span>
                      <img class="arrow-down" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/arrow_triangle _down.jpg" style="display:inline;">
                      <img class="arrow-up" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/arrow_triangle_up.jpg" style="display:none;">
                        <div class="subItem">
                            <div class="subItem_t"><a href="http://blog.csdn.net/v_JULY_v/article/category/823989" target="_blank">作者同类文章</a><i class="J_close">X</i></div>
                            <ul class="subItem_l" id="top_823989">                            
                            </ul>
                        </div>
                    </label>                    
        </div>
    </div>

  

  
  
     


<div style="clear:both"></div><div style="border:solid 1px #ccc; background:#eee; float:left; min-width:200px;padding:4px 10px;"><p style="text-align:right;margin:0;"><span style="float:left;">目录<a href="http://blog.csdn.net/v_july_v/article/details/6897097#" title="系统根据文章中H1到H6标签自动生成文章目录">(?)</a></span><a href="http://blog.csdn.net/v_july_v/article/details/6897097#" onclick="javascript:return openct(this);" title="展开">[+]</a></p><ol style="display:none;margin-left:14px;padding-left:14px;line-height:160%;"><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 从Trie树字典树谈到后缀树</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t1">引言</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t2">第一部分Trie树</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t3">1什么是Trie树</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t4">2树的构建</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t5">3前缀查询</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t6">4查询</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t7">5Trie树的应用</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t8">第二部分后缀树</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t9">1后缀树的定义&nbsp;&nbsp; &nbsp;</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t10">2后缀树与回文问题的关联</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t11">3最长回文问题的解决</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t12">4后缀树的应用</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t13">第三部分后缀树的构造方法-Ukkonen</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t14">1问题的起源</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t15">2直觉上的解决方法</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t16">3横空出世</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t17">4初窥门径</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t18">5稍微麻烦一点的事情</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t19">6归纳 反思 优化</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t20">7后缀指针</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t21">第四部分全文总结自动机KMP算法Extend-KMP后缀树后缀数组trie树trie图及其应用</a></li><ol><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t22">&nbsp;kmp</a></li><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t23">extend-kmp</a></li></ol><li><a href="http://blog.csdn.net/v_july_v/article/details/6897097#t24">本文参考及推荐阅读</a></li></ol></div><div style="clear:both"></div><div id="article_content" class="article_content tracking-ad" data-mod="popu_307" data-dsm="post">
<div style="PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; MARGIN: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; WORD-WRAP: break-word; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM-STYLE: none; PADDING-BOTTOM: 0px; BORDER-RIGHT-STYLE: none; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-STYLE: none; BORDER-LEFT-STYLE: none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM-STYLE: none; PADDING-BOTTOM: 0px; BORDER-RIGHT-STYLE: none; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-STYLE: none; BORDER-LEFT-STYLE: none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM-STYLE: none; PADDING-BOTTOM: 0px; BORDER-RIGHT-STYLE: none; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-STYLE: none; BORDER-LEFT-STYLE: none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM-STYLE: none; PADDING-BOTTOM: 0px; BORDER-RIGHT-STYLE: none; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-STYLE: none; BORDER-LEFT-STYLE: none; PADDING-TOP: 0px"><h3><a name="t0" target="_blank"></a>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 从Trie树（字典树）谈到后缀树</h3><div><br></div></blockquote></blockquote></blockquote></blockquote>说明：本文基本上是“整理”性质，致谢文末的参考文献。&nbsp;<br><br><h3><a name="t1" target="_blank"></a><strong>引言</strong></h3><p>&nbsp;&nbsp; &nbsp;常关注本blog的读者朋友想必看过此篇文章：<span style="font-family:Arial;color:#333333;LINE-HEIGHT: 26px; FONT-SIZE: 14px"><a target="_blank" href="http://blog.csdn.net/v_JULY_v/archive/2011/06/07/6530142.aspx">从B树、B+树、B*树谈到R 树</a><strong>，</strong></span>这次，咱们来讲另外两种树：Tire树与后缀树。不过，在此之前，先来看两个问题。<br>&nbsp;&nbsp; &nbsp;<strong>第一个问题</strong>： 一个文本文件，大约有一万行，每行一个词，要求统计出其中最频繁出现的前10个词，请给出思想，给出时间复杂度分析。</p><p style="TEXT-ALIGN: left">&nbsp; &nbsp; 之前在此文：<a target="_blank" style="TEXT-ALIGN: left; LINE-HEIGHT: 26px; FONT-FAMILY: Arial; COLOR: rgb(34,0,0); FONT-SIZE: 14px; TEXT-DECORATION: none" href="http://blog.csdn.net/v_july_v/article/details/6685962">海量数据处理面试题集锦与Bit-map详解</a>中给出的参考答案：<span>用trie树统计每个词出现的次数，时间复杂度是O(n*le)（le表示单词的平均长度），然后是找出出现最频繁的前10个词。</span><span>也可以用堆来实现（具体的操作可参考</span><a target="_blank" style="LINE-HEIGHT: 26px; FONT-FAMILY: Arial; COLOR: rgb(34,0,0); FONT-SIZE: 14px; TEXT-DECORATION: none" href="http://blog.csdn.net/v_JULY_v/archive/2011/04/28/6370650.aspx">第三章、寻找最小的k个数</a><span>），时间复杂度是O(n*lg10)。所以总的时间复杂度，是O(n*le)与O(n*lg10)中较大的哪一个。</span></p><p style="TEXT-ALIGN: left"><span>&nbsp;&nbsp; &nbsp;<strong>第二个问题</strong>：找出给定字符串里的最长回文。例子：输入XMADAMYX。则输出MADAM。这道题的流行解法是用后缀树（Suffix Tree)，但其用途远不止如此，它能高效解决一大票复杂的字符串编程问题（当然，它有它的弱点，如算法实现复杂以及空间开销大），概括如下：&nbsp;<br></span></p><ul><li>查询字符串S是否包含子串S1。主要思想是：如果S包含S1，那么S1必定是S的某个后缀的前缀；又因为S的后缀树包含了所有的后缀，所以只需对S的后缀树使用和Trie相同的查找方法查找S1即可（使用后缀树实现的复杂度同流行的KMP算法的复杂度相当）。&nbsp;</li><li>找出字符串S的最长重复子串S1。比如abcdabcefda里abc同da都重复出现，而最长重复子串是abc。&nbsp;</li><li>找出字符串S1同S2的最长公共子串。注意最长公共子串（Longest CommonSubstring）和最长公共子序列（LongestCommon Subsequence, LCS）的区别：子串（Substring）是串的一个连续的部分，子序列（Subsequence）则是从不改变序列的顺序，而从序列中去掉任意的元素而获得的新序列；更简略地说，前者（子串）的字符的位置必须连续，后者（子序列LCS）则不必。比如字符串acdfg同akdfc的最长公共子串为df，而他们的最长公共子序列是adf。LCS可以使用动态规划法解决。</li><li>Ziv-Lampel无损压缩算法。&nbsp;LZW算法的基本原理是利用编码数据本身存在字符串重复特性来实现数据压缩，所以一个很好的选择是使用后缀树的形式来组织存储字符串及其对应压缩码值的字典。</li><li>找出字符串S的最长回文子串S1。例如：XMADAMYX的最长回文子串是MADAM（此即为上面所说的第二个问题：最长回文问题，本文第二部分将详细阐述此问题）。</li><li>多模式串的模式匹配问题（suffix_array&nbsp;+ 二分）。</li></ul><p style="TEXT-ALIGN: left">&nbsp; &nbsp;本文<strong>第一部分</strong>，咱们就来了解这个<strong>Trie树</strong>，然后自然而然过渡到<strong>第二部分、后缀树</strong>，接着进入<span style="FONT-WEIGHT: bold">第三部分、</span>详细阐述<span style="FONT-WEIGHT: bold">后缀树的构造方法-Ukkonen</span>，最后第四部分、对自动机，KMP算法，Extend-KMP，后缀树，后缀数组，trie树，trie图及其应用做个<strong>全文概括性总结</strong>。权作此番阐述，以备不时之需，在需要的时候便可手到擒来。ok，有任何问题，欢迎不吝指正或赐教。谢谢。</p><h3><a name="t2" target="_blank"></a><span style="color:#9900;">第一部分、Trie树</span></h3><h3><a name="t3" target="_blank"></a>1.1、什么是Trie树</h3><p style="TEXT-ALIGN: left">&nbsp; &nbsp; Trie树，即字典树，又称单词查找树或键树，是一种树形结构，是一种哈希树的变种。典型应用是用于统计和排序大量的字符串（但不仅限于字符串），所以经常被搜索引擎系统用于文本词频统计。它的优点是：最大限度地减少无谓的字符串比较，查询效率比哈希表高。</p><p style="TEXT-ALIGN: left">&nbsp; &nbsp; Trie的核心思想是空间换时间。利用字符串的公共前缀来降低查询时间的开销以达到提高效率的目的。<br><br>它有3个基本性质：<br></p><ol><li>根节点不包含字符，除根节点外每一个节点都只包含一个字符。</li><li>从根节点到某一节点，路径上经过的字符连接起来，为该节点对应的字符串。</li><li>每个节点的所有子节点包含的字符都不相同。</li></ol><h3><a name="t4" target="_blank"></a>1.2、树的构建</h3><div>举个在网上流传颇广的例子，如下：</div><div>&nbsp; &nbsp; 题目：给你100000个长度不超过10的单词。对于每一个单词，我们要判断他出没出现过，如果出现了，求第一次出现在第几个位置。<br>&nbsp; &nbsp; 分析：这题当然可以用hash来解决，但是本文重点介绍的是trie树，因为在某些方面它的用途更大。比如说对于某一个单词，我们要询问它的前缀是否出现过。这样hash就不好搞了，而用trie还是很简单。<br>&nbsp; &nbsp; 现在回到例子中，如果我们用最傻的方法，对于每一个单词，我们都要去查找它前面的单词中是否有它。那么这个算法的复杂度就是O(n^2)。显然对于100000的范围难以接受。现在我们换个思路想。假设我要查询的单词是abcd，那么在他前面的单词中，以b，c，d，f之类开头的我显然不必考虑。而只要找以a开头的中是否存在abcd就可以了。同样的，在以a开头中的单词中，我们只要考虑以b作为第二个字母的，一次次缩小范围和提高针对性，这样一个树的模型就渐渐清晰了。<br>&nbsp; &nbsp; 好比假设有b，abc，abd，bcd，abcd，efg，hii 这6个单词，我们构建的树就是如下图这样的：</div></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div style="PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; MARGIN: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; WORD-WRAP: break-word; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM-STYLE: none; PADDING-BOTTOM: 0px; BORDER-RIGHT-STYLE: none; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-STYLE: none; BORDER-LEFT-STYLE: none; PADDING-TOP: 0px"><div><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/z200777202049.jpg"></div></blockquote></div></blockquote></blockquote><div style="PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; MARGIN: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; WORD-WRAP: break-word; PADDING-TOP: 0px"><span style="font-family:SimSun;">&nbsp; 当时第一次看到这幅图的时候，便立马感到此树之不凡构造了。单单从上幅图便可窥知一二，好比大海搜人，立马就能确定东南西北中的到底哪个方位，如此迅速缩小查找的范围和提高查找的针对性，不失为一创举。</span><br>&nbsp;&nbsp; &nbsp;ok，如上图所示，对于每一个节点，从根遍历到他的过程就是一个单词，如果这个节点被标记为<span style="color:#660000;">红</span>色，就表示这个单词存在，否则不存在。<br>&nbsp; &nbsp; 那么，对于一个单词，我只要顺着他从根走到对应的节点，再看这个节点是否被标记为红色就可以知道它是否出现过了。把这个节点标记为红色，就相当于插入了这个单词。<br>&nbsp; &nbsp; 这样一来我们查询和插入可以一起完成（重点体会这个查询和插入是如何一起完成的，稍后，下文具体解释），所用时间仅仅为单词长度，在这一个样例，便是10。<br>&nbsp; &nbsp; 我们可以看到，trie树每一层的节点数是26^i级别的。所以为了节省空间。我们用动态链表，或者用数组来模拟动态。空间的花费，不会超过单词数×单词长度。</div><h3><a name="t5" target="_blank"></a>1.3、前缀查询</h3><div style="PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; MARGIN: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; WORD-WRAP: break-word; PADDING-TOP: 0px">&nbsp; &nbsp; 上文中提到”比如说对于某一个单词，我们要询问它的前缀是否出现过。这样hash就不好搞了，而用trie还是很简单“。下面，咱们来看看这个前缀查询问题：</div><div style="PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; MARGIN: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; WORD-WRAP: break-word; PADDING-TOP: 0px">&nbsp; &nbsp; 已知n个由小写字母构成的平均长度为10的单词,判断其中<strong>是否存在某个串为另一个串的前缀子串</strong>。下面对比3种方法：<br><ol><li>最容易想到的：即从字符串集中从头往后搜，看每个字符串是否为字符串集中某个字符串的前缀，复杂度为O(n^2)。</li><li>使用hash：我们用hash存下所有字符串的所有的前缀子串，建立存有子串hash的复杂度为O(n*len)，而查询的复杂度为O(n)* O(1)= O(n)。</li><li>使用trie：因为当查询如字符串abc是否为某个字符串的前缀时，显然以b,c,d....等不是以a开头的字符串就不用查找了。所以建立trie的复杂度为O(n*len)，而<strong>建立+查询在trie中是可以同时执行的</strong>，建立的过程也就可以成为查询的过程，hash就不能实现这个功能。所以总的复杂度为O(n*len)，实际查询的复杂度也只是O(len)。（说白了，就是<span style="color:#3333ff;">Trie树的平均高度h为len，所以Trie树的查询复杂度为O（h）=O（len）</span>。好比一棵二叉平衡树的高度为logN，则其查询，插入的平均时间复杂度亦为O（logN））。</li></ol><div>&nbsp; &nbsp; 下面解释下上述方法3中所说的为什么hash不能将建立与查询同时执行，而Trie树却可以：</div><div><ul><li>在hash中，例如现在要输入两个串911，911456，如果要同时查询这两个串，且查询串的同时若hash中没有则存入。那么，这个查询与建立的过程就是先查询其中一个串911，没有，然后存入9、91、911；而后查询第二个串911456，没有然后存入<span style="color:#999999;"><strong>9、91、911</strong>、</span>9114、91145、911456。因为程序没有记忆功能，所以并不知道911在输入数据中出现过，只是照常以例行事，存入9、91、911、9114、911...。也就是说用hash必须先存入所有子串，然后for循环查询。</li><li>而trie树中，存入911后，已经记录911为出现的字符串，在存入911456的过程中就能发现而输出答案；倒过来亦可以，先存入911456，在存入911时，当指针指向最后一个1时，程序会发现这个1已经存在，说明911必定是某个字符串的前缀。</li></ul></div><div>&nbsp;&nbsp; &nbsp;<strong>读者反馈</strong>@悠悠长风：<span style="font-family:Arial, Helvetica, sans-serif;color:#333333;LINE-HEIGHT: 20px">关于这点，我有不同的看法。hash也是可以实现边建立边查询的啊。当插入911时，需要一个额外的标志位，表示它是一个完整的单词。在处理911456时，也是按照前面的查询9,91,911，当查询911时，是可以找到前面插入的911，且通过标志位知道911为一个完整单词。那么就可以判断出911为911456的前缀啊。虽然trie树更适合这个问题，但是我认为hash也是可以实现边建立，边查找。</span></div><div>&nbsp;&nbsp; &nbsp;至于，有关Trie树的查找，插入等操作的实现代码，网上遍地开花且千篇一律，诸君尽可参考，想必不用我再做多余费神。</div><div><h3><a name="t6" target="_blank"></a>1.4、查询</h3></div><div>&nbsp; &nbsp; Trie树是简单但实用的数据结构，通常用于实现字典查询。我们做即时响应用户输入的AJAX搜索框时，就是Trie开始。本质上，Trie是一颗存储多个字符串的树。相邻节点间的边代表一个字符，这样树的每条分支代表一则子串，而树的叶节点则代表完整的字符串。和普通树不同的地方是，相同的字符串前缀共享同一条分支。下面，再举一个例子。给出一组单词，inn, int, at, age, adv, ant, 我们可以得到下面的Trie：<br></div></div><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><div style="PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; MARGIN: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; WORD-WRAP: break-word; PADDING-TOP: 0px"><div><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_13192967247f7E.gif"></div></div></blockquote>&nbsp; 可以看出：<br><ul><li>每条边对应一个字母。</li><li>每个节点对应一项前缀。叶节点对应最长前缀，即单词本身。</li><li>单词inn与单词int有共同的前缀“in”, 因此他们共享左边的一条分支，root-&gt;i-&gt;in。同理，ate, age, adv, 和ant共享前缀"a"，所以他们共享从根节点到节点"a"的边。</li></ul>&nbsp; &nbsp; 查询操纵非常简单。比如要查找int，顺着路径i -&gt; in -&gt; int就找到了。<br><br>&nbsp; &nbsp; 搭建Trie的基本算法也很简单，无非是逐一把每则单词的每个字母插入Trie。插入前先看前缀是否存在。如果存在，就共享，否则创建对应的节点和边。比如要插入单词add，就有下面几步：<br><ol><li>考察前缀"a"，发现边a已经存在。于是顺着边a走到节点a。</li><li>考察剩下的字符串"dd"的前缀"d"，发现从节点a出发，已经有边d存在。于是顺着边d走到节点ad</li><li>考察最后一个字符"d"，这下从节点ad出发没有边d了，于是创建节点ad的子节点add，并把边ad-&gt;add标记为d。</li></ol><div><h3><a name="t7" target="_blank"></a>1.5、Trie树的应用</h3><div>&nbsp; &nbsp; 除了本文引言处所述的问题能应用Trie树解决之外，Trie树还能解决下述问题（节选自此文：<a target="_blank" style="TEXT-ALIGN: left; LINE-HEIGHT: 26px; FONT-FAMILY: Arial; COLOR: rgb(34,0,0); FONT-SIZE: 14px; TEXT-DECORATION: none" href="http://blog.csdn.net/v_july_v/article/details/6685962">海量数据处理面试题集锦与Bit-map详解</a>）：</div><div><ul><li>3、有一个1G大小的一个文件，里面每一行是一个词，词的大小不超过16字节，内存限制大小是1M。返回频数最高的100个词。</li><li>9、1000万字符串，其中有些是重复的，需要把重复的全部去掉，保留没有重复的字符串。请怎么设计和实现？</li><li>10、 一个文本文件，大约有一万行，每行一个词，要求统计出其中最频繁出现的前10个词，请给出思想，给出时间复杂度分析。</li><li>13、寻找热门查询：</li>搜索引擎会通过日志文件把用户每次检索使用的所有检索串都记录下来，每个查询串的长度为1-255字节。假设目前有一千万个记录，这些查询串的重复读比较高，虽然总数是1千万，但是如果去除重复和，不超过3百万个。一个查询串的重复度越高，说明查询它的用户越多，也就越热门。请你统计最热门的10个查询串，要求使用的内存不能超过1G。<br>(1) 请描述你解决这个问题的思路；<br>(2) 请给出主要的处理流程，算法，以及算法的复杂度。</ul></div></div><div>&nbsp; &nbsp; 有了Trie，后缀树就容易理解了。本文接下来的第二部分，介绍后缀树。<br></div><div><br></div><div style="PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; MARGIN: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; WORD-WRAP: break-word; PADDING-TOP: 0px"><h3><a name="t8" target="_blank"></a><span style="color:#990000;">第二部分、后缀树</span></h3><h3><a name="t9" target="_blank"></a><strong>2.1、后缀树的定义</strong>&nbsp;&nbsp; &nbsp;</h3><p>&nbsp; &nbsp;&nbsp;后缀树（Suffix tree）是一种数据结构，能快速解决很多关于字符串的问题。后缀树的概念最早由Weiner 于1973年提出，既而由McCreight 在1976年和Ukkonen在1992年和1995年加以改进完善。</p><p>&nbsp;&nbsp; &nbsp;后缀，顾名思义，甚至通俗点来说，就是所谓后缀就是后面尾巴的意思。比如说给定一长度为n的字符串S=S1S2..Si..Sn，和整数i，1 &lt;= i &lt;= n，子串SiSi+1...Sn便都是字符串S的后缀。</p><p>&nbsp;&nbsp; &nbsp;以字符串S=XMADAMYX为例，它的长度为8，所以S[1..8], S[2..8], ... , S[8..8]都算S的后缀，我们一般还把空字串也算成后缀。这样，我们一共有如下后缀。对于后缀S[i..n]，我们说这项后缀起始于i。</p><p><span style="WHITE-SPACE: pre"></span>S[1..8], XMADAMYX， 也就是字符串本身，起始位置为1<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;S[2..8], MADAMYX，起始位置为2<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S[3..8], ADAMYX，起始位置为3<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S[4..8], DAMYX，起始位置为4<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S[5..8], AMYX，起始位置为5<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S[6..8], MYX，起始位置为6<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S[7..8], YX，起始位置为7<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S[8..8], X，起始位置为8<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 空字串，记为$。</p><p>&nbsp; &nbsp; 而后缀树，就是包含一则字符串所有后缀的压缩Trie。把上面的后缀加入Trie后，我们得到下面的结构：<br></p></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><div style="PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; MARGIN: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; WORD-WRAP: break-word; PADDING-TOP: 0px"><p><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_1319297841O3WB.gif"></p></div></blockquote></blockquote>&nbsp; &nbsp; 仔细观察上图，我们可以看到不少值得压缩的地方。比如蓝框标注的分支都是独苗，没有必要用单独的节点同边表示。如果我们允许任意一条边里包含多个字 母，就可以把这种没有分叉的路径压缩到一条边。另外每条边已经包含了足够的后缀信息，我们就不用再给节点标注字符串信息了。我们只需要<strong>在叶节点上标注上每项后缀的起始位置</strong>。于是我们得到下图：<br><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_1319300244pcg5.gif"></blockquote><p>&nbsp; &nbsp; 这样的结构丢失了某些后缀。比如后<strong>缀X在上图中消失了</strong>，因为它正好是字符串XMADAMYX的前缀。为了避免这种情况，我们也规定<strong>每项后缀不能是其它后缀的前缀</strong>。要解决这个问题其实挺简单，在<strong>待处理的子串后加一个空字串</strong>就行了。例如我们处理XMADAMYX前，先把XMADAMYX变为 XMADAMYX$，于是就得到suffix tree--后缀树了，如下图所示：<br><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_13193002862qt7.gif" width="700" height="300"><br></p><h3><a name="t10" target="_blank"></a><strong>2.2、后缀树与回文问题的关联</strong></h3><p>&nbsp;&nbsp; &nbsp;那后缀树同最长回文有什么关系呢？我们得先知道两个简单概念：</p><ul><li>最低共有祖先，<span style="color:#cc0000;">LCA</span>（Lowest Common Ancestor)，也就是任意两节点（多个也行）最长的共有前缀。比如下图中，节点7同节点1的共同祖先是节点5与节点10，但最低共同祖先是5。 查找LCA的算法是O(1)的复杂度，当然，代价是需要对后缀树做复杂度为O(n)的预处理。&nbsp;</li></ul><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/20130909172630015" alt=""></div></blockquote></div></blockquote></blockquote></blockquote><ul><li>广义后缀树(Generalized Suffix Tree)。传统的后缀树处理一坨单词的所有后缀。广义后缀树存储任意多个单词的所有后缀。例如下图是单词<strong><span style="font-family:&#39;Arial Black&#39;;">XMADAMYX与XYMADAMX的广义后缀 树</span></strong>。注意我们需要区分不同单词的后缀，所以叶节点用不同的特殊符号与后缀位置配对。&nbsp;</li></ul><p></p><p><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_13193005557kKd.gif" width="700" height="200"></p><p></p><h3><a name="t11" target="_blank"></a>2.3、最长回文问题的解决</h3>&nbsp;&nbsp; &nbsp;有了上面的概念，本文引言中提出的查找最长回文问题就相对简单了。咱们来回顾下引言中提出的回文问题的具体描述：找出给定字符串里的最长回文。例如输入XMADAMYX，则输出MADAM。<p></p><p>&nbsp;&nbsp; &nbsp;思维的突破点在于考察回文的半径，而不是回文本身。所谓半径，就是回文对折后的字串。比如回文MADAM 的半径为MAD，半径长度为3，半径的中心是字母D。显然，最长回文必有最长半径，且两条半径相等。还是以MADAM为例，以D为中心往左，我们得到半径 DAM；以D为中心向右，我们得到半径DAM。二者肯定相等。因为MADAM已经是单词XMADAMYX里的最长回文，我们可以肯定<strong>从D往左数的字串 DAMX与从D往右数的子串DAMYX共享最长前缀DAM</strong>。而这，正是解决回文问题的关键。现在我们有后缀树，<span style="font-family:SimSun;">怎么把从D向左数的字串DAMX变成后缀 </span><span style="font-family:KaiTi_GB2312;">呢</span>？</p><p>&nbsp;&nbsp; &nbsp;到这个地步，答案应该明显：<strong>把单词XMADAMYX翻转（<span style="font-family:&#39;Arial Black&#39;;"><span style="FONT-WEIGHT: normal">XMADAMYX=&gt;XYMADAMX，DAMX就变成后缀了</span></span>）</strong>就行了。于是我们把寻找回文的问题转换成了寻找两坨后缀的<span style="color:#cc0000;">LCA</span>的问题。当然，我们还需要知道 到底查询那些后缀间的LCA。很简单，给定字符串S，如果最长回文的中心在i，那从位置i向右数的后缀刚好是S(i)，而向左数的字符串刚好是翻转S后得到的字符串S‘的后缀S'(n-i+1)。这里的n是字符串S的长度。</p><p>&nbsp;&nbsp; &nbsp;可能上面的阐述还不够直观，我再细细说明下：</p><p>&nbsp;&nbsp; &nbsp;<strong>1、</strong>首先，还记得本第二部分开头关于后缀树的定义么： “先说说后缀的定义，顾名思义，甚至通俗点来说，就是所谓后缀就是后面尾巴的意思。比如说给定一长度为n的字符串S=S1S2..Si..Sn，和整数i，<strong>1 &lt;= i &lt;= n，子串SiSi+1...Sn便都是字符串S的后缀</strong>。”</p><p></p><p style="PADDING-BOTTOM: 2px; MARGIN: 4px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 2px">&nbsp;&nbsp; &nbsp;以字符串S=XMADAMYX为例，它的长度为8，所以S[1..8], S[2..8], ... , S[8..8]都算S的后缀，我们一般还把空字串也算成后缀。这样，我们一共有如下后缀。对于后缀S[i..n]，我们说这项后缀起始于i。</p><p style="PADDING-BOTTOM: 2px; MARGIN: 4px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 2px"><span style="WHITE-SPACE: pre"></span>S[1..8], XMADAMYX， 也就是字符串本身，起始位置为1<br><span style="WHITE-SPACE: pre"></span>&nbsp; S[2..8], MADAMYX，起始位置为2<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp; S[3..8], ADAMYX，起始位置为3<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S[4..8], DAMYX，起始位置为4<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S[5..8], AMYX，起始位置为5<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S[6..8], MYX，起始位置为6<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S[7..8], YX，起始位置为7<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S[8..8], X，起始位置为8<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 空字串，记为$。</p><p>&nbsp;&nbsp; &nbsp;<strong>2、</strong>对单词XMA<u>DAMYX</u>而言，回文中心为D，那么D向右的后缀<span style="color:#cc0000;">DAMYX</span>假设是<strong>S(i)</strong><span style="color:#3333ff;">（当N=8，i从1开始计数，i=4时，便是S(4..8)）</span>;而对于翻转后的单词XYMA<u>DAMX</u>而言，回文中心D向右对应的后缀为<span style="color:#cc0000;">DAMX</span>，也就是<strong>S'(N-i+1)<span style="FONT-WEIGHT: normal"><span style="color:#3333ff;">(（N=8，i=4，便是S‘（5..8））</span></span>&nbsp;</strong>。此刻已经可以得出，它们共享最长前缀，即<strong><span style="font-family:&#39;Arial Black&#39;;">LCA（DAMYX，DAMX）=</span></strong><span style="color:#cc0000;"><span style="font-family:&#39;Arial Black&#39;;"><strong>DAM</strong></span></span>。有了这套直观解释，算法自然呼之欲出：</p><ol><li>预处理后缀树，使得查询LCA的复杂度为O(1)。这步的开销是O(N)，N是单词S的长度 ；</li><li>对单词的每一位置i(也就是从0到N-1)，获取LCA(S(i), S‘(N-i+1)) 以及LCA(S(i+1), S’(n-i+1))。查找两次的原因是我们需要考虑奇数回文和偶数回文的情况。这步要考察每坨i，所以复杂度是O(N) ；</li><li>找到最大的LCA，我们也就得到了回文的中心i以及回文的半径长度，自然也就得到了最长回文。总的复杂度O(n)。&nbsp;</li></ol>&nbsp;&nbsp; &nbsp;用上图做例子，i为4时，LCA(4$, 5#)为DAM，正好是最长半径。当然，这只是直观的叙述。<br>&nbsp;&nbsp; &nbsp;上面大致描述了后缀树的基本思路。要想写出实用代码，至少还得知道下面的知识：<br><ul><li>创建后缀树的O(n)算法。此算法有很多种，无论Peter Weiner的73年年度最佳算法，还是Edward McCreight1976的改进算法，还是1995年E. Ukkonen大幅简化的算法（本文第4部分将重点阐述这种方法），还是Juha Kärkkäinen 和 Peter Sanders2003年进一步简化的线性算法，都是O（n）的时间复杂度。至于实际中具体选择哪一种算法，可依实际情况而定。&nbsp;</li><li>实现后缀树用的数据结构。比如常用的子结点加兄弟节点列表，Directed&nbsp;优化后缀树空间的办法。比如不存储子串，而存储读取子串必需的位置。以及Directed Acyclic Word Graph，常缩写为黑哥哥们挂在嘴边的DAWG。&nbsp;</li></ul><h3><a name="t12" target="_blank"></a>2.4、后缀树的应用</h3>&nbsp;&nbsp; &nbsp;后缀树的用途，总结起来大概有如下几种&nbsp;<br><p></p><ol><li>查找字符串o是否在字符串S中。&nbsp;<br>&nbsp;&nbsp;方案：用S构造后缀树，按在trie中搜索字串的方法搜索o即可。&nbsp;<br>&nbsp;&nbsp;原理：若o在S中，则o必然是S的某个后缀的前缀。&nbsp;<br>例如S: leconte，查找o: con是否在S中,则o(con)必然是S(leconte)的后缀之一conte的前缀.有了这个前提，采用trie搜索的方法就不难理解了。</li><li>指定字符串T在字符串S中的重复次数。&nbsp;<br>&nbsp;&nbsp;方案：用S+’$'构造后缀树，搜索T节点下的叶节点数目即为重复次数&nbsp;<br>&nbsp;&nbsp;原理：如果T在S中重复了两次，则S应有两个后缀以T为前缀，重复次数就自然统计出来了。</li><li>字符串S中的最长重复子串&nbsp;<br>&nbsp;&nbsp;方案：原理同2，具体做法就是找到最深的非叶节点。&nbsp;<br>&nbsp;&nbsp;这个深是指从root所经历过的字符个数，最深非叶节点所经历的字符串起来就是最长重复子串。&nbsp;<br>为什么要非叶节点呢?因为既然是要重复，当然叶节点个数要&gt;=2。&nbsp;</li><li>两个字符串S1，S2的最长公共部分&nbsp;<br>&nbsp;&nbsp;方案：将S1#S2$作为字符串压入后缀树，找到最深的非叶节点，且该节点的叶节点既有#也有$(无#)。&nbsp;</li></ol><p>&nbsp;&nbsp; &nbsp;后缀树的代码实现，下期再续。第二部分、后缀树完。<br></p><h3><a name="t13" target="_blank"></a><span style="color:#990000;">第三部分、后缀树的构造方法-Ukkonen</span></h3><p>&nbsp;&nbsp; &nbsp;接下来，咱们来了解后缀树的构造方法-Ukkomen。为了兼顾上文内容，以及加深印象，本部分打算从Trie树从头到位重新开始阐述一切。</p><p>&nbsp;&nbsp; &nbsp;Ukkonen的构造法O(n), 它比Sartaj Sahni的构造法O(nr), r为字母表大小 在时间上更有优势. 但我们不能说Sartaj Sahni的算法慢, 因为r往往会很小, 因此实际效率也接近线性, 两种构造法在思想上均有可取之处.</p><p></p><h3><a name="t14" target="_blank"></a>3.1、问题的起源</h3><p></p><p style="TEXT-INDENT: 2em">字符串匹配问题是程序员经常要面对的问题. 字符串匹配算法的改进可以使许多工程受益良多, 比如数据压缩和DNA排列。你可以把自己想象成一名工作于DNA排列工程的程序员. 那些基因研究者们天天忙着分切病毒的基因材料, 制造出一段一段的核苷酸序列. 他们把这些序列发到你的服务器里, 指望你在基因数据库中定位. 要知道, 你的数据库里有数百种病毒的数据, 而一个特定的病毒可以有成千上万的碱基. 你的程序必须像C/S工程那样实时向博士们反馈信息, 这需要一个很好的方案。</p><p style="TEXT-INDENT: 2em">&nbsp;很明显, 在这个问题上采取暴力算法是极其低效的. 这种方法需要你在基因数据库里对比每一个核苷酸, 测试一个较长的基因段基本会把你的C/S系统变成一台古老的批处理机。</p><h3><a name="t15" target="_blank"></a>3.2、直觉上的解决方法</h3><p style="TEXT-INDENT: 2em">由于基因数据库一般是不变的, 通过预处理来把搜索简化或许是个好主意. 一种预处理的方法是建立一棵Trie. 我们通过Trie引申出一种东西叫作后缀Trie. (后缀Trie离后缀树仅一步之遥.) 首先, Trie是一种n叉树, n为字母表大小, 每个节点表示从根节点到此节点所经过的所有字符组成的字符串. 而后缀Trie的 “后缀” 说明这棵Trie包含了所给字段的所有后缀 (也许正是一个病毒基因).</p><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em"><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_1319729568ZZbt.gif">&nbsp;</p></blockquote></blockquote></blockquote><p style="TEXT-INDENT: 2em"></p><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em">图1 BANANAS的后缀Trie</p></blockquote></blockquote></blockquote></blockquote></blockquote><p style="TEXT-INDENT: 2em">上展示了文本BANANAS的后缀Trie. 关于这棵Trie有两个地方需要注意. 第一, 从根节点开始, BANANAS的每一个后缀都插入到Trie中, 包括BANANAS, ANANAS, NANAS, ANAS, NAS, AS, S. 第二, 鉴于这种结构, 你可以通过从根节点往下匹配的方式搜索到单词的任何一个子串.</p><p style="TEXT-INDENT: 2em">这里所说的第二点正是我们认为后缀Trie优秀的原因. 如果你输入一个长度为N的文本并想在其中搜索一个长度为M的串, 传统的暴力匹配需要进行N*M次字符对比, 而一些改进过的匹配技术, 比如像Boyer-Moore算法, 可以在O(N+M)的时间开销内解决问题, 平均效率更是令人满意. 然而, 后缀Trie亮出了O(M)的牌子, 彻底鄙视了其他算法的成绩, 后缀Trie对比的次数仅仅相当于被搜索串的长度!</p><p style="TEXT-INDENT: 2em">这确实是可圈可点的威力, 这意味着你能通过仅仅7次对比便在莎士比亚所有作品中找出BANANAS. 但有一点我们可不能忘了, 构造后缀Trie也是需要时间的.</p><p style="TEXT-INDENT: 2em">后缀Trie之所以没有家喻户晓正是因为构造它需要O(n2)的时间和空间. 平方级的开销使它在最需要它的领域 --- 长串搜索 中被拒之门外.</p><h3><a name="t16" target="_blank"></a>3.3、横空出世</h3><p style="TEXT-INDENT: 2em">直到1976年, Edward McCreigh发表了一篇论文, 咱们的后缀树问世了. 后缀Trie的困境被彻底打破.</p><p style="TEXT-INDENT: 2em">后缀树跟后缀Trie有着一样的布局, 但它把只有一个儿子的节点给剔除了. 这个过程被称为路径压缩, 这意味着树上的某些边将表示一个序列而不是单独的字符.</p><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em"><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_13197301072TJb.gif"></p></blockquote></blockquote></blockquote><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em">图2 &nbsp;&nbsp;BANANAS的后缀树</p></blockquote></blockquote></blockquote></blockquote></blockquote><p style="TEXT-INDENT: 2em">图2是由图1的后缀Trie转化而来的后缀树. 你会发现这树基本还是那个形状, 只是节点变少了. 在剔除了只有一个儿子的节点之后, 总节点数由23降为11. 经过证明, 在最坏情况下, 后缀树的节点数也不会超过2N (N为文本的长度). 这使构造后缀树的线性时空开销成为可能.</p><p style="TEXT-INDENT: 2em">然而, McCreight最初的构造法是有些缺陷的, 原则上它要按逆序构造, 也就是说字符要从末端开始插入. 如此一来, 便不能作为在线算法, 它变得更加难以应用于实际问题, 如数据压缩.</p><p style="TEXT-INDENT: 2em">20年后, 来自赫尔辛基理工大学的Esko Ukkonen把原算法作了一些改动, 把它变成了从左往右. 本文接下来的所有描述和代码都是基于Esko Ukkonen的成果.</p><p style="TEXT-INDENT: 2em">对于所给的文本T, Esko Ukkonen的算法是由一棵空树开始, 逐步构造T的每个前缀的后缀树. 比如我们构造BANANAS的后缀树, 先由B开始, 接着是BA, 然后BAN, … . 不断更新直到构造出BANANAS的后缀树.</p><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em"><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_13197304194MBz.gif"></p></blockquote><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em">图3 &nbsp;逐步构造后缀树</p></blockquote></blockquote></blockquote></blockquote></blockquote><br><h3><a name="t17" target="_blank"></a>3.4、初窥门径</h3><p style="TEXT-INDENT: 2em">加入一个新的前缀需要访问树中已有的后缀. 我们从最长的一个后缀开始(图3中的BAN), 一直访问到最短的后缀(空后缀). 每个后缀会在以下三种节点的其中一种结束.</p><p style="TEXT-INDENT: 2em"></p><ul><li>一个叶节点. 这个是常识了, 图4中标号为1, 2, 4, 5的就是叶节点.</li><li>一个显式节点. 图4中标号为0, 3的是显式节点, 它表示该节点之后至少有两条边.</li><li>一个隐式节点. 图4中, 前缀BO, BOO, 或者非前缀OO, 它们都在某条表示序列的边上结束, 这些位置就叫作隐式节点. 它表示后缀Trie中存在的由于路径压缩而剔除的节点. 在后缀树的构造过程中, 有时要把一些隐式节点转化为显式节点。</li></ul><p></p><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p>&nbsp;<img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_1319730602j11k.gif"></p></blockquote></blockquote></blockquote></blockquote><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em">&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; 图4 &nbsp;加入BOOK之后的BOOKKEEPER</p></blockquote></blockquote></blockquote><p style="TEXT-INDENT: 2em">(也就是BOOK的后缀树)</p><p style="TEXT-INDENT: 2em">如图4, 在加入BOOK之后, 树中有5个后缀(包括空后缀). 那么要构造下一个前缀BOOKK的后缀树的话, 只需要访问树中已存在的每一个后缀, 然后在它们的末尾加上K.</p><p style="TEXT-INDENT: 2em">前4个后缀BOOK, OOK, OK和K都在叶节点上结束. 由于我们要路径压缩, 只需要在通往叶节点的边上直接加一个字符, 而不需要创建一个新节点.</p><p style="TEXT-INDENT: 2em">在所有叶节点更新之后, 我们还需要在空后缀后面加上K. 这时候我们发现已经存在一条从0节点出发的边的首字符为K, 没必要画蛇添足了. 换句话说, 新加入的后缀K可以在0节点和2节点之间的隐式节点中找到. 最终形态见图5.</p><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em">&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;<img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_1319730709CMuK.gif"></p></blockquote></blockquote></blockquote><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em">&nbsp;&nbsp; &nbsp; &nbsp; 图5&nbsp;加入BOOKK之后的BOOKKEEPER</p></blockquote></blockquote></blockquote><p style="TEXT-INDENT: 2em">相比图4, 树的结构没有发生变化</p><p style="TEXT-INDENT: 2em">如果你是一位敏感的读者, 可能要发问了, 如果加入K我们什么都不做的话, 在查找的时候如何知道它到底是一个后缀呢还是某个后缀的一截? 如果你同时又是一位熟悉字符串算法的朋友, 心里可能马上就有答案了 --- 我们只需要在文本后面加个字母表以外的字符, 比如$或者#. 那我们查找到K$或K#的话就说明这是一个后缀了.</p><h3><a name="t18" target="_blank"></a>3.5、稍微麻烦一点的事情</h3><p style="TEXT-INDENT: 2em">从图4到图5这个更新过程是相对简单的, 其中我们执行了两种更新: 一种是将某条边延长, 另一种是啥都不做. 但接下来往图5继续加入BOOKKE, 我们则会遇到另外两种更新:</p><ol><li>创建一个新节点来割开某一隐式节点所处的边, 并在其后加一条新边.</li><li>在显式节点后加一条新边.</li></ol><p></p><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em"><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_1319730966dJcx.gif"></p></blockquote><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em">图6先分割, 再添加</p></blockquote></blockquote></blockquote></blockquote></blockquote><p style="TEXT-INDENT: 2em">当我们往图5的树中加入BOOKKE的时候, 我们是从已存在的最长后缀BOOKK开始, 一直操作到最短的后缀空后缀. 更新最长的后缀必然是更新叶节点, 之前提到了, 非常简单. 除此之外, 图5中结束在叶节点上的后缀还有OOKK, OKK, KK. 图6的第一棵树展示了这一类节点的更新.</p><p style="TEXT-INDENT: 2em">图5中首个不是结束在叶节点上的后缀是K. 这里我们先引入一个定义:</p><p style="TEXT-INDENT: 2em">在每次更新后缀树的过程中, 第一个非叶节点称为激活节点. 它有以下性质:</p><p style="TEXT-INDENT: 2em"></p><ol><li>所有比激活节点长的后缀都在叶节点上结束.</li><li>所有在激活节点之后加入的后缀都不在叶节点上结束.</li></ol><p></p><p style="TEXT-INDENT: 2em">后缀K在边KKE上的隐式节点结束. 在后缀树中我们要判断一个节点是不是非叶节点需要看它是否有跟待加入字符相同的儿子, 即本例中的E.</p><p style="TEXT-INDENT: 2em">一眼可以看出, KKE中的第一个K只有一个儿子: K. 所以它是非叶节点(这里同时也是激活节点), 我们要给他加一个儿子来表示E. 这个过程有两个步骤:</p><p style="TEXT-INDENT: 2em"></p><ol><li>在第一个K和第二个K之间把边分割开, 于是第一个K(隐式节点)成了一个显式节点, 如图6第二棵树.</li><li>在刚刚变身而来的显式节点后加一个新节点表示E, 如图6第三棵树. 由此我们又多了一个叶节点。</li></ol><p></p><p style="TEXT-INDENT: 2em">后缀K更新之后, 别忘了还有空后缀. 空后缀在根节点(节点0)结束, 显然此时根节点是一个显式节点. 我们看一下它后面有没有以E开头的边---没有, 那么加入一个新的叶节点(如果存在以E开头的边, 则不用任何操作). 最终如图7.</p><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em"><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_13197311491AKO.gif">&nbsp;</p></blockquote></blockquote></blockquote><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em">图7</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h3><a name="t19" target="_blank"></a>3.6、归纳, 反思, 优化</h3><p style="TEXT-INDENT: 2em">借助后缀树的特性, 我们可以做出一个相当有效的算法. 首先一个重要的特性是: 一朝为叶, 终生为叶. 一个叶节点自诞生以后绝不会有子孙. 更重要的是, 每当我们往树上加入一个新的前缀, 每一条通往叶节点的边都会延长一个字符(新前缀的最后一个字符). 这使得处理通往叶节点的边变得异常简单, 我们完全可以在创建叶节点的时候就把当前字符到文本末的所有字符一股脑塞进去. 是的, 我们不需要知道后面的字符是啥, 但我们知道它们最终都要被加进去. 因此, 一个叶节点诞生的时候, 也正是它可以被我们遗忘的时候. 你可能会担心通往叶节点的边被分割了怎么办, 那也不要紧, 分割之后只是起点变了, 尾部该怎么着还是怎么着.</p><p style="TEXT-INDENT: 2em">如此一来, 我们只需要关心显式节点和隐式节点上的更新.</p><p style="TEXT-INDENT: 2em">还要提到一个节约时间的方法. 当我们遍历所有后缀时, 如果某个后缀的某个儿子跟待加字符(新前缀最后一个字符)相同, 那么我们当前前缀的所有更新就可以停止了. 如果你理解了后缀树的本质, 你会知道一旦待加字符跟某个后缀的某个儿子相同, 那么更短的后缀必然也有这个儿子. 我们不妨把首个这样的节点定义为结束节点. 比结束节点长的后缀必然是叶节点, 这一点很好解释, 要么本来就是叶节点, 要么就是新创建的节点(新创建的必然是叶节点). 这意味着, 每一个前缀更新完之后, 当前的结束节点将成为下一轮更新的激活节点.</p><p style="TEXT-INDENT: 2em">好了, 现在我们可以把后缀树的更新限制在激活节点和结束节点之间, 效率有了很大的改善. 整理成伪代码如下:</p><p style="TEXT-INDENT: 2em">Update( 新前缀 )<br>{<br><span style="WHITE-SPACE: pre"></span>&nbsp; 当前后缀 = 激活节点<br><span style="WHITE-SPACE: pre"></span>&nbsp; 待加字符 = 新前缀最后一个字符<br>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;done = false;<br><span style="WHITE-SPACE: pre"></span>&nbsp; while ( !done ) {<br><span style="WHITE-SPACE: pre"></span>&nbsp; if ( 当前后缀在显式节点结束 )&nbsp;<br><span style="WHITE-SPACE: pre"></span>&nbsp; {<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp; if ( 当前节点后没有以待加字符开始的边 )<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在当前节点后创建一个新的叶节点<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp; else<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; done = true;<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;} else {<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp; if ( 当前隐式节点的下一个字符不是待加字符 )&nbsp;<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp; {<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 从隐式节点后分割此边<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在分割处创建一个新的叶节点<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp; } else<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; done = true;<br><span style="WHITE-SPACE: pre"></span>&nbsp; &nbsp; if ( 当前后缀是空后缀 )<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done = true;<br><span style="WHITE-SPACE: pre"></span>&nbsp; &nbsp; else<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前后缀 = 下一个更短的后缀<br><span style="WHITE-SPACE: pre"></span>&nbsp;&nbsp;&nbsp;&nbsp; }<br><span style="WHITE-SPACE: pre"></span>&nbsp; 激活节点 = 当前后缀<br>}</p><h3><a name="t20" target="_blank"></a>3.7、后缀指针</h3><p style="TEXT-INDENT: 2em">上面的伪代码看上去很完美, 但它掩盖了一个问题. 注意到第21行, “下一个更短的后缀”, 如果呆板地沿着树枝去搜索我们想要的后缀, 那这种算法就不是线性的了. 要解决此问题, 我们得附加一种指针: 后缀指针. 后缀指针存在于每个结束在非叶节点的后缀上, 它指向“下一个更短的后缀”. 即, 如果一个后缀表示文本的第0到第N个字符, 那么它的后缀指针指向的节点表示文本的第1到第N个字符.</p><p style="TEXT-INDENT: 2em">图8是文本ABABABC的后缀树. 第一个后缀指针在表示ABAB的节点上. ABAB的后缀指针指向表示BAB的节点. 同样地, BAB也有它的后缀指针, 指向AB. 如此这般.</p><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em"><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_1319731248b2lY.gif">&nbsp;</p></blockquote></blockquote></blockquote><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><p style="TEXT-INDENT: 2em">图8&nbsp;加上后缀指针(虚线)的ABABABC的后缀树</p></blockquote></blockquote></blockquote><p style="TEXT-INDENT: 2em">介绍一下如何创建后缀指针. 后缀指针的创建是跟后缀树的更新同步的. 随着我们从激活节点移动到结束节点, 我把每个新的叶节点的父亲的路径保存下来. 每当创建一条新边, 我同时也在上一个叶节点的父亲那儿创建一个后缀指针来指向当前新边开始的节点. (显然, 我们不能在第一条新边上做这样的操作, 但除此之外都可以这么做.)</p><p style="TEXT-INDENT: 2em">有了后缀指针, 就可以方便地一个后缀跳到另一个后缀. 这个关键性的附加品使得算法的时间上限成功降为O(N)。</p><h3><a name="t21" target="_blank"></a><span style="color:#990000;">第四部分、全文总结<br></span>自动机，KMP算法，Extend-KMP，后缀树，后缀数组，trie树，trie图及其应用</h3><p>&nbsp;&nbsp; &nbsp;涉及到字符串的问题，无外乎这样一些算法和数据结构：自动机，KMP算法，Extend-KMP，后缀树，后缀数组，trie树，trie图及其应用。当然这些都是比较高级的数据结构和算法，而这里面最常用和最熟悉的大概是kmp，即使如此还是有相当一部分人也不理解kmp，更别说其他的了。当然一般的字符串问题中，我们只要用简单的暴力算法就可以解决了，然后如果暴力效率太低，就用个hash。当然hash也是一个面试中经常被用到的方法。这样看来，这样的一些算法和数据结构实际上很少会被问到，不过如果使用它们一般可以得到很好的线性复杂度的算法。</p>&nbsp;&nbsp; &nbsp;老实说，字符串问题的确挺复杂的，出来一个如果用暴力，hash搞不定，就很难再想其他的方法，当然有些可以用动态规划。下图主要说明下这些算法数据结构之间的关系。图中黄色部分主要写明了这些算法和数据结构的一些关键点。<br><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_1319310556e53A.gif" width="700" height="500"><br><p>&nbsp;&nbsp; &nbsp;图中可以看到这样一些关系：extend-kmp 是kmp的扩展；ac自动机是kmp的多串形式；它是一个有限自动机；而trie图实际上是一个确定性有限自动机；ac自动机，trie图，后缀树实际上都是一种trie；后缀数组和后缀树都是与字符串的后缀集合有关的数据结构；trie图中的后缀指针和后缀树中的后缀链接这两个概念及其一致。<br></p><p>&nbsp;&nbsp; &nbsp;后缀树的构造可以用Ukkonen算法在线性时间内完成[，但是不仅构造算法实现相当复杂，而且后缀树存在着致命弱点：空间开销大且对大字母表时间效率不理想。至于后缀数组下次阐述，这里简单介绍下extend-kmp。而在介绍extend-kmp之前，咱们先要回顾下KMP算法。<br></p><div><h4><a name="t22" target="_blank"></a>&nbsp;kmp</h4>&nbsp;&nbsp; &nbsp;首先这个匹配算法，主要思想就是要充分利用上一次的匹配结果，找到匹配失败时，模式串可以向前移动的最大距离。这个最大距离，必须要保证不会错过可能的匹配位置，因此这个最大距离实际上就是模式串当前匹配位置的next数组值。也就是max{Aj&nbsp;是&nbsp;Pi&nbsp;的后缀&nbsp;&nbsp;j&nbsp;&lt;&nbsp;i}，pi表示字符串A[1...i],Aj表示A[1...j]。模式串的next数组计算则是一个自匹配的过程。也是利用已有值next[1...i-1]计算next[i]的过程。我们可以看到，如果A[i]&nbsp;=&nbsp;A[next[i-1]+1]&nbsp;那么next[i]&nbsp;=&nbsp;next[i-1]，否则，就可以将模式串继续前移了。<br>整个过程是这样的：<br>void&nbsp;next_comp(char&nbsp;*&nbsp;str){<br>&nbsp;&nbsp;&nbsp;int&nbsp;next[N+1];<br>&nbsp;&nbsp;&nbsp;int&nbsp;k&nbsp;=&nbsp;0;<br>&nbsp;&nbsp;&nbsp;next[1]&nbsp;=&nbsp;0;<br>&nbsp;&nbsp;&nbsp;//循环不变性，每次循环的开始，k&nbsp;=&nbsp;next[i-1]&nbsp;<br>&nbsp;&nbsp;&nbsp;for(int&nbsp;i&nbsp;=&nbsp;2&nbsp;;&nbsp;i&nbsp;&lt;=&nbsp;N&nbsp;;&nbsp;i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果当前位置不匹配，或者还推进到字符串开始，则继续推进<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(A[k+1]&nbsp;!=&nbsp;A[i]&nbsp;&amp;&amp;&nbsp;k&nbsp;!=&nbsp;0){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;=&nbsp;next[k];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(A[k+1]&nbsp;==&nbsp;A[i])&nbsp;k++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next[i]&nbsp;=&nbsp;k;<br>&nbsp;&nbsp;&nbsp;}&nbsp;<br>}<br>&nbsp;&nbsp; &nbsp;复杂度分析：从上面的过程可以看出，内部循环再不断的执行k&nbsp;=&nbsp;next[k]，而这个值必然是在缩小，也就是是没执行一次k至少减少1；另一方面k的初值是0，而最多++&nbsp;N次，而k始终保持非负，很明显减少的不可能大于增加的那些，所以整个过程的复杂度是O(N)。<br>&nbsp;&nbsp; &nbsp;上面是next数组的计算过程，而整个kmp的匹配过程与此类似。<br><h4><a name="t23" target="_blank"></a>extend-kmp</h4>&nbsp;&nbsp; &nbsp;为什么叫做扩展-kmp呢，首先我们看它计算的内容，它是要求出字符串B的后缀与字符串A的最长公共前缀。extend[i]表示B[i...B_len]&nbsp;与A的最长公共前缀长度，也就是要计算这个数组。观察这个数组可以知道，kmp可以判断A是否是B的一个子串，并且找到第一个匹配位置？而对于extend[]数组来说，则可以利用它直接解决匹配问题，只要看extend[]数组元素是否有一个等于len_A即可。显然这个数组保存了更多更丰富的信息，即B的每个位置与A的匹配长度。<br>&nbsp;&nbsp; &nbsp;计算这个数组extend也采用了于kmp类似的过程。首先也是需要计算字符串A与自身后缀的最长公共前缀长度。我们设为next[]数组。当然这里next数组的含义与kmp里的有所过程。但它的计算，也是利用了已经计算出来的next[1...i-1]来找到next[i]的大小，整体的思路是一样的。<br>&nbsp;&nbsp; &nbsp;具体是这样的：观察下图可以发现<br></div><blockquote style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px"><div><img alt="" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/0_13193106095EGr.gif"></div></blockquote><div>&nbsp;&nbsp; &nbsp;首先在1...i-1,要找到一个k，使得它满足k+next[k]-1最大，也就是说，让k加上next[k]长度尽量长。实际上下面的证明过程中就是利用了每次计算后k+next[k]始终只增不减，而它很明显有个上界，来证明整个计算过程复杂度是线性的。如下图所示，假设我们已经找到这样的k，然后看怎么计算next[i]的值。设len&nbsp;=&nbsp;k+next[k]-1(图中我们用Ak代表next[k]),分情况讨论：<br><ul><li>如果len&nbsp;&lt;&nbsp;i&nbsp;也就是说，len的长度还未覆盖到Ai,这样我们只要从头开始比较A[i...n]与A的最长公共前缀即可，这种情况下很明显的，每比较一次，必然就会让i+next[i]-1增加一.</li><li>如果len&nbsp;&gt;=&nbsp;i,就是我们在图中表达的情形，这时我们可以看到i这个位置现在等于i-k+1这个位置的元素，这样又分两种情况：</li></ul><ol><ol><li>如果&nbsp;L&nbsp;=&nbsp;next[i-k+1]&nbsp;&gt;=&nbsp;len-i+1,也就是说L处在第二条虚线的位置，这样我们可以看到next[i]的大小，至少是len-i+1,然后我们再从此处开始比较后面的还能否匹配，显然如果多比较一次，也会让i+A[i]-1多增加1.</li><li>如果&nbsp;L&nbsp;&lt;&nbsp;len-i+1&nbsp;也就是说L处在第一条虚线位置，我们知道A与Ak在这个位置匹配，但Ak与Ai-k+1在这个位置不匹配，显然A与与Ai-k+1在这个位置也不会匹配，故next[i]的值就是L。这样next[i]的值就被计算出来了，从上面的过程中我们可以看到，next[i]要么可以直接由k这个位置计算出来，要么需要在逐个比较，但是如果需要比较，则每次比较会让k+next[k]-1的最大值加1.而整个过程中这个值只增不减，而且它有一个很明显的上界k+next[k]-1&nbsp;&lt;&nbsp;2*len_A,可见比较的次数要被限制到这个数值之内，因此总的复杂度将是O(N)的。&nbsp;</li></ol></ol><div>&nbsp; &nbsp; 关于KMP，更多可参见此文：<a target="_blank" href="http://blog.csdn.net/v_july_v/article/details/7041827">从头到尾彻底理解KMP（2014年8月22日版）</a></div></div><div><br></div><div><br></div><h3><a name="t24" target="_blank"></a>本文参考及推荐阅读</h3><ol><li>维基百科：Trie树，后缀树；</li><li>兔子的算法集中营：后缀树 http://www.cppblog.com/superKiki/archive/2010/10/29/131786.aspx；</li><li>银河里的星星：字符串 http://duanple.blog.163.com/blog/static/709717672009825004092/；</li><li>后缀树的构造方法-Ukkonen详解 3xian / 三鲜 in GDUT http://blog.163.com/lazy_p/blog/static/13510721620108139476816/<br></li><li>E.M. McCreight. A space-economical suffix tree construction algorithm. Journal of the ACM, 23:262-272, 1976.</li><li>E. Ukkonen. On-line construction of suffix trees. Algorithmica, 14(3):249-260, September 1995.</li><li>Mark Nelson. Fast string searching with suffix trees. 1996.<br></li><li>fsdev的专栏：实用算法实现-第8篇后缀树和后缀数组 [1简介]<br></li><li>深度探索c++对象模型 侯捷译 P152~168。</li><li>结构之法算法之道blog：<a target="_blank" style="LINE-HEIGHT: 26px; FONT-FAMILY: Arial; COLOR: rgb(34,0,0); FONT-SIZE: 14px; TEXT-DECORATION: none" href="http://blog.csdn.net/v_JULY_v/archive/2011/04/28/6370650.aspx">第三章、寻找最小的k个数</a>，<a target="_blank" style="TEXT-ALIGN: left; LINE-HEIGHT: 26px; FONT-FAMILY: Arial; COLOR: rgb(34,0,0); FONT-SIZE: 14px; TEXT-DECORATION: none" href="http://blog.csdn.net/v_july_v/article/details/6685962">海量数据处理面试题集锦与Bit-map详解</a>；</li><li><a target="_blank" href="http://www.ibaiyang.org/2013/01/06/suffix-tree-introduction/"><span style="font-family:Comic Sans MS;font-size:12px;">http://www.ibaiyang.org/2013/01/06/suffix-tree-introduction/</span></a>。<br></li><li>从头到尾彻底理解KMP（2014年8月22日版）：<a target="_blank" href="http://blog.csdn.net/v_july_v/article/details/7041827">http://blog.csdn.net/v_july_v/article/details/7041827</a><br></li></ol><div style="DISPLAY: none; TOP: 49px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=http%3A%2F%2Fblog.csdn.net%2Fv_JULY_v&amp;pid=AGyTg&amp;ie=utf8">搜索</a><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 59px; HEIGHT: 28px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="28" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="59" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=59&amp;height=28" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div><div style="Z-INDEX: 99; POSITION: absolute; WIDTH: 0px; HEIGHT: 0px; TOP: 0px; LEFT: 0px"><embed id="ZeroClipboardMovie_1" height="0" name="ZeroClipboardMovie_1" type="application/x-shockwave-flash" align="middle" pluginspage="http://www.macromedia.com/go/getflashplayer" width="0" src="http://www.sogou.com/js/vr/zcb.swf" wmode="transparent" flashvars="id=1&amp;width=0&amp;height=0" allowfullscreen="false" allowscriptaccess="always" bgcolor="#ffffff" quality="best" menu="false" loop="false"></div></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 49px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#"><span style="font-size:16px;color:#000000;"><span style="LINE-HEIGHT: normal; FONT-SIZE: 12px">复制</span></span></a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=http%3A%2F%2Fblog.csdn.net%2Fv_JULY_v&amp;pid=AGyTg&amp;ie=utf8"><span style="font-family:Arial, Verdana, sans-serif;font-size:16px;color:#000000;"><span style="LINE-HEIGHT: normal; FONT-SIZE: 12px">搜索</span></span></a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 6982px; LEFT: 59px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=http%3A%2F%2Fduanple.blog.163.com%2Fblog%2Fstatic%2F709717672009825004092&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 6982px; LEFT: 59px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=http%3A%2F%2Fduanple.blog.163.com%2Fblog%2Fstatic%2F709717672009825004092&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 8885px; LEFT: 197px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%2F%2F%20virtual.cpp%20%3A%20%E5%AE%9A%E4%B9%89%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%85%A5%E5%8F%A3%E7%82%B9%E3%80%82%0A%2F%2F%23include%20%22stdafx.h%22%0A%23include%20%3Ciostream%3E%0Ausing%20&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 8885px; LEFT: 197px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%2F%2F%20virtual.cpp%20%3A%20%E5%AE%9A%E4%B9%89%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%85%A5%E5%8F%A3%E7%82%B9%E3%80%82%0A%2F%2F%23include%20%22stdafx.h%22%0A%23include%20%3Ciostream%3E%0Ausing%20&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 1637px; LEFT: 73px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E8%AF%BB%E8%80%85%E5%8F%8D%E9%A6%88&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 1637px; LEFT: 73px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E8%AF%BB%E8%80%85%E5%8F%8D%E9%A6%88&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 432px; LEFT: 497px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 432px; LEFT: 497px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 2405px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%AE%9E%E7%8E%B0&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 2405px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%AE%9E%E7%8E%B0&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 5393px; LEFT: 210px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=Trie%20tree%3B%0A%09string%20s%3B%0A%09s%20%3D%20%22inn%22%3B%0A%09tree.Insert(s)%3B%0A%09s%20%3D%20%22int%22%3B%0A%09tree.Insert(s)%3B%0A&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 5393px; LEFT: 210px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=Trie%20tree%3B%0A%09string%20s%3B%0A%09s%20%3D%20%22inn%22%3B%0A%09tree.Insert(s)%3B%0A%09s%20%3D%20%22int%22%3B%0A%09tree.Insert(s)%3B%0A&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 4711px; LEFT: 148px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%2F%2F%20trie.cpp%20%3A%20%E5%AE%9A%E4%B9%89%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%85%A5%E5%8F%A3%E7%82%B9%E3%80%82%0A%2F%2F%0A%2F%2Fcopyright%40wanglikai91%0A%2F%2Fupdated%402011.10.24%20Jul&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 4711px; LEFT: 148px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%2F%2F%20trie.cpp%20%3A%20%E5%AE%9A%E4%B9%89%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%85%A5%E5%8F%A3%E7%82%B9%E3%80%82%0A%2F%2F%0A%2F%2Fcopyright%40wanglikai91%0A%2F%2Fupdated%402011.10.24%20Jul&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; VISIBILITY: hidden; TOP: 2467px; LEFT: 173px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E4%B8%BB%E4%BD%93%E4%BB%A3%E7%A0%81&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; VISIBILITY: hidden; TOP: 2467px; LEFT: 173px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E4%B8%BB%E4%BD%93%E4%BB%A3%E7%A0%81&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 6496px; LEFT: 793px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E6%8A%8A%E5%8D%95%E8%AF%8DXMADAMYX%E7%BF%BB%E8%BD%AC&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 6496px; LEFT: 793px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E6%8A%8A%E5%8D%95%E8%AF%8DXMADAMYX%E7%BF%BB%E8%BD%AC&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 6476px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=XMADAMYX%3D%3EXYMADAMX%EF%BC%8CDAMX%E5%B0%B1%E5%8F%98%E6%88%90%E5%90%8E%E7%BC%80%E4%BA%86&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 6476px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=XMADAMYX%3D%3EXYMADAMX%EF%BC%8CDAMX%E5%B0%B1%E5%8F%98%E6%88%90%E5%90%8E%E7%BC%80%E4%BA%86&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 2435px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=Trie%E6%A0%91%E7%9A%84%E5%8D%95%E8%AF%8D%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 2435px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=Trie%E6%A0%91%E7%9A%84%E5%8D%95%E8%AF%8D%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 4193px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E4%BB%A5%E4%B8%8B%E6%98%AF%E7%94%A8Trie%E6%A0%91%E7%BB%9F%E8%AE%A1%E5%8D%95%E8%AF%8D%E9%A2%91%E7%8E%87%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E7%A8%8B%E5%BA%8F%E5%B0%9A%E4%B8%8D%E5%AE%8C%E5%96%84%EF%BC%8C%E6%9C%89%E5%BE%88%E5%A4%9A%E5%9C%B0%E6%96%B9%E8%BF%98%E9%9C%80%E6%94%B9%E8%BF%9B%E3%80%82&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 4193px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E4%BB%A5%E4%B8%8B%E6%98%AF%E7%94%A8Trie%E6%A0%91%E7%BB%9F%E8%AE%A1%E5%8D%95%E8%AF%8D%E9%A2%91%E7%8E%87%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E7%A8%8B%E5%BA%8F%E5%B0%9A%E4%B8%8D%E5%AE%8C%E5%96%84%EF%BC%8C%E6%9C%89%E5%BE%88%E5%A4%9A%E5%9C%B0%E6%96%B9%E8%BF%98%E9%9C%80%E6%94%B9%E8%BF%9B%E3%80%82&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 6892px; LEFT: 224px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%2F%2F%20trie%20tree.cpp%20%3A%20%E5%AE%9A%E4%B9%89%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%85%A5%E5%8F%A3%E7%82%B9%E3%80%82%0A%2F%2F%0A%23include%20%22stdafx.h%22%0A%2F%2F%E5%8A%9F%E8%83%BD%EF%BC%9A%E7%BB%9F%E8%AE%A1%E4%B8%80%E6%AE%B5%E8%8B%B1%E6%96%87%E7%9A%84%E5%8D%95%E8%AF%8D%E9%A2%91%E7%8E%87(%E6%96%87%E7%AB%A0%E4%BB%A5%E7%A9%BA%E6%A0%BC%E5%88%86&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 6892px; LEFT: 224px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%2F%2F%20trie%20tree.cpp%20%3A%20%E5%AE%9A%E4%B9%89%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%85%A5%E5%8F%A3%E7%82%B9%E3%80%82%0A%2F%2F%0A%23include%20%22stdafx.h%22%0A%2F%2F%E5%8A%9F%E8%83%BD%EF%BC%9A%E7%BB%9F%E8%AE%A1%E4%B8%80%E6%AE%B5%E8%8B%B1%E6%96%87%E7%9A%84%E5%8D%95%E8%AF%8D%E9%A2%91%E7%8E%87(%E6%96%87%E7%AB%A0%E4%BB%A5%E7%A9%BA%E6%A0%BC%E5%88%86&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9284px; LEFT: 370px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=DAMYX&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9284px; LEFT: 370px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=DAMYX&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9551px; LEFT: 408px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=(%EF%BC%88N%3D8%EF%BC%8Ci%3D4%EF%BC%8C%E4%BE%BF%E6%98%AFS%EF%BC%885%EF%BC%89%EF%BC%89&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9551px; LEFT: 408px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=(%EF%BC%88N%3D8%EF%BC%8Ci%3D4%EF%BC%8C%E4%BE%BF%E6%98%AFS%EF%BC%885%EF%BC%89%EF%BC%89&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9796px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%BA%94%E7%94%A8&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9796px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%BA%94%E7%94%A8&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 8920px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E6%9C%80%E4%BD%8E%E5%85%B1%E6%9C%89%E7%A5%96%E5%85%88&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 8920px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E6%9C%80%E4%BD%8E%E5%85%B1%E6%9C%89%E7%A5%96%E5%85%88&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9593px; LEFT: 722px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=DAM&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9593px; LEFT: 722px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=DAM&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9212px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E9%97%AE%E9%A2%98&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9212px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E9%97%AE%E9%A2%98&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 7171px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%85%88%E8%AF%B4%E8%AF%B4%E5%90%8E%E7%BC%80%E7%9A%84%E5%AE%9A%E4%B9%89%EF%BC%8C%E9%A1%BE%E5%90%8D%E6%80%9D%E4%B9%89%EF%BC%8C%E9%80%9A%E4%BF%97%E7%82%B9%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%89%80%E8%B0%93%E5%90%8E%E7%BC%80%E5%B0%B1%E6%98%AF%E5%90%8E%E9%9D%A2%E5%B0%BE%E5%B7%B4%E7%9A%84%E6%84%8F%E6%80%9D%E3%80%82%E6%AF%94%E5%A6%82%E8%AF%B4%E7%BB%99%E5%AE%9A%E4%B8%80%E9%95%BF%E5%BA%A6%E4%B8%BAn%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2S%3DS1S2..Si..Sn%EF%BC%8C%E5%92%8C%E6%95%B4%E6%95%B0i%EF%BC%8C1%20%3C%3D%20i%20%3C%3D%20&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 7171px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%85%88%E8%AF%B4%E8%AF%B4%E5%90%8E%E7%BC%80%E7%9A%84%E5%AE%9A%E4%B9%89%EF%BC%8C%E9%A1%BE%E5%90%8D%E6%80%9D%E4%B9%89%EF%BC%8C%E9%80%9A%E4%BF%97%E7%82%B9%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%89%80%E8%B0%93%E5%90%8E%E7%BC%80%E5%B0%B1%E6%98%AF%E5%90%8E%E9%9D%A2%E5%B0%BE%E5%B7%B4%E7%9A%84%E6%84%8F%E6%80%9D%E3%80%82%E6%AF%94%E5%A6%82%E8%AF%B4%E7%BB%99%E5%AE%9A%E4%B8%80%E9%95%BF%E5%BA%A6%E4%B8%BAn%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2S%3DS1S2..Si..Sn%EF%BC%8C%E5%92%8C%E6%95%B4%E6%95%B0i%EF%BC%8C1%20%3C%3D%20i%20%3C%3D%20&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://blog.csdn.net/v_july_v/article/details/6897097#">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9898px; LEFT: 283px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E8%87%AA%E8%A1%8C%E5%AE%9A%E5%A4%BA&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 9898px; LEFT: 283px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E8%87%AA%E8%A1%8C%E5%AE%9A%E5%A4%BA&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 14202px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%90%8E%E7%BC%80%E6%8C%87%E9%92%88&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 14202px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%90%8E%E7%BC%80%E6%8C%87%E9%92%88&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 13631px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=1.%C2%A0%C2%A0%C2%A0%C2%A0%20Update(%20%E6%96%B0%E5%89%8D%E7%BC%80%20)%0A2.%C2%A0%C2%A0%C2%A0%C2%A0%20%7B%0A3.%C2%A0%C2%A0%C2%A0%C2%A0%20%C2%A0%20%C2%A0%C2%A0%E5%BD%93%E5%89%8D%E5%90%8E%E7%BC%80%20%3D%20%E6%BF%80%E6%B4%BB%E8%8A%82%E7%82%B9%0A4.%C2%A0%C2%A0%C2%A0%C2%A0%20%C2%A0%20%C2%A0%C2%A0%E5%BE%85%E5%8A%A0%E5%AD%97%E7%AC%A6%20%3D%20%E6%96%B0%E5%89%8D%E7%BC%80%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 13631px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=1.%C2%A0%C2%A0%C2%A0%C2%A0%20Update(%20%E6%96%B0%E5%89%8D%E7%BC%80%20)%0A2.%C2%A0%C2%A0%C2%A0%C2%A0%20%7B%0A3.%C2%A0%C2%A0%C2%A0%C2%A0%20%C2%A0%20%C2%A0%C2%A0%E5%BD%93%E5%89%8D%E5%90%8E%E7%BC%80%20%3D%20%E6%BF%80%E6%B4%BB%E8%8A%82%E7%82%B9%0A4.%C2%A0%C2%A0%C2%A0%C2%A0%20%C2%A0%20%C2%A0%C2%A0%E5%BE%85%E5%8A%A0%E5%AD%97%E7%AC%A6%20%3D%20%E6%96%B0%E5%89%8D%E7%BC%80%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 11738px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%88%9D%E7%AA%A5%E9%97%A8%E5%BE%84&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div><div style="Z-INDEX: 2; DISPLAY: none; VISIBILITY: hidden; TOP: 11738px; LEFT: 5px" id="sogoumovesearch" class="movesearch"><a target="_blank" id="sogoucopybtn" class="extcopy" href="http://blog.csdn.net/v_july_v/article/details/6897097#">复制</a><a target="_blank" class="extsearch" href="http://www.sogou.com/sogou?query=%E5%88%9D%E7%AA%A5%E9%97%A8%E5%BE%84&amp;pid=AGyTg&amp;ie=utf8">搜索</a></div>   
</div>




<!-- Baidu Button BEGIN -->




<div class="bdsharebuttonbox tracking-ad bdshare-button-style0-16" style="float: right;" data-mod="popu_172" data-bd-bind="1506353669633">
<a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="bds_more" data-cmd="more" style="background-position:0 0 !important; background-image: url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=d754dcc0.png) !important" target="_blank"></a>
<a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间" style="background-position:0 -52px !important" target="_blank"></a>
<a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博" style="background-position:0 -104px !important" target="_blank"></a>
<a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博" style="background-position:0 -260px !important" target="_blank"></a>
<a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="bds_renren" data-cmd="renren" title="分享到人人网" style="background-position:0 -208px !important" target="_blank"></a>
<a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="bds_weixin" data-cmd="weixin" title="分享到微信" style="background-position:0 -1612px !important" target="_blank"></a>
</div>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<!-- Baidu Button END -->

   

<!--172.16.140.14-->

<!-- Baidu Button BEGIN -->
<script type="text/javascript" id="bdshare_js" data="type=tools&amp;uid=1536434" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/bds_s_v2.js"></script>

<script type="text/javascript">
    document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
</script>
<!-- Baidu Button END -->



 


        <div id="digg" articleid="6897097">
            <dl id="btnDigg" class="digg digg_disable" onclick="btndigga();">
               
                 <dt>顶</dt>
                <dd>93</dd>
            </dl>
           
              
            <dl id="btnBury" class="digg digg_disable" onclick="btnburya();">
              
                  <dt>踩</dt>
                <dd>2</dd>               
            </dl>
            
        </div>
     <div class="tracking-ad" data-mod="popu_222"><a href="javascript:void(0);" target="_blank">&nbsp;</a>   </div>
    <div class="tracking-ad" data-mod="popu_223"> <a href="javascript:void(0);" target="_blank">&nbsp;</a></div>
    <script type="text/javascript">
        function btndigga() {
            $(".tracking-ad[data-mod='popu_222'] a").click();
        }
        function btnburya() {
            $(".tracking-ad[data-mod='popu_223'] a").click();
        }
            </script>

   <ul class="article_next_prev">
                <li class="prev_article"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_shangyipian&#39;]);location.href=&#39;http://blog.csdn.net/v_JULY_v/article/details/6890054&#39;;">上一篇</span><a href="http://blog.csdn.net/v_JULY_v/article/details/6890054" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_shangyipian&#39;])">程序员编程艺术第二十一~二章：发帖水王及扩展，与最短摘要生成（12.07修订）</a></li>
                <li class="next_article"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_xiayipian&#39;]);location.href=&#39;http://blog.csdn.net/v_JULY_v/article/details/7004661&#39;;">下一篇</span><a href="http://blog.csdn.net/v_JULY_v/article/details/7004661" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_xiayipian&#39;])">程序员编程艺术第一~二十二章集锦与总结（教你如何编程）</a></li>
    </ul>

    <div style="clear:both; height:10px;"></div>


            <div class="similar_article">
                    <h4></h4>
                    <div class="similar_c" style="margin:20px 0px 0px 0px">
                        <div class="similar_c_t">
                          &nbsp;&nbsp;相关文章推荐
                        </div>
                   
                        <div class="similar_wrap tracking-ad" data-mod="popu_36" style="max-height:250px">                       
                            <ul class="similar_list fl">    
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/typ2004/article/details/41604655" title="Go编程——变量、函数导出与首字母大写" strategy="BlogCommendFromBaidu_0" target="_blank">Go编程——变量、函数导出与首字母大写</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://edu.csdn.net/huiyiCourse/detail/569?utm_source=blog7" title="Python即将成为第一语言" strategy="undefined" target="_blank">Python即将成为第一语言</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/v_JULY_v/article/details/6530142" title="从B树、B+树、B*树谈到R 树" strategy="BlogCommendFromBaidu_1" target="_blank">从B树、B+树、B*树谈到R 树</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://edu.csdn.net/huiyiCourse/detail/532?utm_source=blog7" title="构建企业级高性能OLAP引擎--董西成" strategy="undefined" target="_blank">构建企业级高性能OLAP引擎--董西成</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/v_JULY_v/article/details/6105630" title="教你初步了解红黑树" strategy="BlogCommendFromBaidu_2" target="_blank">教你初步了解红黑树</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://edu.csdn.net/course/detail/6134?utm_source=blog7" title="JDK9新特性解读" strategy="undefined" target="_blank">JDK9新特性解读</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/v_JULY_v/article/details/6057286" title="微软公司等数据结构+算法面试100题(第1-100题)全部出炉" strategy="BlogCommendFromBaidu_3" target="_blank">微软公司等数据结构+算法面试100题(第1-100题)全部出炉</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://edu.csdn.net/course/detail/2322?utm_source=blog7" title="华为工程师，带你实战C++" strategy="undefined" target="_blank">华为工程师，带你实战C++</a>
                                   </li>
                            </ul>
                              <ul class="similar_list fr">      
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/v_JULY_v/article/details/6015165" title="横空出世，席卷互联网--评微软等公司数据结构+算法面试100题" strategy="BlogCommendFromBaidu_4" target="_blank">横空出世，席卷互联网--评微软等公司数据结构+算法面试100题</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://edu.csdn.net/course/detail/3719?utm_source=blog7" title="Android自定义控件全知道" strategy="undefined" target="_blank">Android自定义控件全知道</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/u010022051/article/details/51317298" title="July 博客中的机器学习系列" strategy="BlogCommendFromBaidu_5" target="_blank">July 博客中的机器学习系列</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://edu.csdn.net/course/detail/4369?utm_source=blog7" title="TensorFlow入门基础知识详解" strategy="undefined" target="_blank">TensorFlow入门基础知识详解</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/v_JULY_v/article/details/6124989" title="一步一图一代码，一定要让你真正彻底明白红黑树" strategy="BlogCommendFromBaidu_6" target="_blank">一步一图一代码，一定要让你真正彻底明白红黑树</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/v_JULY_v/article/details/6870251" title="微软面试100题2010年版全部答案集锦（含下载地址）" strategy="BlogCommendFromBaidu_7" target="_blank">微软面试100题2010年版全部答案集锦（含下载地址）</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/HTT_H/article/details/38782789" title="从Trie树（字典树）谈到后缀树（10.28修订）（转载）" strategy="BlogCommendFromCsdn_8" target="_blank">从Trie树（字典树）谈到后缀树（10.28修订）（转载）</a>
                                   </li>
                                   <li>
                                       <em>•</em>
                                       <a href="http://blog.csdn.net/Guard_Mine/article/details/39013763" title="从Trie树（字典树）谈到后缀树（10.28修订）" strategy="BlogCommendFromCsdn_9" target="_blank">从Trie树（字典树）谈到后缀树（10.28修订）</a>
                                   </li>
                            </ul>
                        </div>
                    </div>
                </div>   
      
</div>


<div id="suggest">

</div>
         <script language="javascript" type="text/javascript">     
             $(function(){
                 $.get("/v_JULY_v/svc/GetSuggestContent/6897097",function(data){
                     $("#suggest").html(data);
                 });     
             });             
         </script>  



            
                                    
            
                                    

        <!-- 广告位开始 -->
        <!-- 广告位结束 -->


<div class="comment_class">
    <div id="comment_title" class="panel_head">
        <span class="see_comment">查看评论</span><a name="comments"></a></div>
    <div id="comment_list"><dl class="comment_item comment_topic" id="comment_item_6514384"><dt class="comment_head" floor="60">60楼 <span class="user"><a class="username" href="http://blog.csdn.net/cyber_telecaster" target="_blank">cyber_telecaster</a> <span class="ptime">2016-12-29 16:47发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="6514384" username="cyber_telecaster"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/cyber_telecaster" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_cyber_telecaster.jpg" width="40" height="40"></a></dd><dd class="comment_body">请问len是表示什么？</dd></dl><dl class="comment_item comment_topic" id="comment_item_5646433"><dt class="comment_head" floor="59">59楼 <span class="user"><a class="username" href="http://blog.csdn.net/hqshaozhu" target="_blank">少主无翼</a> <span class="ptime">2015-11-27 13:46发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="5646433" username="hqshaozhu"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/hqshaozhu" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_hqshaozhu.jpg" width="40" height="40"></a></dd><dd class="comment_body">自己实现了一个Java版的，欢迎大家点评：http://blog.csdn.net/vickyway/article/details/50067101</dd></dl><dl class="comment_item comment_topic" id="comment_item_4862567"><dt class="comment_head" floor="58">58楼 <span class="user"><a class="username" href="http://blog.csdn.net/UESTC_peterpan" target="_blank">UESTC_peterpan</a> <span class="ptime">2015-03-19 19:27发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="4862567" username="UESTC_peterpan"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/UESTC_peterpan" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_uestc_peterpan.jpg" width="40" height="40"></a></dd><dd class="comment_body">3、有一个1G大小的一个文件，里面每一行是一个词，词的大小不超过16字节，内存限制大小是1M。返回频数最高的100个词。<br><br>楼主你好，确定内存限制大小不是1G？1M，光字典树都开不起呀</dd><dl class="comment_item comment_reply" id="comment_item_5886216"><dt class="comment_head" floor="58">Re: <span class="user"><a class="username" href="http://blog.csdn.net/LucasDove" target="_blank">青春不谢</a> <span class="ptime">2016-02-19 11:52发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="5886216" username="LucasDove"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/LucasDove" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_lucasdove.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复UESTC_peterpan<br>楼主的做法是先对每个字符串取hash值，这样每个字符串就用一个整数就能表示了，再将hash值对5000求模，把相应hash值的字符串放到5000个文件中对应的一个，这样每个文件的大小就是1G / 5000 约等于200k，分别对每个文件开Trie树，空间是完全足够的。<br>：</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_4159447"><dt class="comment_head" floor="57">57楼 <span class="user"><a class="username" href="http://blog.csdn.net/Revivedsun" target="_blank">FserSuN</a> <span class="ptime">2014-08-10 22:58发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="4159447" username="Revivedsun"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/Revivedsun" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_revivedsun.jpg" width="40" height="40"></a></dd><dd class="comment_body">仔细观察上图，我们可以看到不少值得压缩的地方。比如蓝框标注的分支都是独苗，没有必要用单独的节点同边表示。如果我们允许任意一条边里包含多个字 母，就可以把这种没有分叉的路径压缩到一条边。另外每条边已经包含了足够的后缀信息，我们就不用再给节点标注字符串信息了。我们只需要在叶节点上标注上每项后缀的起始位置。于是我们得到下图：<br>--------<br>这段话下面这个图DAMYX是不是应该在第一个分支上？ 另外这段话上面的图，可压缩的单只就蓝色筐的那几个？单枝好像不止那几个吧</dd></dl><dl class="comment_item comment_topic" id="comment_item_4135187"><dt class="comment_head" floor="56">56楼 <span class="user"><a class="username" href="http://blog.csdn.net/liuzhi67" target="_blank">liuzhi67</a> <span class="ptime">2014-08-04 10:23发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="4135187" username="liuzhi67"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/liuzhi67" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_liuzhi67.jpg" width="40" height="40"></a></dd><dd class="comment_body">博主，2.3节中那个后缀树回文匹配的例子，答案应该是LCA(3$,4#)，即图片中的最左边子树而不是最右边，你写的是最右边的子树LCA(4$,5#)，仔细看了几遍了，博主你可以检查一下。<br>另外，感慨一下，这个博客真是干货多多，赞一个</dd></dl><dl class="comment_item comment_topic" id="comment_item_3846871"><dt class="comment_head" floor="55">55楼 <span class="user"><a class="username" href="http://blog.csdn.net/fangjian1204" target="_blank">fangjian1204</a> <span class="ptime">2014-05-17 16:12发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3846871" username="fangjian1204"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/fangjian1204" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_fangjian1204.jpg" width="40" height="40"></a></dd><dd class="comment_body">如果有海量个字符串，比如1亿个，然后给一个待处理的字符串S，问用什么方法可以快速知道S是否是这1亿个字符串中的某个字符串的子串，楼主有什么方法吗</dd></dl><dl class="comment_item comment_topic" id="comment_item_3617945"><dt class="comment_head" floor="54">54楼 <span class="user"><a class="username" href="http://blog.csdn.net/liuqiyao_01" target="_blank">671coder</a> <span class="ptime">2014-03-20 14:23发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3617945" username="liuqiyao_01"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/liuqiyao_01" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_liuqiyao_01.jpg" width="40" height="40"></a></dd><dd class="comment_body">跪求从哪里可以下载~</dd></dl><dl class="comment_item comment_topic" id="comment_item_3529307"><dt class="comment_head" floor="53">53楼 <span class="user"><a class="username" href="http://blog.csdn.net/cainiaohhf" target="_blank">cainiaohhf</a> <span class="ptime">2014-02-28 14:14发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3529307" username="cainiaohhf"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/cainiaohhf" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_cainiaohhf.jpg" width="40" height="40"></a></dd><dd class="comment_body"><fieldset><legend>引用“cainiaohhf”的评论：</legend>你好，有些地方理解不了，也许可以详细讲解下。<br>我有两个地方：也许可以详细讲解下“激活节点”的概念、例...</fieldset><br>补充下：以上都是针对“后缀树”的看法</dd></dl><dl class="comment_item comment_topic" id="comment_item_3529275"><dt class="comment_head" floor="52">52楼 <span class="user"><a class="username" href="http://blog.csdn.net/cainiaohhf" target="_blank">cainiaohhf</a> <span class="ptime">2014-02-28 14:12发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3529275" username="cainiaohhf"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/cainiaohhf" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_cainiaohhf.jpg" width="40" height="40"></a></dd><dd class="comment_body">你好，有些地方理解不了，也许可以详细讲解下。<br>我有两个地方：也许可以详细讲解下“激活节点”的概念、例子；<br>“初窥门径”那里的“每个后缀会在以下三种节点的其中一种结束”，3种情况详细讲解下。<br>另外：我google了下其后缀树，觉得找到一个不错的，即你参考中列出的第11个链接：http://www.ibaiyang.org/2013/01/06/suffix-tree-introduction/。</dd><dl class="comment_item comment_reply" id="comment_item_3529325"><dt class="comment_head" floor="52">Re: <span class="user"><a class="username" href="http://blog.csdn.net/cainiaohhf" target="_blank">cainiaohhf</a> <span class="ptime">2014-02-28 14:15发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3529325" username="cainiaohhf"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/cainiaohhf" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_cainiaohhf.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复cainiaohhf：以上都是针对后缀树的一点看法；我不是很能够理解</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_3301771"><dt class="comment_head" floor="51">51楼 <span class="user"><a class="username" href="http://blog.csdn.net/feliciafay" target="_blank">feliciafay</a> <span class="ptime">2013-12-17 23:51发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3301771" username="feliciafay"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/feliciafay" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_feliciafay.jpg" width="40" height="40"></a></dd><dd class="comment_body">博主我只能看到两幅图，其它的都显示不出来。麻烦修复一下吧:)</dd><dl class="comment_item comment_reply" id="comment_item_3302621"><dt class="comment_head" floor="51">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2013-12-18 11:13发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3302621" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复feliciafay：你好，之前是网站服务器的问题，已处理，现在图片应该能正常显示了，你再看下？感谢关注。</dd><dl class="comment_item comment_reply" id="comment_item_3303099"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/feliciafay" target="_blank">feliciafay</a> <span class="ptime">2013-12-18 13:54发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3303099" username="feliciafay"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/feliciafay" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_feliciafay.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复v_JULY_v：图片显示没有问题了，多谢博主！</dd></dl></dl></dl><dl class="comment_item comment_topic" id="comment_item_3153363"><dt class="comment_head" floor="50">50楼 <span class="user"><a class="username" href="http://blog.csdn.net/rrwangyan" target="_blank">rrwangyan</a> <span class="ptime">2013-11-16 17:03发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3153363" username="rrwangyan"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/rrwangyan" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_rrwangyan.jpg" width="40" height="40"></a></dd><dd class="comment_body">关于后缀树的建立，就是from left to right的Ukkonen的算法，这里有个不错的描述文档。http://www.cslu.ogi.edu/~roark/courses/cse555-BLS/lecs/lec6.pdf<br>博主大框架写的很赞，只是细节很多时候看了之后仍旧很让人困惑啊！</dd></dl><dl class="comment_item comment_topic" id="comment_item_2902739"><dt class="comment_head" floor="49">49楼 <span class="user"><a class="username" href="http://blog.csdn.net/xiajun07061225" target="_blank">江南烟雨</a> <span class="ptime">2013-09-09 14:38发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2902739" username="xiajun07061225"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/xiajun07061225" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_xiajun07061225.jpg" width="40" height="40"></a></dd><dd class="comment_body">这一段里面有明显的纰漏，能否修改下：<br>最低共有祖先，LCA（Lowest Common Ancestor)，也就是任意两节点（多个也行）最长的共有前缀。比如下图中，节点7同节点10的共同祖先是节点1与节点，但最低共同祖先是5。 查找LCA的算法是O(1)的复杂度，这年头少见。代价是需要对后缀树做复杂度为O(n)的预处理。</dd></dl><dl class="comment_item comment_topic" id="comment_item_2902733"><dt class="comment_head" floor="48">48楼 <span class="user"><a class="username" href="http://blog.csdn.net/xiajun07061225" target="_blank">江南烟雨</a> <span class="ptime">2013-09-09 14:35发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2902733" username="xiajun07061225"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/xiajun07061225" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_xiajun07061225.jpg" width="40" height="40"></a></dd><dd class="comment_body">关于后缀树与回文问题的关联那个小标题下，文字描述与图片貌似不符，不知道作者仔细看了没有的？而且这段内容与评论中索索的转载的另一篇blog一模一样。LZ要好好把关质量啊！</dd><dl class="comment_item comment_reply" id="comment_item_2903657"><dt class="comment_head" floor="48">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2013-09-09 17:14发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2903657" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复xiajun07061225：你好，图片已经补上，非常感谢你的指正:-)</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2898229"><dt class="comment_head" floor="47">47楼 <span class="user"><a class="username" href="http://blog.csdn.net/u012016992" target="_blank">陈宇旭</a> <span class="ptime">2013-09-07 10:16发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2898229" username="u012016992"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/u012016992" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_u012016992.jpg" width="40" height="40"></a></dd><dd class="comment_body">as发顺丰</dd></dl><dl class="comment_item comment_topic" id="comment_item_2896925"><dt class="comment_head" floor="46">46楼 <span class="user"><a class="username" href="http://blog.csdn.net/ilogo1" target="_blank">ilogo1</a> <span class="ptime">2013-09-06 16:02发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2896925" username="ilogo1"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/ilogo1" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_ilogo1.jpg" width="40" height="40"></a></dd><dd class="comment_body">我觉得不用建立广义后缀树，在构建字符串的后缀树的同时，从当前后缀的起始处反向查询字符串，得到当前最长的回文~！</dd></dl><dl class="comment_item comment_topic" id="comment_item_2892423"><dt class="comment_head" floor="45">45楼 <span class="user"><a class="username" href="http://blog.csdn.net/vitrys" target="_blank">vitrys</a> <span class="ptime">2013-09-04 20:41发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2892423" username="vitrys"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/vitrys" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_vitrys.jpg" width="40" height="40"></a></dd><dd class="comment_body">楼主 太犀利啦  这个 后缀树 有点复杂啊  trie树也是 很 复杂啊</dd></dl><dl class="comment_item comment_topic" id="comment_item_2881965"><dt class="comment_head" floor="44">44楼 <span class="user"><a class="username" href="http://blog.csdn.net/hanchengxi" target="_blank">风云龙儿</a> <span class="ptime">2013-09-01 11:00发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2881965" username="hanchengxi"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/hanchengxi" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_hanchengxi.jpg" width="40" height="40"></a></dd><dd class="comment_body">“还要提到一个节约时间的方法. 当我们遍历所有后缀时, 如果某个后缀的某个儿子跟待加字符(新前缀最后一个字符)相同, 那么我们当前前缀的所有更新就可以停止了.”<br><br>请问楼主，什么叫“某个后缀的儿子”？后缀的儿子是节点还是字符？</dd></dl><dl class="comment_item comment_topic" id="comment_item_2836025"><dt class="comment_head" floor="43">43楼 <span class="user"><a class="username" href="http://blog.csdn.net/beyond_boy" target="_blank">beyond_boy</a> <span class="ptime">2013-08-18 23:46发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2836025" username="beyond_boy"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/beyond_boy" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_beyond_boy.jpg" width="40" height="40"></a></dd><dd class="comment_body">通篇存在一个前提错误：建立trie的复杂度为不是O(n*len)，而是O(n*len*r)，其中r为你要处理的字符集的基的大小，比如你要处理数字的话r=11，字母的话r=26，ascii码的话r=128，unicode的话r=1114112。。。，同理查询的复杂度是O（len*r）<br>另：这篇文章用了不少人家博客的内容吧，链接都不给一个是不是不厚道了！http://blog.csdn.net/g9yuayon/article/details/2574781</dd><dl class="comment_item comment_reply" id="comment_item_2895535"><dt class="comment_head" floor="43">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2013-09-06 07:58发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2895535" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复beyond_boy：你好，对于本文中引用的内容，文末都给出了参考链接的，我没看你贴的链接，但我想可能是同一个内容，多人转载造成的，我尽量贴最原始的作者:-)</dd></dl><dl class="comment_item comment_reply" id="comment_item_2895467"><dt class="comment_head" floor="43">Re: <span class="user"><a class="username" href="http://blog.csdn.net/Tsien" target="_blank">Tsien</a> <span class="ptime">2013-09-06 00:22发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2895467" username="Tsien"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/Tsien" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_tsien.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复beyond_boy：天下文章一大抄，扫了一眼，从第一张图到最后一张，好像没有一张是博主自己画的。<br><br>要研究字符串匹配，感觉看这本书靠谱点了： flexible pattern matching in strings</dd><dl class="comment_item comment_reply" id="comment_item_2895537"><dt class="comment_head" floor="2">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2013-09-06 08:00发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2895537" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复Tsien：多谢批评，此文更多是编辑整理。</dd></dl></dl></dl><dl class="comment_item comment_topic" id="comment_item_2612226"><dt class="comment_head" floor="42">42楼 <span class="user"><a class="username" href="http://blog.csdn.net/april_xhx" target="_blank">april_xhx</a> <span class="ptime">2013-04-30 10:24发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2612226" username="april_xhx"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/april_xhx" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_april_xhx.jpg" width="40" height="40"></a></dd><dd class="comment_body">博主您好 您这图是用什么工具或者 软件画的？Graphviz?</dd></dl><dl class="comment_item comment_topic" id="comment_item_2609130"><dt class="comment_head" floor="41">41楼 <span class="user"><a class="username" href="http://blog.csdn.net/ACFaith" target="_blank">ACFaith</a> <span class="ptime">2013-04-26 20:36发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2609130" username="ACFaith"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/ACFaith" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_acfaith.jpg" width="40" height="40"></a></dd><dd class="comment_body">厉害！</dd></dl><dl class="comment_item comment_topic" id="comment_item_2544825"><dt class="comment_head" floor="40">40楼 <span class="user"><a class="username" href="http://blog.csdn.net/xdmakai" target="_blank">KevinM2010</a> <span class="ptime">2013-03-05 15:31发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2544825" username="xdmakai"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/xdmakai" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_xdmakai.jpg" width="40" height="40"></a></dd><dd class="comment_body">July，kmp那块内容很多人都转到了自己的博客，但是应该是有问题的吧，见：http://www.doc88.com/p-27337495347.html</dd></dl><dl class="comment_item comment_topic" id="comment_item_2502750"><dt class="comment_head" floor="39">39楼 <span class="user"><a class="username" href="http://blog.csdn.net/janevans" target="_blank">janevans</a> <span class="ptime">2013-01-14 01:36发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2502750" username="janevans"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/janevans" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_janevans.jpg" width="40" height="40"></a></dd><dd class="comment_body">我看了一些额外的资料后发现，Trie 的插入和搜索很大一个问题在于选择什么数据结果来遍历子节点<br>优于时间的话：可以选择用数组来保存a-z,这样可以保证O(1)的子节点定位，但是如果是unicode的，这种方法根本不可行<br>优于空间的话，可以选择linkedlist,但这样不是O(1)的子节点定位了，所以假设平均子节点数为O(c),那么搜索一次的复杂度就变成了O(le*c),le是单词平均长度。<br>不知道作者有没有关于这个问题解决方法或者评论，因为我觉得这是Trie很大的一个limitation,直接导致了这个数据结果的复杂度增加，所以求指导，谢谢。</dd><dl class="comment_item comment_reply" id="comment_item_3523575"><dt class="comment_head" floor="39">Re: <span class="user"><a class="username" href="http://blog.csdn.net/mach7" target="_blank">mach7</a> <span class="ptime">2014-02-27 16:21发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3523575" username="mach7"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/mach7" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_mach7.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复janevans：同意..</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2440698"><dt class="comment_head" floor="38">38楼 <span class="user"><a class="username" href="http://blog.csdn.net/AmbitiousGuy" target="_blank">AmbitiousGuy</a> <span class="ptime">2012-11-21 18:16发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2440698" username="AmbitiousGuy"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/AmbitiousGuy" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_ambitiousguy.jpg" width="40" height="40"></a></dd><dd class="comment_body">如下图中，节点7同节点10的共同祖先是节点1与借点，但最低共同祖先是5。<br>这里的下图指那图？借点？</dd><dl class="comment_item comment_reply" id="comment_item_2581481"><dt class="comment_head" floor="38">Re: <span class="user"><a class="username" href="http://blog.csdn.net/a546410275" target="_blank">a546410275</a> <span class="ptime">2013-04-06 21:05发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2581481" username="a546410275"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/a546410275" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_a546410275.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复AmbitiousGuy：我也表示没找到。。。囧了</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2427814"><dt class="comment_head" floor="37">37楼 <span class="user"><a class="username" href="http://blog.csdn.net/YARAKCHOU" target="_blank">YARAKCHOU</a> <span class="ptime">2012-11-09 15:12发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2427814" username="YARAKCHOU"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/YARAKCHOU" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_yarakchou.jpg" width="40" height="40"></a></dd><dd class="comment_body">Update( 新前缀 )<br>{<br>  当前后缀 = 激活节点<br>  待加字符 = 新前缀最后一个字符<br>       done = false;<br>  while ( !done ) {<br>  if ( 当前后缀在显式节点结束 ) <br>  {<br>    if ( 当前节点后没有以待加字符开始的边 )<br>      在当前节点后创建一个新的叶节点<br>    else<br>      done = true;<br>  } else {<br>    if ( 当前隐式节点的下一个字符不是待加字符 ) <br>    {<br>      从隐式节点后分割此边<br>       在分割处创建一个新的叶节点<br>    } else<br>      done = true;<br>}// 此时， else分支就应该结束吧 后面的空后缀判断应该是独立于隐式节点的处理逻辑的<br>    if ( 当前后缀是空后缀 )<br>      done = true;<br>    else<br>      当前后缀 = 下一个更短的后缀<br>     }<br>  激活节点 = 当前后缀<br>}</dd></dl><dl class="comment_item comment_topic" id="comment_item_2414743"><dt class="comment_head" floor="36">36楼 <span class="user"><a class="username" href="http://blog.csdn.net/mr_zys" target="_blank">mr_zys</a> <span class="ptime">2012-10-28 14:56发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2414743" username="mr_zys"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/mr_zys" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_mr_zys.jpg" width="40" height="40"></a></dd><dd class="comment_body">第一个问题，可以用二叉树做吗？</dd></dl><dl class="comment_item comment_topic" id="comment_item_2390896"><dt class="comment_head" floor="35">35楼 <span class="user"><a class="username" href="http://blog.csdn.net/chenkaiss" target="_blank">chenkaiss</a> <span class="ptime">2012-10-05 12:43发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2390896" username="chenkaiss"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/chenkaiss" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_chenkaiss.jpg" width="40" height="40"></a></dd><dd class="comment_body">我想请教一下XMADAMYX中的回文半径是怎么知道是D的?</dd><dl class="comment_item comment_reply" id="comment_item_2631396"><dt class="comment_head" floor="35">Re: <span class="user"><a class="username" href="http://blog.csdn.net/fupacker" target="_blank">heipacker</a> <span class="ptime">2013-05-16 23:01发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2631396" username="fupacker"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/fupacker" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_fupacker.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复chenkaiss：这个在真正求的时候应该是遍历出来的吧！</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2387164"><dt class="comment_head" floor="34">34楼 <span class="user"><a class="username" href="http://blog.csdn.net/slsinsiston" target="_blank">slsinsiston</a> <span class="ptime">2012-09-28 15:29发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2387164" username="slsinsiston"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/slsinsiston" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_slsinsiston.jpg" width="40" height="40"></a></dd><dd class="comment_body">2.2、后缀树与回文问题的关联.....1、最低共有祖先 LCA（Lowest Common Ancestor).....共同祖先是节点1与借点,（我猜这里是要说节点5吧），ps.看不到图</dd></dl><dl class="comment_item comment_topic" id="comment_item_2371976"><dt class="comment_head" floor="33">33楼 <span class="user"><a class="username" href="http://blog.csdn.net/mandycool" target="_blank">mandycool</a> <span class="ptime">2012-09-14 14:39发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2371976" username="mandycool"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/mandycool" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_mandycool.jpg" width="40" height="40"></a></dd><dd class="comment_body">lz写的很详细，但有个疑问，一棵树的LCA问题要求O(1)的query时间的话不是需要O(nlogn)的预处理时间么？怎样在O(n)时间内做预处理？？？</dd></dl><dl class="comment_item comment_topic" id="comment_item_2370124"><dt class="comment_head" floor="32">32楼 <span class="user"><a class="username" href="http://blog.csdn.net/wadesoftware" target="_blank">wadesoftware</a> <span class="ptime">2012-09-12 18:47发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2370124" username="wadesoftware"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/wadesoftware" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_wadesoftware.jpg" width="40" height="40"></a></dd><dd class="comment_body">博主我有个地方看不懂，求讲解，字符串XYMADAMX的广义后缀树的图为什么是那样画的，怎么还有#，这个#是干嘛用的。</dd></dl><dl class="comment_item comment_topic" id="comment_item_2361354"><dt class="comment_head" floor="31">31楼 <span class="user"><a class="username" href="http://blog.csdn.net/wyhhxx17" target="_blank">wyhhxx17</a> <span class="ptime">2012-09-03 22:40发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2361354" username="wyhhxx17"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/wyhhxx17" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_wyhhxx17.jpg" width="40" height="40"></a></dd><dd class="comment_body">trie那个hash的例子没看懂，创建一个前缀hash表以后怎么用o(n)时间判定是不是前缀？？？</dd></dl><dl class="comment_item comment_topic" id="comment_item_2361209"><dt class="comment_head" floor="30">30楼 <span class="user"><a class="username" href="http://blog.csdn.net/acm79" target="_blank">acm79</a> <span class="ptime">2012-09-03 19:53发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2361209" username="acm79"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/acm79" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_acm79.jpg" width="40" height="40"></a></dd><dd class="comment_body">这么抄感觉会疯掉啊，你里面东西太多了，有没有一个什么样的下载东西的地址呢。我刚来你这里的时候都找不着北，比较笨。嘻嘻。</dd></dl><dl class="comment_item comment_topic" id="comment_item_2361207"><dt class="comment_head" floor="29">29楼 <span class="user"><a class="username" href="http://blog.csdn.net/acm79" target="_blank">acm79</a> <span class="ptime">2012-09-03 19:51发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2361207" username="acm79"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/acm79" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_acm79.jpg" width="40" height="40"></a></dd><dd class="comment_body">一字一句的阅读，还抄写了一些对自己有用的东西。刚刚看完了前面的两个部分。我想问个问题您别笑话，文中后缀树的应用第一个应用，构造后缀树，是不是这样？<br>for(int i=0;i&lt;strlen(s);i++)<br>{<br>str="";<br>str=s[i];<br>t.Insert(str);<br>}这样了，别笑我哈。我是刚学这个，感觉根字典树好像的。<br>手写酸了，基本上都能看懂的，只是里面有大家在评论里面的提到的图图的问题，好像是有点错位的感觉。感谢前辈这么认真。鉴于我平时聊天看不得错别字，所以里面的情况，那字写成哪字。都是小问题了，主要是看博主这么想让人纠正错误，打击一下你。嘻嘻。看的我很激动。</dd><dl class="comment_item comment_reply" id="comment_item_2361870"><dt class="comment_head" floor="29">Re: <span class="user"><a class="username" href="http://blog.csdn.net/acm79" target="_blank">acm79</a> <span class="ptime">2012-09-04 13:09发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2361870" username="acm79"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/acm79" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_acm79.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复acm79： <br>抱歉博主，我昨晚发的那个评论你就无视吧，原来我那个是后缀trie。都看完了，说实话，有感觉，可是，你要我写代码写不出，可能是因为代码能力弱成渣吧。那种感觉不晓得怎么说，你应该知道，想写写不出。哎。后来有百度了下后缀树，没什么收获。。。弄得我都不晓得这个数据结构要不要继续搞了。感觉这个比较困难，说实话后缀树是比较神的东西，我是因为之前把字符串的相关算法（除了后缀树跟ac自动机外都学了）会了之后才来到这里的，哎，好难受吧总之就是。我纠结的一渣。</dd><dl class="comment_item comment_reply" id="comment_item_2361887"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2012-09-04 13:40发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2361887" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复acm79：加油，慢慢来，你一定行的</dd></dl></dl></dl><dl class="comment_item comment_topic" id="comment_item_2358878"><dt class="comment_head" floor="28">28楼 <span class="user"><a class="username" href="http://blog.csdn.net/CSDN515" target="_blank">疯的世界</a> <span class="ptime">2012-09-01 09:50发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2358878" username="CSDN515"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/CSDN515" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_csdn515.jpg" width="40" height="40"></a></dd><dd class="comment_body">不错的文章</dd></dl><dl class="comment_item comment_topic" id="comment_item_2354393"><dt class="comment_head" floor="27">27楼 <span class="user"><a class="username" href="http://blog.csdn.net/shaopeng5115" target="_blank">uestcsp</a> <span class="ptime">2012-08-28 11:02发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2354393" username="shaopeng5115"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/shaopeng5115" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_shaopeng5115.jpg" width="40" height="40"></a></dd><dd class="comment_body">"最低共有祖先，LCA（Lowest Common Ancestor)，也就是任意两节点（多个也行）最长的共有前缀。比如下图中，节点7同节点10的共同祖先是节点1与借点，但最低共同祖先是5。 查找LCA的算法是O(1)的复杂度，这年头少见。代价是需要对后缀树做复杂度为O(n)的预处理。"<br>这段什么意思？节点10？</dd></dl><dl class="comment_item comment_topic" id="comment_item_2347109"><dt class="comment_head" floor="26">26楼 <span class="user"><a class="username" href="http://blog.csdn.net/wyhhxx17" target="_blank">wyhhxx17</a> <span class="ptime">2012-08-22 01:50发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2347109" username="wyhhxx17"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/wyhhxx17" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_wyhhxx17.jpg" width="40" height="40"></a></dd><dd class="comment_body">请问您博客的这些内容有没有对应的java实现版本呢，多谢博主回复。</dd><dl class="comment_item comment_reply" id="comment_item_2954853"><dt class="comment_head" floor="26">Re: <span class="user"><a class="username" href="http://blog.csdn.net/xusiwei1236" target="_blank">xusiwei1236</a> <span class="ptime">2013-09-30 23:25发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2954853" username="xusiwei1236"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/xusiwei1236" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_xusiwei1236.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复wyhhxx17：Sedgewick《算法》（第4版）5.2节有关于Tire的描述，且第4版算法全部采用Java实现</dd></dl><dl class="comment_item comment_reply" id="comment_item_2348706"><dt class="comment_head" floor="26">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2012-08-23 09:36发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2348706" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复wyhhxx17：额，sorry，没有。不过，语言真的只是工具拉</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2322151"><dt class="comment_head" floor="25">25楼 <span class="user"><a class="username" href="http://blog.csdn.net/s20072" target="_blank">s20072</a> <span class="ptime">2012-08-04 20:23发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2322151" username="s20072"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/s20072" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_s20072.jpg" width="40" height="40"></a></dd><dd class="comment_body">提一个非技术性的小bug。“第二个问题”的最后一点，“多模式串的模式匹配问题”后面的suffix_array写成了suffer_array。</dd><dl class="comment_item comment_reply" id="comment_item_2322895"><dt class="comment_head" floor="25">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2012-08-05 14:34发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2322895" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复s20072：EN，谢谢你，已经修正（下次，记得告诉我bug具体位置在哪哈，找了半天才找到你说的地方，:-)）</dd><dl class="comment_item comment_reply" id="comment_item_2325392"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/s20072" target="_blank">s20072</a> <span class="ptime">2012-08-06 22:25发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2325392" username="s20072"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/s20072" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_s20072.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复v_JULY_v：哦？看来我还没说清楚，我本来以为我说清楚了。</dd></dl></dl></dl><dl class="comment_item comment_topic" id="comment_item_2271678"><dt class="comment_head" floor="24">24楼 <span class="user"><a class="username" href="http://blog.csdn.net/hotmocha" target="_blank">hotmocha</a> <span class="ptime">2012-07-03 09:14发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2271678" username="hotmocha"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/hotmocha" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_hotmocha.jpg" width="40" height="40"></a></dd><dd class="comment_body">最低共有祖先，LCA（Lowest Common Ancestor)，也就是任意两节点（多个也行）最长的共有前缀。比如下图中，节点7同节点10的共同祖先是节点1与借点，但最低共同祖先是5。 查找LCA的算法是O(1)的复杂度，这年头少见。代价是需要对后缀树做复杂度为O(n)的预处理。<br>比如下图：但是下图也没有节点10呀。。  lca怎么是o(1)的，博主能不能解释一下，谢谢了<br>这句话不对吧？？？</dd></dl><dl class="comment_item comment_topic" id="comment_item_2234091"><dt class="comment_head" floor="23">23楼 <span class="user"><a class="username" href="http://blog.csdn.net/messiandzcy" target="_blank">messiandzcy</a> <span class="ptime">2012-05-27 17:48发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2234091" username="messiandzcy"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/messiandzcy" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_messiandzcy.jpg" width="40" height="40"></a></dd><dd class="comment_body">您好，请问后缀树的代码实现部分在哪里可以看到啊？</dd></dl><dl class="comment_item comment_topic" id="comment_item_2223265"><dt class="comment_head" floor="22">22楼 <span class="user"><a class="username" href="http://blog.csdn.net/passeddust" target="_blank">passeddust</a> <span class="ptime">2012-05-17 10:56发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2223265" username="passeddust"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/passeddust" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_passeddust.jpg" width="40" height="40"></a></dd><dd class="comment_body">提点个人建议，后缀树的构造过程看了下是引用了另一篇博文，看了几遍发现叙述并不清晰，如在文中有“一眼看出”、“显然”等主观描述。<br>个人认为，行文应避免这种判断，着力于将过程更清晰的描述出来，如果July认可，或许可以进一步讲述这个过程。</dd><dl class="comment_item comment_reply" id="comment_item_2223276"><dt class="comment_head" floor="22">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2012-05-17 11:02发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2223276" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复passeddust：建议真心不错</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2208425"><dt class="comment_head" floor="21">21楼 <span class="user"><a class="username" href="http://blog.csdn.net/gstc110" target="_blank">盖世天才</a> <span class="ptime">2012-05-08 12:37发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2208425" username="gstc110"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/gstc110" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_gstc110.jpg" width="40" height="40"></a></dd><dd class="comment_body">最长回文子串可以转化为求原串与翻转后串的最长公共子串问题吧？如XMADAMYX，其翻转后为XYMADAMX，然后就可以利用后缀数组来求两者间的最长公共子串。。。我这说的对不？</dd><dl class="comment_item comment_reply" id="comment_item_3140067"><dt class="comment_head" floor="21">Re: <span class="user"><a class="username" href="http://blog.csdn.net/mymodian" target="_blank">mymodian</a> <span class="ptime">2013-11-12 21:56发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="3140067" username="mymodian"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/mymodian" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_mymodian.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复gstc110：肯定不对啊，比如 1234bc4321efe，照你的算法不就是1234算最长回文啦，而实际上是efe才对。</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2200779"><dt class="comment_head" floor="20">20楼 <span class="user"><a class="username" href="http://blog.csdn.net/anpipizmy" target="_blank">anpipizmy</a> <span class="ptime">2012-05-01 14:21发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2200779" username="anpipizmy"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/anpipizmy" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_anpipizmy.jpg" width="40" height="40"></a></dd><dd class="comment_body">“对单词的每一位置i(也就是从0到N-1)，获取LCA(S(i), S‘(N-i+1)) 以及LCA(S(i+1), S’(n-i+1))。”<br>这个地方应该是“LCA(S(i), S‘(N-i-1)) 以及LCA(S(i+1), S’(n-i-1))”吧？</dd></dl><dl class="comment_item comment_topic" id="comment_item_2197373"><dt class="comment_head" floor="19">19楼 <span class="user"><a class="username" href="http://blog.csdn.net/wenzhuanglin" target="_blank">wenzhuanglin</a> <span class="ptime">2012-04-26 23:10发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2197373" username="wenzhuanglin"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/wenzhuanglin" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_wenzhuanglin.jpg" width="40" height="40"></a></dd><dd class="comment_body">不错</dd></dl><dl class="comment_item comment_topic" id="comment_item_2195443"><dt class="comment_head" floor="18">18楼 <span class="user"><a class="username" href="http://blog.csdn.net/baidu20008" target="_blank">baidu20008</a> <span class="ptime">2012-04-25 20:14发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2195443" username="baidu20008"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/baidu20008" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_baidu20008.jpg" width="40" height="40"></a></dd><dd class="comment_body">trie树的三条性质中<br>第一条说除根节点外每个节点只包含一个字符<br>接着第二条又说连接起来为节点对应的字符串<br>那么除根节点外的其他节点里存的到底是字符还是字符串呢？是不是有点矛盾？？</dd></dl><dl class="comment_item comment_topic" id="comment_item_2191942"><dt class="comment_head" floor="17">17楼 <span class="user"><a class="username" href="http://blog.csdn.net/jj12345jj198999" target="_blank">Felven</a> <span class="ptime">2012-04-23 10:09发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2191942" username="jj12345jj198999"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/jj12345jj198999" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_jj12345jj198999.jpg" width="40" height="40"></a></dd><dd class="comment_body">请问博主字典树查找速度是O(mlogn)，n为单词个数，m为待查找单词个数，应该不能再优化了吧</dd><dl class="comment_item comment_reply" id="comment_item_2191977"><dt class="comment_head" floor="17">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2012-04-23 10:25发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2191977" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复jj12345jj198999：是的，n单词个数，则其高度为logn，查询m个单词，则其复杂度为m*logn。</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2136555"><dt class="comment_head" floor="16">16楼 <span class="user"><a class="username" href="http://blog.csdn.net/hjyhjy1320" target="_blank">hjyhjy1320</a> <span class="ptime">2012-03-19 16:33发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2136555" username="hjyhjy1320"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/hjyhjy1320" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_hjyhjy1320.jpg" width="40" height="40"></a></dd><dd class="comment_body">谢谢楼主好文章，因为想做中文聚类的东西用到后缀树，可否请楼主分析下后缀树应用于中文文档时的时间性能。。</dd></dl><dl class="comment_item comment_topic" id="comment_item_2129010"><dt class="comment_head" floor="15">15楼 <span class="user"><a class="username" href="http://blog.csdn.net/leo524891010" target="_blank">leo524891010</a> <span class="ptime">2012-03-13 13:16发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2129010" username="leo524891010"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/leo524891010" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_leo524891010.jpg" width="40" height="40"></a></dd><dd class="comment_body">真是难得一见的好教材 感谢博主</dd></dl><dl class="comment_item comment_topic" id="comment_item_2056305"><dt class="comment_head" floor="14">14楼 <span class="user"><a class="username" href="http://blog.csdn.net/springasa111" target="_blank">springasa111</a> <span class="ptime">2011-12-18 15:30发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2056305" username="springasa111"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/springasa111" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_springasa111.jpg" width="40" height="40"></a></dd><dd class="comment_body"><div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><span data-mod="popu_168"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><div style="position: absolute; left: 0px; top: 0px; width: 0px; height: 0px; z-index: 99;"><embed id="ZeroClipboardMovie_1" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="0" height="0" name="ZeroClipboardMovie_1" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=1&amp;width=0&amp;height=0" wmode="transparent"></div></span><span data-mod="popu_169"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a></span><a href="http://blog.csdn.net/v_july_v/article/details/6897097#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="comment">//Trie树的单词查询实现一节中</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>p-&gt;next[id]&nbsp;=&nbsp;(trieNode&nbsp;*)malloc(<span class="keyword">sizeof</span><span>(trieNode));&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">//应该是：</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>p-&gt;next[id]&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;trieNode();&nbsp;&nbsp;</span></span></li></ol></div><pre name="code2" class="cpp" style="display: none;">//Trie树的单词查询实现一节中
p-&gt;next[id] = (trieNode *)malloc(sizeof(trieNode));
//应该是：
p-&gt;next[id] = new trieNode();
</pre></dd></dl><dl class="comment_item comment_topic" id="comment_item_2000822"><dt class="comment_head" floor="13">13楼 <span class="user"><a class="username" href="http://blog.csdn.net/xming4321" target="_blank">十一文</a> <span class="ptime">2011-10-29 10:00发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2000822" username="xming4321"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/xming4321" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_xming4321.jpg" width="40" height="40"></a></dd><dd class="comment_body">不错 呵呵 来拜读</dd><dl class="comment_item comment_reply" id="comment_item_2001139"><dt class="comment_head" floor="13">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-29 18:34发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2001139" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复xming4321：永久欢迎。</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_1999807"><dt class="comment_head" floor="12">12楼 <span class="user"><a class="username" href="http://blog.csdn.net/lsccsl" target="_blank">深蓝怒火</a> <span class="ptime">2011-10-28 08:54发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1999807" username="lsccsl"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/lsccsl" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_lsccsl.jpg" width="40" height="40"></a></dd><dd class="comment_body">看完之后,获益非浅<br>决定每天蹲点,向大神学习!</dd></dl><dl class="comment_item comment_topic" id="comment_item_1997228"><dt class="comment_head" floor="11">11楼 <span class="user"><a class="username" href="http://blog.csdn.net/skjbing126" target="_blank">skjbing126</a> <span class="ptime">2011-10-25 22:26发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1997228" username="skjbing126"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/skjbing126" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_skjbing126.jpg" width="40" height="40"></a></dd><dd class="comment_body">希望July多发点面试的东西，比如经验也行，最近发现自己总是过笔试，面试难过，来翻翻你的文章好像还是笔试的偏多</dd><dl class="comment_item comment_reply" id="comment_item_1997266"><dt class="comment_head" floor="11">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-25 23:05发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1997266" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复skjbing126：额，之前整理的面试占80%，最近的文章也是笔试/面试各占一半。</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_1996157"><dt class="comment_head" floor="10">10楼 <span class="user"><a class="username" href="http://blog.csdn.net/flxue" target="_blank">flxue</a> <span class="ptime">2011-10-24 22:53发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1996157" username="flxue"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/flxue" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_flxue.jpg" width="40" height="40"></a></dd><dd class="comment_body">看到這個，很興奮！</dd></dl><dl class="comment_item comment_topic" id="comment_item_1995387"><dt class="comment_head" floor="9">9楼 <span class="user"><a class="username" href="http://blog.csdn.net/%E6%82%A0%E6%82%A0%E9%95%BF%E9%A3%8E" target="_blank">悠悠长风</a> <span class="ptime">2011-10-24 12:26发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1995387" username="悠悠长风"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/%E6%82%A0%E6%82%A0%E9%95%BF%E9%A3%8E" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_悠悠长风.jpg" width="40" height="40"></a></dd><dd class="comment_body">我有一个问题：<br>在hash中，例如有串：911，911456输入，如果要同时执行建立与查询，过程就是查询911，没有，然后存入9、91、911；查询911456，没有然后存入9114、91145、911456，而程序没有记忆功能，并不知道911在输入数据中出现过。所以用hash必须先存入所有子串，然后for循环查询。<br>-------------------- 关于这点，我有不同的看法。hash也是可以实现边建立边查询的啊。当插入911时，需要一个额外的标志位，表示它是一个完整的单词。在处理911456时，也是按照前面的查询9,91,911，当查询911时，是可以找到前面插入的911，且通过标志位知道911为一个完整单词。那么就可以判断出911为911456的前缀啊。<br>虽然trie树更适合这个问题，但是我认为hash也是可以实现边建立，边查找的啊</dd><dl class="comment_item comment_reply" id="comment_item_1995594"><dt class="comment_head" floor="9">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-24 15:08发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1995594" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复悠悠长风：如何做这个额外的标志?</dd><dl class="comment_item comment_reply" id="comment_item_2000719"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-29 00:18发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2000719" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复v_JULY_v：但若反过来呢?比如说是先查询911456，而后查询911呢？你的在hash中做一个完整单词的标志就行不通了。因为，你查询911456时，并不知道后来911会是一个完整的单词。</dd></dl><dl class="comment_item comment_reply" id="comment_item_1996149"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/%E6%82%A0%E6%82%A0%E9%95%BF%E9%A3%8E" target="_blank">悠悠长风</a> <span class="ptime">2011-10-24 22:45发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1996149" username="悠悠长风"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/%E6%82%A0%E6%82%A0%E9%95%BF%E9%A3%8E" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_悠悠长风.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复v_JULY_v：hash的一个节点为自己定义的，存的数据为字符串如911，但是可在该节点添加新的标志。<br>还有一个方法，既然是字符串，那么可以第一个字符的最高位作为标志位。</dd><dl class="comment_item comment_reply" id="comment_item_2000753"><dt class="comment_head" floor="2">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-29 03:25发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2000753" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复悠悠长风：但若反过来呢?比如说是先查询911456，而后查询911呢？你的在hash中做一个完整单词的标志就行不通了。因为，你查询911456时，并不知道后来911会是一个完整的单词。</dd><dl class="comment_item comment_reply" id="comment_item_2190240" style="margin-left:0;"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/jaentneng" target="_blank">jaentneng</a> <span class="ptime">2012-04-21 14:53发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2190240" username="jaentneng"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/jaentneng" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_jaentneng.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复v_JULY_v：“回复悠悠长风：但若反过来呢?比如说是先查询911456，而后查询911呢？你的在hash中做一个完整单词的标志就行不通了。因为，你查询911456时，并不知道后来911会是一个完整的单词。”<br><br>反过来就更简单了，如果在查询911456没有，然后插入它的所有前缀；而查询911时，hash里已经有了，那肯定说明911是某个字符串的前缀啊！所以我觉得这个也是可行的。</dd></dl></dl></dl></dl></dl><dl class="comment_item comment_topic" id="comment_item_1994891"><dt class="comment_head" floor="8">8楼 <span class="user"><a class="username" href="http://blog.csdn.net/xming4321" target="_blank">十一文</a> <span class="ptime">2011-10-23 20:39发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994891" username="xming4321"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/xming4321" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_xming4321.jpg" width="40" height="40"></a></dd><dd class="comment_body">来看</dd></dl><dl class="comment_item comment_topic" id="comment_item_1994770"><dt class="comment_head" floor="7">7楼 <span class="user"><a class="username" href="http://blog.csdn.net/Zsm0107" target="_blank">yun_feng_scut</a> <span class="ptime">2011-10-23 17:08发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994770" username="Zsm0107"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/Zsm0107" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_zsm0107.jpg" width="40" height="40"></a></dd><dd class="comment_body">July大牛你打错了吧 "凸轮吞枣"。</dd><dl class="comment_item comment_reply" id="comment_item_1994772"><dt class="comment_head" floor="7">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-23 17:09发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994772" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复Zsm0107：。是的，改正下。多谢。</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_1994602"><dt class="comment_head" floor="6">6楼 <span class="user"><a class="username" href="http://blog.csdn.net/leehark" target="_blank">leehark</a> <span class="ptime">2011-10-23 11:38发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994602" username="leehark"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/leehark" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_leehark.jpg" width="40" height="40"></a></dd><dd class="comment_body">不错的文章，好久没有看这方面的东东了。。。后缀树已成传说。。。：）</dd></dl><dl class="comment_item comment_topic" id="comment_item_1994591"><dt class="comment_head" floor="5">5楼 <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-23 11:09发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994591" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">乔布斯：当你意识到你终将死去，你会放下所有一切。</dd></dl><dl class="comment_item comment_topic" id="comment_item_1994570"><dt class="comment_head" floor="4">4楼 <span class="user"><a class="username" href="http://blog.csdn.net/conan_holmes" target="_blank">mdyang</a> <span class="ptime">2011-10-23 10:35发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994570" username="conan_holmes"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/conan_holmes" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_conan_holmes.jpg" width="40" height="40"></a></dd><dd class="comment_body">引用别人的文章不标明出处？后缀树<br>http://blog.csdn.net/TsengYuen/article/details/4815921</dd><dl class="comment_item comment_reply" id="comment_item_1994581"><dt class="comment_head" floor="4">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-23 10:51发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994581" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复conan_holmes：见本文参考，昨已注明。</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_1994495"><dt class="comment_head" floor="3">3楼 <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-23 03:12发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994495" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">折腾了整整六个小时，相册空间容量快不足了，日后咋传照片？天杀的。ok，睡觉，晚安。</dd><dl class="comment_item comment_reply" id="comment_item_2262112"><dt class="comment_head" floor="3">Re: <span class="user"><a class="username" href="http://blog.csdn.net/cotton201012" target="_blank">cotton201012</a> <span class="ptime">2012-06-22 10:10发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2262112" username="cotton201012"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/cotton201012" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_cotton201012.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复v_JULY_v：找图床可行吗？photobucket我一直在用。不反感水印可以考虑http://weibotuchuang.sinaapp.com/bookmark.html</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_1994459"><dt class="comment_head" floor="2">2楼 <span class="user"><a class="username" href="http://blog.csdn.net/homlean" target="_blank">homlean</a> <span class="ptime">2011-10-23 00:40发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994459" username="homlean"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/homlean" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_homlean.jpg" width="40" height="40"></a></dd><dd class="comment_body">看完再睡...</dd><dl class="comment_item comment_reply" id="comment_item_1994473"><dt class="comment_head" floor="2">Re: <span class="user"><a class="username" href="http://blog.csdn.net/v_JULY_v" target="_blank">v_JULY_v</a> <span class="ptime">2011-10-23 01:23发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994473" username="v_JULY_v"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/v_JULY_v" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_v_july_v.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复homlean：看完了没?早点歇息。</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_1994338"><dt class="comment_head" floor="1">1楼 <span class="user"><a class="username" href="http://blog.csdn.net/lkllz" target="_blank">USTC学弱</a> <span class="ptime">2011-10-22 21:01发表</span>  <a href="http://blog.csdn.net/v_july_v/article/details/6897097#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1994338" username="lkllz"> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/v_july_v/article/details/6897097#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/lkllz" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/3_lkllz.jpg" width="40" height="40"></a></dd><dd class="comment_body">居然是沙发，被我抢到了，我关注博主很久了，收获不少</dd></dl><div class="clear"></div></div>
    <div id="comment_bar" style="display: none;">
    </div>
    <div id="comment_form"><div class="guest_link">您还没有登录,请<a href="javascript:void(0);" onclick="javascript:loginbox();">[登录]</a>或<a href="http://passport.csdn.net/account/register?from=http%3A%2F%2Fblog.csdn.net%2Fv_july_v%2Farticle%2Fdetails%2F6897097">[注册]</a></div></div>
    <div class="announce">
        * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
</div>

<script type="text/javascript">
    var fileName = '6897097';
    var commentscount = 95;
    var islock = false
</script>

    <div id="ad_bot">
    </div>
<div id="report_dialog">
</div>

<div id="d-top" style="bottom:60px;">

        <a id="quick-reply" class="btn btn-top q-reply" title="快速回复" style="display:none;">
            <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/blog-icon-reply.png" alt="快速回复">
        </a>    
    <a id="d-top-a" class="btn btn-top backtop" style="display: none;" title="返回顶部" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_huidaodingbu&#39;])">         
         <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/top.png" alt="TOP">
    </a>
</div>
<script type="text/javascript">
    $(function ()
    {
        $("#ad_frm_0").height("90px");
        
        setTimeout(function(){
            $("#ad_frm_2").height("200px");
        },1000);    
    });
  
</script>
<style type="text/css">
    .tag_list
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #D7CBC1;
        color: #000000;
        font-size: 12px;
        line-height: 20px;
        list-style: none outside none;
        margin: 10px 2% 0 1%;
        padding: 1px;
    }
    .tag_list h5
    {
        background: none repeat scroll 0 0 #E0DBD3;
        color: #47381C;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        padding: 0 5px;
        margin: 0;
    }
    .tag_list h5 a
    {
        color: #47381C;
    }
    .classify
    {
        margin: 10px 0;
        padding: 4px 12px 8px;
    }
    .classify a
    {
        margin-right: 20px;
        white-space: nowrap;
    }
</style>





<div id="pop_win" style="display:none ;position: absolute; z-index: 10000; border: 1px solid rgb(220, 220, 220); top: 222.5px; left: 630px; opacity: 1; background: none 0px 0px repeat scroll rgb(255, 255, 255);">
    
</div>
<div id="popup_mask"></div>
<style>
    #popup_mask
    {
        position: absolute;
        width: 100%;
        height: 100%;
        background: #000;
        z-index: 9999;
        left: 0px;
        top: 0px;
        opacity: 0.3;
        filter: alpha(opacity=30);
        display: none;
    }

</style>




<script type="text/javascript">
    $(function(){        
        
        setTimeout(function(){
            $(".comment_body:contains('回复')").each(function(index,item){
                var u=$(this).text().split('：')[0].toString().replace("回复","")
                var thisComment=$(this);
                if(u)
                {
                    $.getJSON("https://passport.csdn.net/get/nick?callback=?", {users: u}, function(a) {
                        if(a!=null&&a.data!=null&&a.data.length>0)
                        {
                            nick=a.data[0].n; 
                            if(u!=nick)
                            {
                                thisComment.text(thisComment.text().replace(u,nick));  
                            }
                        }       
                    });  
                }
            });         

        },200);  

        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },5000);

        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },10000);

        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },15000);
        
        setTimeout(function(){
            $("a img[src='http://js.tongji.linezing.com/stats.gif']").parent().css({"position":"absolute","left":"50%"});
        },300);
    });

    function loginbox(){
        var $logpop=$("#pop_win");
        $logpop.html('<iframe src="https://passport.csdn.net/account/loginbox?service=http://static.blog.csdn.net/callback.htm" frameborder="0" height="600" width="400" scrolling="no"></iframe>');

        $('#popup_mask').css({
            opacity: 0.5,
            width: $( document ).width() + 'px',
            height:  $( document ).height() + 'px'
        });
        $('#popup_mask').css("display","block");
 
        $logpop.css( {
            top: ($( window ).height() - $logpop.height())/ 2  + $( window 
       ).scrollTop() + 'px',
            left:($( window ).width() - $logpop.width())/ 2
        } );
 
        setTimeout( function () {
            $logpop.show();
            $logpop.css( {
                opacity: 1
            } );
        }, 200 );
 
        $('#popup_mask').unbind("click");
        $('#popup_mask').bind("click", function(){
            $('#popup_mask').hide();
            var $clopop = $("#pop_win");
            $("#common_ask_div_sc").css("display","none");
            $clopop.css( {
                opacity: 0
            } );
            setTimeout( function () {
                $clopop.hide();
            }, 350 );
            return false;
        });
    }   

    var articletitle='从Trie树（字典树）谈到后缀树（10.28修订）';

</script>










                        <div class="clear">
                        </div>
                    </div>                   
                
            </div>
                   
           <div id="side">
               
    <div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/v_JULY_v" target="_blank">
    <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/1_v_july_v.jpg" title="访问我的空间" style="max-width:90%">
    </a>
    <br>
    <span><a href="http://my.csdn.net/v_JULY_v" class="user_name" target="_blank">v_JULY_v</a></span>
</div>
<div class="interact">

    <a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]"></a>

 <a href="javascript:void(0);" class="letter" title="[发私信]" onclick="window.open(&#39;http://msg.csdn.net/letters/model?receiver=v_JULY_v&#39;,&#39;_blank&#39;,&#39;height=350,width=700&#39;);_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_sixin&#39;])"></a>  
</div>
<div id="blog_medal">
                       <div class="ico_expert" onclick="javascript:location=&#39;http://blog.csdn.net/experts/rule.html&#39;" title="CSDN认证专家" style="cursor:pointer;width:60px;height:60px;background:url(&#39;http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/bokezhuanjiamiddle.png&#39;) no-repeat"></div>
                <div id="bms_box">
                                            <a target="_blank">
                                                    <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/zhuanlandaren.png" onmouseover="m_over_m(this,2)" onmouseout="m_out_m()" alt="6">
                                            </a>
                                            <a target="_blank">
                                                    <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/chizhiyiheng.png" onmouseover="m_over_m(this,4)" onmouseout="m_out_m()" alt="1">
                                            </a>
                                            <a target="_blank">
                                                    <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/weiruanmvp.png" onmouseover="m_over_m(this,5)" onmouseout="m_out_m()" alt="1">
                                            </a>
                                            <a target="_blank">
                                                    <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/bokezhixing.png" onmouseover="m_over_m(this,6)" onmouseout="m_out_m()" alt="1">
                                            </a>
               </div>
</div>
<ul id="blog_rank">
    <li>访问：<span>12957814次</span></li>
    <li>积分：<span>49871</span> </li>    
    <li>等级： <span style="position:relative;display:inline-block;z-index:1">
            <img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/blog8.png" alt="" style="vertical-align: middle;" id="leveImg">
            <div id="smallTittle" style=" position: absolute;  left: -24px;  top: 25px;  text-align: center;  width: 101px;  height: 32px;  background-color: #fff;  line-height: 32px;  border: 2px #DDDDDD solid;  box-shadow: 0px 2px 2px rgba (0,0,0,0.1);  display: none;   z-index: 999;">
            <div style="left: 42%;  top: -8px;  position: absolute;  width: 0;  height: 0;  border-left: 10px solid transparent;  border-right: 10px solid transparent;  border-bottom: 8px solid #EAEAEA;"></div>
            积分：49871 </div>
        </span>  </li>
    <li>排名：<span>第63名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>158篇</span></li>
    <li>转载：<span>0篇</span></li>
    <li>译文：<span>6篇</span></li>
    <li>评论：<span>14876条</span></li>
</ul>
</ul>
</div>




<div id="custom_column_3628263" class="panel">
<ul class="panel_head"><span>博主简介</span></ul>
<ul class="panel_body">
July，于2010年10月11日开始在CSDN上写博（搜索：“结构之法”，进入本博客），博客专注面试、算法、机器学习。2015年正式创业，七月在线创始人兼CEO，公司官网：七月在线（<a href="https://www.julyedu.com/" target="_blank">https://www.julyedu.com/</a>），微博@研究者July。新书《编程之法》15年10月14日起正式上市。JulyEdu c/c++/算法Q群：123531805。July，2016/5月。
</ul>
</div>

<div id="custom_column_1006264" class="panel">
<ul class="panel_head"><span>July和他朋友们的创业平台</span></ul>
<ul class="panel_body">
<div style="width:100%; text-align:center; color: rgb(0, 0, 255);  background-color: rgb(244, 251, 251);">
<a href="http://www.julyedu.com/weekend/train2" target="_blank">
<img style="width:100%" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/1499135775_9373.jpg" alt="七月在线"></a></div>
</ul>
</div>

<div id="custom_column_1006267" class="panel">
<ul class="panel_head"><span>我的微博</span></ul>
<ul class="panel_body">
<iframe width="100%" height="350" class="share_self" frameborder="0" scrolling="no" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/index.html"></iframe>
</ul>
</div>

<div id="custom_column_1006263" class="panel">
<ul class="panel_head"><span>July新书《编程之法》上市</span></ul>
<ul class="panel_body">
<div style="width:100%; text-align:center; color: rgb(0, 0, 255);  background-color: rgb(244, 251, 251);">
<a href="http://item.jd.com/11786791.html" target="_blank">
<img style="width:95%" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/20151021114044702" alt="Android art">
</a>
<a href="http://item.jd.com/11786791.html" target="_blank">京东</a>&nbsp;&nbsp;
<a href="http://product.dangdang.com/23796222.html" target="_blank">当当</a>&nbsp;&nbsp;
<a href="https://list.tmall.com/search_product.htm?q=%B1%E0%B3%CC%D6%AE%B7%A8&amp;type=p&amp;vmarket=&amp;spm=875.7789098.a2227oh.d100&amp;from=mallfp..pc_1_searchbutton" target="_blank">天猫</a>&nbsp;&nbsp;
<a href="http://www.amazon.cn/%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%B3%95-%E9%9D%A2%E8%AF%95%E5%92%8C%E7%AE%97%E6%B3%95%E5%BF%83%E5%BE%97-July/dp/B016N0UUJG/ref=sr_1_1?ie=UTF8&amp;qid=1445598929&amp;sr=8-1&amp;keywords=%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%B3%95" target="_blank">Amazon</a><br>
<a href="http://www.epubit.com.cn/book/details/4051" target="_blank">异步社区</a>&nbsp;&nbsp;
<a href="http://product.china-pub.com/4880112" target="_blank">互动出版网</a>&nbsp;&nbsp;
</div>
</ul>
</div><div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">    
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/795430" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">03.Algorithms（实现）</a><span>(9)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/769275" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">01.Algorithms（研究）</a><span>(27)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/772685" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">02.Algorithms（后续）</a><span>(22)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/795592" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">04.Algorithms（讨论）</a><span>(1)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/767340" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">05.MS 100' original</a><span>(7)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/767341" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">06.MS 100' answers</a><span>(13)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/767339" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">07.MS 100' classify</a><span>(4)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/772664" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">08.MS 100' one Keys</a><span>(6)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/807763" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">09.MS 100' follow-up</a><span>(4)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/767342" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">10.MS 100' comments</a><span>(4)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/784066" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">11.TAOPP（编程艺术）</a><span>(34)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/823515" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">12.TAOPP string</a><span>(8)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/823516" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">13.TAOPP array</a><span>(14)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/823988" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">14.TAOPP list</a><span>(2)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/823993" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">15.stack/heap/queue</a><span>(0)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/823989" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">16.TAOPP tree</a><span>(2)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/823990" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">17.TAOPP c/c++</a><span>(2)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/823517" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">18.TAOPP function</a><span>(2)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/823518" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">19.TAOPP algorithms</a><span>(8)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/824851" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">20.number operations</a><span>(1)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/835511" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">21.Essays</a><span>(6)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/1106578" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">22.Big Data Processing</a><span>(5)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/1112658" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">23.Redis/MongoDB</a><span>(0)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/771597" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">24.data structures</a><span>(12)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/774945" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">25.Red-black tree</a><span>(7)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/792352" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">26.Image Processing</a><span>(3)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/854240" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">27.Architecture design</a><span>(4)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/865324" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">28.Source analysis</a><span>(3)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/896844" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">29.Recommend&amp;Search</a><span>(4)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/v_JULY_v/article/category/1061301" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">30.Machine L &amp; Deep Learning</a><span>(19)</span>
                </li>
</ul>
</div><div id="panel_Category" class="panel">
    <ul class="panel_head"><span>博客专栏</span></ul>
    <ul class="panel_body" id="sp_column">
    <table cellpadding="0" cellspacing="0"><tbody><tr>
    <td style="padding:10px 10px 0 0;">
    <a href="http://blog.csdn.net/column/details/datamining.html" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/20151123175454677" style="width:75px;height:75px;"></a>
    </td>
    <td style="padding:10px 0; vertical-align:top;">
    <a href="http://blog.csdn.net/column/details/datamining.html" target="_blank">数据挖掘十大算法系列</a>
    <p>文章：21篇</p>
    <span>阅读：2552262</span>
    </td>
    </tr></tbody></table>
    <table cellpadding="0" cellspacing="0"><tbody><tr>
    <td style="padding:10px 10px 0 0;">
    <a href="http://blog.csdn.net/column/details/ms100.html" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/20151123174955864" style="width:75px;height:75px;"></a>
    </td>
    <td style="padding:10px 0; vertical-align:top;">
    <a href="http://blog.csdn.net/column/details/ms100.html" target="_blank">微软面试100题系列by July</a>
    <p>文章：18篇</p>
    <span>阅读：3235270</span>
    </td>
    </tr></tbody></table>
    <table cellpadding="0" cellspacing="0"><tbody><tr>
    <td style="padding:10px 10px 0 0;">
    <a href="http://blog.csdn.net/column/details/taopp.html" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/20151123174941864" style="width:75px;height:75px;"></a>
    </td>
    <td style="padding:10px 0; vertical-align:top;">
    <a href="http://blog.csdn.net/column/details/taopp.html" target="_blank">程序员编程艺术</a>
    <p>文章：32篇</p>
    <span>阅读：2471772</span>
    </td>
    </tr></tbody></table>
    <table cellpadding="0" cellspacing="0"><tbody><tr>
    <td style="padding:10px 10px 0 0;">
    <a href="http://blog.csdn.net/column/details/Dijkstra.html" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/20151123174936630" style="width:75px;height:75px;"></a>
    </td>
    <td style="padding:10px 0; vertical-align:top;">
    <a href="http://blog.csdn.net/column/details/Dijkstra.html" target="_blank">经典算法研究</a>
    <p>文章：31篇</p>
    <span>阅读：3343371</span>
    </td>
    </tr></tbody></table>
    </ul>
</div><div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search csdn-tracking-statistics" target="_blank" data-mod="popu_306">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字"></span>
        <input id="btnSubmit" type="button" value="搜索" title="search in blog">
        <input type="hidden" name="q" id="inputQ">
        <input type="hidden" name="t" value="blog">
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div>

<script type="text/javascript">

   
    $(function () {
        $("#btnSubmit").unbind("click");
        $("#btnSubmit").click(function () {           
            search();
        });

        $("#frmSearch").submit(function () {           
            search();
            return false;
        });

        function search()
        {
            if ($("#inputSearch").val() == "") {               
                alert("请录入搜索关键词！");                         
                return false;
            }
            //var url = "http://so.csdn.net/so/search/s.do?q=" + encodeURIComponent($("#inputSearch").val()) + "&u=" + username + "&t=blog";           
            var url = "https://www.baidu.com/s?wd=" + encodeURIComponent($("#inputSearch").val()) + "%20site%3Ablog.csdn.net"
            window.location.href = url;
        }   
    });
</script><div id="hotarticls" class="panel tracking-ad" data-mod="popu_340">
<ul class="panel_head">
    <span>       
阅读排行    </span>
</ul>

<ul class="panel_body itemlist">
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/7624837" title="支持向量机通俗导论（理解SVM的三层境界）" target="_blank">支持向量机通俗导论（理解SVM的三层境界）</a><span>(641847)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6543438" title="程序员面试、算法研究、编程艺术、红黑树、数据挖掘5大系列集锦" target="_blank">程序员面试、算法研究、编程艺术、红黑树、数据挖掘5大系列集锦</a><span>(546292)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/7382693" title="教你如何迅速秒杀掉：99%的海量数据处理面试题" target="_blank">教你如何迅速秒杀掉：99%的海量数据处理面试题</a><span>(511196)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6530142" title="从B树、B+树、B*树谈到R 树" target="_blank">从B树、B+树、B*树谈到R 树</a><span>(459568)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6279498" title="十道海量数据处理面试题与十个方法大总结" target="_blank">十道海量数据处理面试题与十个方法大总结</a><span>(323629)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/7974418" title="九月十月百度人搜，阿里巴巴，腾讯华为笔试面试八十题(第331-410题)" target="_blank">九月十月百度人搜，阿里巴巴，腾讯华为笔试面试八十题(第331-410题)</a><span>(286952)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/7041827" title="从头到尾彻底理解KMP（2014年8月22日版）" target="_blank">从头到尾彻底理解KMP（2014年8月22日版）</a><span>(285354)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6256463" title="十一、从头到尾解析Hash表算法" target="_blank">十一、从头到尾解析Hash表算法</a><span>(264910)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6105630" title="教你初步了解红黑树" target="_blank">教你初步了解红黑树</a><span>(259629)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6015165" title="横空出世，席卷互联网--评微软等公司数据结构+算法面试100题" target="_blank">横空出世，席卷互联网--评微软等公司数据结构+算法面试100题</a><span>(227184)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel tracking-ad" data-mod="popu_341">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/7624837" title="支持向量机通俗导论（理解SVM的三层境界）" target="_blank">支持向量机通俗导论（理解SVM的三层境界）</a><span>(582)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6543438" title="程序员面试、算法研究、编程艺术、红黑树、数据挖掘5大系列集锦" target="_blank">程序员面试、算法研究、编程艺术、红黑树、数据挖掘5大系列集锦</a><span>(515)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/7041827" title="从头到尾彻底理解KMP（2014年8月22日版）" target="_blank">从头到尾彻底理解KMP（2014年8月22日版）</a><span>(396)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/7974418" title="九月十月百度人搜，阿里巴巴，腾讯华为笔试面试八十题(第331-410题)" target="_blank">九月十月百度人搜，阿里巴巴，腾讯华为笔试面试八十题(第331-410题)</a><span>(392)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6530142" title="从B树、B+树、B*树谈到R 树" target="_blank">从B树、B+树、B*树谈到R 树</a><span>(352)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6803368" title="九月腾讯，创新工场，淘宝等公司最新面试三十题（第171-200题）" target="_blank">九月腾讯，创新工场，淘宝等公司最新面试三十题（第171-200题）</a><span>(351)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6228235" title="当今世界最为经典的十大算法--投票进行时" target="_blank">当今世界最为经典的十大算法--投票进行时</a><span>(327)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6015165" title="横空出世，席卷互联网--评微软等公司数据结构+算法面试100题" target="_blank">横空出世，席卷互联网--评微软等公司数据结构+算法面试100题</a><span>(292)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/7382693" title="教你如何迅速秒杀掉：99%的海量数据处理面试题" target="_blank">教你如何迅速秒杀掉：99%的海量数据处理面试题</a><span>(285)</span>
</li>
<li>
<a href="http://blog.csdn.net/v_july_v/article/details/6105630" title="教你初步了解红黑树" target="_blank">教你初步了解红黑树</a><span>(270)</span>
</li>
</ul>
</div>
<div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/6530142#comments">从B树、B+树、B*树谈到R 树</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/lengtianxiong" class="user_name">lengtianxiong</a>:
O（logn）是求得多少得次幂，是2得，还是10得
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/5934051#comments">算法面试：精选微软经典的算法面试100题（第1-20题）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/u014072347" class="user_name">DisFney</a>:
厉害
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/6196862#comments">十、从头到尾彻底理解傅里叶变换算法、上</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/v_JULY_v" class="user_name">v_JULY_v</a>:
@qq_35189264:一往无前虎山行 拨开云雾见光明。恭喜恭喜，也欢迎多多推荐哦。^__^
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/6196862#comments">十、从头到尾彻底理解傅里叶变换算法、上</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/qq_35189264" class="user_name">qq_35189264</a>:
发现了好东西，感谢楼主的这篇文章，让刚学完数字信号处理的我醍醐灌顶
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/51812459#comments">CNN笔记：通俗理解卷积神经网络</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/jiangjunshow" class="user_name">Jack床长</a>:
我最近在写一系列的人工智能教程，通俗易懂，无需很高的数学基础，教程也力求风趣幽默，倡导快乐学习，欢迎...
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/7041827#comments">从头到尾彻底理解KMP（2014年8月22日版）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/ice_bin123" class="user_name">Fizz彬彬</a>:
@v_JULY_v:必须的，July这花名还好记
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/7041827#comments">从头到尾彻底理解KMP（2014年8月22日版）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/v_JULY_v" class="user_name">v_JULY_v</a>:
@ice_bin123:那是必须的，叫老师如何不欣慰。欢迎推荐给身边更多人，早日铲除他们心头困惑。^...
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/7041827#comments">从头到尾彻底理解KMP（2014年8月22日版）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/ice_bin123" class="user_name">Fizz彬彬</a>:
看《算法4》头大想起July的博客一看居然个把小时就摸清了，这大概就是当老师最大的欣慰吧
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/7624837#comments">支持向量机通俗导论（理解SVM的三层境界）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/u013416434" class="user_name">努力学习的高高</a>:
感谢您的整理与分享，非常受用！！谢谢您
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/v_july_v/article/details/7624837#comments">支持向量机通俗导论（理解SVM的三层境界）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/gongyi_yf" class="user_name">工蚁</a>:
刚刚接触SVM，怒赞该文，作者写的太用心，真的很棒。博文很多，但是用心写的并不多，那些自诩大佬，看不...
    </p>
    </li>
</ul>
</div>


<div id="custom_column_1006266" class="panel">
<ul class="panel_head"><span>我的驻点</span></ul>
<ul class="panel_body">
<li><a href="http://weibo.com/julyweibo" target="_blank">00、我的新浪微博</a></li>
<ul>
<li><a href="https://github.com/julycoding/The-Art-Of-Programming-By-July" target="_blank">01、我的Github主页</a></li>
<li><a href="https://www.julyedu.com/" target="_blank">02、七月在线</a></li>
<li><a href="http://blog.csdn.net/han_xiaoyang" target="_blank">03、寒</a></li>
<li><a href="http://deeplstm.com/" target="_blank">04、冯</a></li>
<li><a href="http://blog.csdn.net/zouxy09" target="_blank">05、zxy</a></li>
<li><a href="http://www.liaoxuefeng.com/" target="_blank">06、廖雪峰</a></li>
<li><a href="http://coolshell.cn/" target="_blank">07、左耳朵耗子</a></li>
<li><a href="http://blog.csdn.net/stdcoutzyx" target="_blank">07、zyx</a></li>
<li><a href="http://www.ruanyifeng.com/blog/" target="_blank">08、阮一峰</a></li>
<li><a href="http://blog.devtang.com/" target="_blank">09、唐巧的技术博客</a></li>
<li><a href="http://sumnous.github.io/" target="_blank">10、sumnous</a></li>
<li><a href="http://blog.csdn.net/caopengcs" target="_blank">11、caopengcs</a></li>
<li><a href="http://blog.csdn.net/joycewyj" "="" target="_blank">12、joycewyj的机器学习笔记</a></li>
<li><a href="http://zhedahht.blog.163.com/blog/#m=0" target="_blank">13、Harry</a></li>
<li><a href="http://www.kuqin.com//" target="_blank">14、酷勤网</a></li>
<li><a href="http://www.itmian4.com/" target="_blank">15、IT面试论坛</a></li>
<li><a href="http://blog.csdn.net/yangliuy" target="_blank">16、北大朋友的挖掘乐园</a></li>
<li><a href="http://blog.csdn.net/abcjennifer" target="_blank">17、跟Rachel-Zhang一起读硕士</a></li>
<li><a href="http://www.51nod.com/focus.html" target="_blank">18、51nod</a></li>
<li><a href="http://blog.sina.com.cn/twocold" target="_blank">19、韩寒</a></li>
<li><a href="http://blog.sina.com.cn/shitou009" target="_blank">20、曾经的叛逆与年少</a></li>
<li><a href="http://code4app.com/" target="_blank">21、code4app:iOS代码示例</a></li>
<li><a href="http://preshing.com/" target="_blank">22、Memory Model与并发编程</a></li>
</ul>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list"><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2017/05">2017年05月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2017/03">2017年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2017/01">2017年01月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2016/11">2016年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2016/10">2016年10月</a><span>(2)</span></li><span class="hidelist" style="display:none;"><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2016/09">2016年09月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2016/07">2016年07月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2015/10">2015年10月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2015/08">2015年08月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2014/11">2014年11月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2014/10">2014年10月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2014/02">2014年02月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2014/01">2014年01月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2013/12">2013年12月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2013/09">2013年09月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2013/08">2013年08月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2013/06">2013年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2013/03">2013年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2012/12">2012年12月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2012/11">2012年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2012/09">2012年09月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2012/06">2012年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2012/05">2012年05月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2012/04">2012年04月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2012/03">2012年03月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2012/02">2012年02月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2012/01">2012年01月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/12">2011年12月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/11">2011年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/10">2011年10月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/09">2011年09月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/08">2011年08月</a><span>(11)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/07">2011年07月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/06">2011年06月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/05">2011年05月</a><span>(10)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/04">2011年04月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/03">2011年03月</a><span>(17)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/02">2011年02月</a><span>(11)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2011/01">2011年01月</a><span>(18)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2010/12">2010年12月</a><span>(14)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2010/11">2010年11月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/v_JULY_v/article/month/2010/10">2010年10月</a><span>(5)</span></li></span><div id="archive_list_button" class="list_closed">展开</div></div>
</ul>
</div>
    </div>
    <div class="clear">
    </div>


           </div>   
            <div class="clear">
            </div>
        </div>

        








    <script type="text/javascript" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/login.js"></script>
<script type="text/javascript">
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<span class='tracking-ad' data-mod='popu_167'><a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target='_blank' title='在CODE上查看代码片'  style='text-indent:0;'><img src='https://code.csdn.net/assets/CODE_ico.png' width=12 height=12 alt='在CODE上查看代码片' style='position:relative;top:1px;left:2px;'/></a></span>"
                    + "<span class='tracking-ad' data-mod='popu_170'><a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target='_blank' title='派生到我的代码片' style='text-indent:0;'><img src='https://code.csdn.net/assets/ico_fork.svg' width=12 height=12 alt='派生到我的代码片' style='position:relative;top:2px;left:2px;'/></a></span>");
        }
        
        $("[code_snippet_id]").each(function () {
            __s_id = $(this).attr("code_snippet_id");
            if (__s_id != null && __s_id != "" && __s_id != 0 && parseInt(__s_id) > 70020) {
                __code_tool = __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });

        $(".bar").show();
    });
</script>





    </div>
     


       <script type="text/javascript" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/MathJax.js"></script>   
    
    <script src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/csdn_blog_detail.min.js" type="text/javascript"></script><link rel="stylesheet" type="text/css" href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/pub_footer_2014.css"><div class="pub_fo"><div id="pub_footerall" class="pub_footer_new"><dl><dt></dt> <dd class="foot_sub_menu"><a href="http://www.csdn.net/company/about.html" target="_blank">公司简介</a><span>|</span><a href="http://www.csdn.net/company/recruit.html" target="_blank">招贤纳士</a><span>|</span><a href="http://www.csdn.net/company/marketing.html" target="_blank">广告服务</a><span>|</span><a href="http://www.csdn.net/company/contact.html" target="_blank">联系方式</a><span>|</span><a href="http://www.csdn.net/company/statement.html" target="_blank">版权声明</a><span>|</span><a href="http://www.csdn.net/company/layer.html" target="_blank">法律顾问</a><span>|</span><a href="mailto:webmaster@csdn.net">问题报告</a><span>|</span><a target="_blank" href="http://www.csdn.net/friendlink.html">合作伙伴</a><span>|</span><a href="http://bbs.csdn.net/forums/Service" target="_blank">论坛反馈</a></dd><dd class="foot_contact"><a href="javascript:void(0);" target="_blank" class="qq">网站客服</a><a href="http://wpa.qq.com/msgrd?v=3&amp;uin=2251809102&amp;site=qq&amp;menu=yes" target="_blank" class="qq">杂志客服</a><a href="http://e.weibo.com/csdnsupport/profile" target="_blank" class="weibo">微博客服</a><a href="mailto:webmaster@csdn.net" class="email" title="联系邮箱">webmaster@csdn.net</a><span class="phone" title="服务热线">400-660-0108</span><span class="interval">|</span><span>北京创新乐知信息技术有限公司 版权所有</span><span class="interval">|</span><span>江苏知之为计算机有限公司</span><span class="interval">|</span><span>江苏乐知网络技术有限公司</span></dd><dd class="foot_copyright"><span>京&nbsp;ICP&nbsp;证&nbsp;09002463&nbsp;号</span><span class="interval">|</span><span>Copyright © 1999-2017, CSDN.NET, All Rights Reserved&nbsp;</span><a href="http://www.hd315.gov.cn/beian/view.asp?bianhao=010202001032100010" target="_blank"><img src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/gongshang_logos.gif" alt="GongshangLogo" title=""></a></dd></dl></div></div><div id="note1" class="csdn_note" style="display:none; position:absolute; z-index:9999; width:440px">  <span class="notice_top_arrow"><span class="inner"></span></span>  <div class="box"></div></div><div class="csdn_notice_tip" style="display:none; position:absolute; z-index:9990; width:170px">  <iframe src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/saved_resource(2).html" frameborder="0" scrolling="no" style="z-index:-1;position:absolute;top:0;left:0;width:100%;height:100%;background:transparent"></iframe>  <div class="tip_text">您有<strong>0</strong>条新通知</div>  <a href="javascript:void 0" class="close2"></a></div><script id="noticeScript" type="text/javascript" btnid="header_notice_num" wrapid="note1" count="5" subcount="5" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/notify.js"></script><input type="hidden" id="aa_g_data_ids">
        
    <script type="text/javascript" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/csdn_public_blog_detail.min.js"></script>

    <script type="text/javascript" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/showblogmedal.ashx"></script>


  <div id="a52b5334d" style="width: 1px; height: 1px; display: none;">
                    <script id="adJs52b5334" src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/52b5334.js"></script>
                    <script>document.getElementById("adJs52b5334").src = "http://ads.csdn.net/js/opt/52b5334.js?t=" + Math.random();</script>
   <div><iframe src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/skip.html" style="width: 1px; height: 1px; position: absolute; visibility: hidden;"></iframe></div><div><iframe src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/skip(1).html" style="width: 1px; height: 1px; position: absolute; visibility: hidden;"></iframe></div><div><iframe src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/skip(2).html" style="width: 1px; height: 1px; position: absolute; visibility: hidden;"></iframe></div></div>
          
    <div class="pop_CA_cover" style="display:none"></div>
    <div class="pop pop_CA" style="display:none">
          <div class="CA_header">
            收藏助手
            <span class="cancel_icon" id="fapancle" onclick="$(&#39;.pop_CA&#39;).hide();$(&#39;.pop_CA_cover&#39;).hide();"></span>
          </div>
          <iframe src="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/saved_resource(3).html" id="fa" frameborder="0" width="100%" height="360" scrolling="no"></iframe>
    </div>


        <script type="text/javascript">

            $(function () {
                var fromjs = $("#fromjs");
                if (fromjs.length > 0) {
                    $("#fromjs .markdown_views pre").addClass("prettyprint");
                    prettyPrint();

                    $('pre.prettyprint code').each(function () {
                        var lines = $(this).text().split('\n').length;
                        var $numbering = $('<ul/>').addClass('pre-numbering').hide();
                        $(this).addClass('has-numbering').parent().append($numbering);
                        for (i = 1; i <= lines; i++) {
                            $numbering.append($('<li/>').text(i));
                        };
                        $numbering.fadeIn(1700);
                    });

                    $('.pre-numbering li').css("color", "#999");
                }
            });

            $(".markdown_views a[target!='_blank']").attr("target", "_blank");

            //$(".toc a[target='_blank']").attr("target", "");

            setTimeout(function () {
                $(".toc a[target='_blank']").attr("target", "");
            }, 500);

        </script>


   
<div id="mask_code"></div><div class="gist_edit"><div class="save_snippets clearfix"><div class="tit"><h3>保存代码片</h3><span>整理和分享保存的代码片，请访问<a href="https://code.csdn.net/snippets_manage" target="_blank">代码笔记</a></span></div><div class="con_form"><ul class="gist_edit_list clearfix"><li><span class="red">*</span><span class="txt">标题</span><input id="form_title" class="form-input" placeholder="从Trie树（字典树）谈到后缀树（10.28修订）" type="text"></li><li><span class="red">*</span><span class="txt">描述</span><textarea id="form-textarea" class="form-textarea" placeholder="从Trie树（字典树）谈到后缀树（10.28修订）： http://blog.csdn.net/v_july_v/article/details/6897097"></textarea></li><li><span class="red">&nbsp;</span><span class="txt">标签</span><div id="divSearchTags"><span class="label blog_tag"><span>算法</span><a title="Removing tag" href="javascript:;">x</a></span><span class="label blog_tag"><span>数据结构</span><a title="Removing tag" href="javascript:;">x</a></span><span class="label blog_tag"><span>construction</span><a title="Removing tag" href="javascript:;">x</a></span><span class="label blog_tag"><span>tree</span><a title="Removing tag" href="javascript:;">x</a></span><span class="label blog_tag"><span>null</span><a title="Removing tag" href="javascript:;">x</a></span><input id="insertTag" class="insertTag" placeholder="请输入标签，按Enter生成(最多5项)" type="text" value="" name="insertTag" maxlength="21" style="color: rgb(51, 51, 51);"><input id="OrganTag" class="OrganTag" type="hidden" name="OrganTag" value="算法,数据结构,construction,tree,null,"><input id="OldOrganTag" class="OldOrganTag" type="hidden" name="OldOrganTag" value=""><input type="hidden" name="txtSearchTags"></div></li></ul></div><div class="bottom-bar"><a href="javascript:;" class="btn-submit btn-cancel">取消</a><span class="tracking-ad" data-mod="popu_250"><a class="btn-submit btn-confirm" href="javascript:;" target="_blank">确定</a></span></div></div></div><link rel="stylesheet" type="text/css" media="screen" href="./从Trie树（字典树）谈到后缀树（10.28修订） - 结构之法 算法之道 - CSDN博客_files/ask_float_fonts_css-6b30a53970eb5c3a2a045e3df585b475.css"><div data-mod="popu_64" class="csdn-tracking-statistics" chg-blk="0"><a id="com-quick-QRcode" class="QRcodebg1" title="扫描二维码" style="top:245px"><span class="closeQR"></span></a><a id="com-quick-reply" title="快速回复" style="top:379px"></a><a id="com-quick-collect" title="我要收藏" style="top:417px"></a><a id="com-d-top-a" style="top: 455px; display: inline;" title="返回顶部" onclick=""></a></div><div class="pop_edit ask_second comm_ask_second"><h3>提问</h3><span class="ask_float_span">您的问题将会被发布在“<a class="ask_float_channel" href="http://ask.csdn.net/" target="_blank" style="cursor:pointer">技术问答</a>”频道</span><a href="http://blog.csdn.net/v_july_v/article/details/6897097#" nodetype="close" class="close">×</a><div class="context"><div class="err_div"><span class="err_ico"></span><span class="err_txt">该问题已存在，请勿重复提问</span></div><div class="input_div"><input id="askInputSecond" type="text" style="font-size:14px;" placeholder="问题标题"></div><div class="cm_box"><div class="cm_dialog"></div> <div class="pop_cm cm_add_link"><input type="text" placeholder="链接内容" id="af_cm_link_txt"><input type="text" placeholder="链接地址" id="af_cm_link_url"><input type="text" placeholder="链接提示" id="af_cm_link_tit"><div class="text-right"><span class="btn btn-default btn-sm" id="add_link_btn">插入链接</span> </div> </div><div class="pop_cm cm_add_img"><div class="nav-tabs"><a class="img_tab active" href="http://blog.csdn.net/v_july_v/article/details/6897097#tab_upload">本地上传</a><a class="img_tab" href="http://blog.csdn.net/v_july_v/article/details/6897097#tab_weburl">网络图片</a></div><div class="tab_panel active" id="tab_upload"><div class="set_img"></div></div><div class="tab_panel" id="tab_weburl"><input type="text" placeholder="图片地址" id="af_cm_img_url"><input type="text" placeholder="图片说明" id="af_cm_img_alt"><div class="text-right"><span class="btn btn-default btn-sm" id="add_img_btn">插入图片</span> </div></div> </div></div> <textarea id="editor_all" rows="8" style="display: none;"></textarea><div class="editor-toolbar"><i class="separator">|</i><a class="icon-headline" title="标题一（Ctrl+Alt+1）"></a><a class="icon-heading" title="标题二（Ctrl+Alt+2）"></a><a class="icon-bold" title="粗体（Ctrl+B）"></a><a class="icon-italic" title="斜体（Ctrl+I）"></a><i class="separator">|</i><a class="icon-quote-left" title="引用（Ctrl+’）"></a><a class="icon-code" title="插入代码片（Ctrl+,）"></a><a class="icon-list-ul" title="无序列表（Ctrl+L）"></a><a class="icon-list-ol" title="有序列表（Ctrl+Alt+L）"></a><i class="separator">|</i><a class="icon-link" title="添加链接（Ctrl+K）"></a><a class="icon-picture" title="添加图片（Ctrl+Alt+I）"></a><i class="separator">|</i><a class="icon-reply" title="撤退（Ctrl+Z）"></a><a class="icon-share-alt" title="前进（Ctrl+Shift+Z）"></a><i class="separator">|</i><a class="icon-info" href="http://ask.csdn.net/pages/markdown" target="_blank" title="markdown语法参考"></a><a class="icon-preview" title="预览"></a><i class="separator">|</i></div><div class="CodeMirror cm-s-paper CodeMirror-focused"><div style="overflow: hidden; position: relative; width: 3px; height: 0px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none; font-size: 4px;" tabindex="0"></textarea></div><div class="CodeMirror-hscrollbar"><div style="height: 1px;"></div></div><div class="CodeMirror-vscrollbar"><div style="width: 1px;"></div></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="min-width: 33px;"><div style="position: relative;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre>&nbsp;<span style="display: inline-block; width: 1px; margin-right: -1px;">&nbsp;</span></pre></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code"></div><div class="CodeMirror-cursor" style="">&nbsp;</div><div class="CodeMirror-cursor CodeMirror-secondarycursor" style="">&nbsp;</div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px;"></div><div class="CodeMirror-gutters" style="display: none;"></div></div></div><div class="editor-statusbar"><span class="lines">0</span><span class="words">0</span><span class="cursor">0:0</span></div><div class="div_tags clearfix"><div id="divSearchTags" class="tags_con"><input type="text"></div><input type="hidden" name="txtSearchTags"></div><div id="ask2_tagRecomm_div" class="drt_tagRecomm tracking-ad" data-mod="popu_73"><span class="drt_tit">推荐标签：</span></div></div><div class="success"><div class="left_area"><input id="chk_cb" type="checkbox"><span class="wyxs">我要悬赏</span><input id="cb_num" class="cb_num" readonly="true"><span class="phib_rii"><span> 币</span></span></div><a href="http://blog.csdn.net/v_july_v/article/details/6897097#" nodetype="cancel" class="cancel">取消</a><a href="http://blog.csdn.net/v_july_v/article/details/6897097#" nodetype="ok" class="ok">发布</a></div></div><div id="common_ask_div_sc" class="searchContainer"><div class="sTitle">可能存在类似的问题：</div><div class="sFooter"><a class="sFirstNewAsk">我想提一个新问题</a></div></div><div style="position:fixed; top:0; left:0; overflow:hidden;"><input style="position:absolute; left:-300px;" type="text" value="" id="focus_retriever" readonly="true"></div><div id="tag-suggest-pop">
  <div class="relative">
    <div class="close"></div>
    <div class="content"></div>
  </div>
</div></body></html>
<!DOCTYPE html>
<!-- saved from url=(0045)http://blog.leanote.com/post/coolboy/duiyouhu -->
<html lang="en" class="js"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="keywords" content="mrbird,blog">
<meta name="description" content="mrbird&#39;s blog">
<meta name="author" content="mrbird">
<meta name="toTop" content="true">
<link rel="Shortcut icon" href="http://blog.leanote.com/public/upload/518/580e02b4ab64414745004cf1/themes/5944748bab644160e600033d/images/leaf.png">
<script>document.documentElement.className = 'js';</script>

<script src="./带堆优化的Dijkstra_files/jquery.min.js"></script>
<script>
    window.jQuery || document.write('<script src=\/public\/upload\/518\/580e02b4ab64414745004cf1\/themes\/5944748bab644160e600033d/jquery-1.11.3.min.js"><\/script>');
</script>
<script src="./带堆优化的Dijkstra_files/scroll.js"></script>
<script src="./带堆优化的Dijkstra_files/font_7t5uxv1tbjhbbj4i.js"></script>
<title>

	带堆优化的Dijkstra

    
</title>
<link href="./带堆优化的Dijkstra_files/bootstrap.css" rel="stylesheet">
<link href="./带堆优化的Dijkstra_files/font-awesome.css" rel="stylesheet">
<link href="./带堆优化的Dijkstra_files/style.css" rel="stylesheet">
<script type="text/javascript" src="./带堆优化的Dijkstra_files/MathJax.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.MathJax_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MathJax .MJX-monospace {font-family: monospace}
.MathJax .MJX-sans-serif {font-family: sans-serif}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: 2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true'); padding: 3px 4px; z-index: 401; position: absolute; left: 0; top: 0; width: auto; height: auto; display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}
.MathJax:focus, body :focus .MathJax {display: inline-table}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; vertical-align: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0!important; padding: 0!important; margin: 0!important; vertical-align: 0!important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; margin: 0; vertical-align: 0; line-height: normal; text-decoration: none}
.MathJax nobr {white-space: nowrap!important}
.MathJax img {display: inline!important; float: none!important}
.MathJax * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height: 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_ExBox {display: block!important; overflow: hidden; width: 1px; height: 60ex; min-height: 0; max-height: none}
.MathJax .MathJax_EmBox {display: block!important; overflow: hidden; width: 1px; height: 60em; min-height: 0; max-height: none}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filter: alpha(opacity=0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transparent}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Blank; src: url('about:blank')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style></head>
<body><div style="visibility: hidden; overflow: hidden; position: absolute; top: 0px; height: 1px; width: auto; padding: 0px; border: 0px; margin: 0px; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal;"><div id="MathJax_Hidden"></div></div><div id="MathJax_Message" style="display: none;"></div><svg aria-hidden="true" style="position: absolute; width: 0px; height: 0px; overflow: hidden;"><symbol id="icon-top" viewBox="0 0 1024 1024"><path d="M186.86134 659.963936 186.86134 397.432685 93.10091 397.432685l0-53.454446 251.107061 0 0 53.454446-93.545536 0 0 262.531252L186.86134 659.963936z"></path><path d="M364.469434 503.910765c0-32.18605 4.812609-59.20031 14.440897-81.043804 7.18361-16.09149 16.990976-30.53341 29.4221-43.323715 12.428054-12.788258 26.042119-22.272259 40.844244-28.452006 19.686365-8.332782 42.389436-12.501732 68.111261-12.501732 46.558385 0 83.808778 14.440897 111.75834 43.323715 27.947516 28.883841 41.923832 69.048609 41.923832 120.488165 0 51.013861-13.868869 90.924849-41.599444 119.735012-27.733645 28.811186-64.808028 43.215244-111.219057 43.215244-46.989197 0-84.352153-14.33345-112.083751-43.00035C378.334209 593.684394 364.469434 554.206264 364.469434 503.910765zM430.209694 501.754658c0 35.780925 8.260128 62.905702 24.787546 81.368192 16.522302 18.46556 37.504172 27.696806 62.938448 27.696806 25.433252 0 46.304605-9.160637 62.61406-27.480888 16.309454-18.321274 24.465205-45.803185 24.465205-82.44471 0-36.211736-7.942903-63.224973-23.817452-81.043804-15.879666-17.816784-36.96489-26.727735-63.260789-26.727735-26.295899 0-47.493687 9.018398-63.584154 27.051099C438.25595 438.207343 430.209694 465.402729 430.209694 501.754658z"></path><path d="M720.762139 659.963936 720.762139 343.978239l102.382808 0c38.797631 0 64.086597 1.583055 75.870991 4.742001 18.105357 4.742001 33.263591 15.054881 45.478797 30.931476 12.212136 15.879666 18.321274 36.391838 18.321274 61.537542 0 19.398816-3.523243 35.709293-10.56052 48.927339-7.043417 13.222139-15.987113 23.601534-26.836205 31.146371-10.851139 7.543813-21.877263 12.538571-33.085536 14.981203-15.233959 3.016707-37.288255 4.526083-66.171072 4.526083l-41.599444 0 0 119.194706L720.762139 659.96496zM784.563234 397.432685l0 89.665159 34.916231 0c25.14468 0 41.957601-1.64957 50.437739-4.956895 8.476045-3.304256 15.121396-8.477069 19.938098-15.519462 4.812609-7.039323 7.219425-15.229866 7.219425-24.572652 0-11.493775-3.377934-20.977777-10.128685-28.450982-6.757914-7.470135-15.303544-12.141528-25.650193-14.010085-7.616468-1.434675-22.920012-2.155083-45.910633-2.155083L784.563234 397.432685z"></path></symbol><symbol id="icon-sousuo" viewBox="0 0 1024 1024"><path d="M929.536 950.208l-278.784-282.752 21.888-21.952c117.952-118.144 117.952-310.272 0-428.288C615.36 160 539.328 128.448 458.432 128.448c-80.896 0-156.928 31.552-214.144 88.768-117.952 118.016-117.952 310.144 0 428.288 96.768 96.832 247.04 116.608 365.376 48.32l32 55.36c-143.424 82.88-325.44 58.816-442.688-58.432-142.912-143.104-142.912-375.872 0-518.784 69.312-69.312 161.344-107.52 259.392-107.52s190.144 38.208 259.456 107.52c135.488 135.552 142.528 351.872 20.992 495.936l15.616 16.704 220.288 220.352L929.536 950.208z"></path></symbol><symbol id="icon-z093" viewBox="0 0 1024 1024"><path d="M448.000536 1024c-1.225608-1.41702-2.36551-2.919747-3.688252-4.24249C297.637827 873.057342 150.949086 726.368601 4.246061 579.691288c-1.322743-1.322743-2.826898-2.465501-4.245347-3.691109 0-1.142758 0-2.286945 0-3.428275 1.549866-1.364168 3.182582-2.645485 4.639599-4.101074C192.592627 380.539942 380.534943 192.599055 568.464402 4.645312c1.458445-1.458445 2.74262-3.094018 4.108216-4.645312 1.522725 0 3.048308 0 4.571033 0 17.472774 6.109472 34.904124 12.347503 52.429751 18.304131 36.108305 12.273224 72.276606 24.375035 108.406338 36.592549 17.271363 5.840923 34.478446 11.870402 51.781235 17.614191 3.711108 1.231322 5.266687 2.312657 3.539694 6.683708-3.891092 9.834864-7.112242 19.93399-10.714788 30.24167-66.021432-22.359495-131.824312-44.64471-197.18723-66.779938C407.878292 220.17667 230.432211 397.621322 53.366098 574.687435c131.875736 131.874308 264.045733 264.045733 396.448566 396.447138 1.062765-1.011341 2.584062-2.396936 4.036794-3.849667C628.384933 792.760001 802.905552 618.219384 977.523306 443.778758c3.122587-3.118302 3.492555-5.438101 2.085534-9.563459-13.570255-39.789416-26.819109-79.691678-40.210808-119.543946-6.160896-18.338414-12.440353-36.639688-18.644102-54.965246-0.411393-1.214181-0.641373-2.489785-1.071336-4.202494 11.811835-3.886807 23.335124-7.679336 34.968404-11.509005 8.076444 24.180766 15.800062 47.474465 23.635099 70.731025 14.848716 44.063332 29.758855 88.105236 44.668993 132.145713 0.149987 0.442819 0.687083 0.75422 1.044195 1.127045 0 0.762791 0 1.522725 0 2.285517-1.549866 1.362739-3.182582 2.645485-4.63817 4.102502C831.027406 642.698695 642.705123 831.019549 454.394268 1019.354688c-1.458445 1.458445-2.741191 3.09259-4.108216 4.645312C449.52469 1024 448.763327 1024 448.000536 1024zM732.971601 441.528953c22.92516-8.703533 41.04645-23.582246 54.276734-43.826209 14.821575-22.682324 21.306728-47.750156 18.616961-75.172069-1.845555-18.822658-7.256515-36.128304-17.961304-51.649818-2.885465-4.183924-2.681197-6.602286 1.041339-10.310537C862.60896 187.169525 936.111173 113.603031 1009.646242 40.072248c1.614146-1.615575 3.338283-3.136872 4.835296-4.855294 5.335253-6.125184 6.069475-20.221108-3.478271-26.214875-8.937798-5.612372-18.288418-4.556749-26.342007 3.495412C910.449107 86.696787 836.225527 160.888941 762.096225 235.173944c-2.882608 2.888322-4.461043 3.106874-8.177864 0.808501-26.110599-16.157174-54.16103-22.56662-84.834091-16.664273-37.689597 7.253658-65.198646 28.137566-82.584285 61.804654-11.304736 21.888107-14.308762 45.471781-10.747642 70.175359 3.142585 21.819541 11.718986 41.045021 25.800626 57.357896 23.139427 26.810538 52.826859 40.665054 93.853311 40.692195C705.00402 449.809665 719.135655 446.781355 732.971601 441.528953zM687.239843 412.68859c-39.069478-1.591291-78.354651-35.028399-75.846297-83.749899 2.11696-41.169296 35.555496-74.63783 78.891748-74.874952 42.991996-0.234265 79.807383 34.624148 78.857465 79.870234C770.751191 375.311823 732.714481 414.53843 687.239843 412.68859z"></path></symbol><symbol id="icon-copy" viewBox="0 0 1024 1024"><path d="M793.25 962l-675.001 0 0-787.5 675.001 0 0 787.5zM737.001 230.75l-562.5 0 0 675.001 562.5 0 0-675.001zM343.25 62l-56.25 0 0 112.5 56.25 0 0-112.5zM624.5 399.5l-337.5 0 0 56.25 337.5 0 0-56.25zM624.5 568.25l-337.5 0 0 56.25 337.5 0 0-56.25zM624.5 737.001l-337.5 0 0 56.25 337.5 0 0-56.25zM905.75 62l-562.5 0 0 56.25 562.5 0 0-56.25zM905.75 118.25l-56.25 0 0 675.001 56.25 0 0-675.001zM849.5 737.001l-56.25 0 0 56.25 56.25 0 0-56.25z"></path></symbol><symbol id="icon-biaoqian" viewBox="0 0 1024 1024"><path d="M815.728814 0H208.271186v1024l303.728814-204.626441L815.728814 1024z" fill="#42b983"></path></symbol><symbol id="icon-Xmas_C-" viewBox="0 0 1024 1024"><path d="M885.29 140.247c-2.829-5.655-4.242-9.899-8.484-15.553-2.829-5.655-5.655-9.899-9.899-15.553-62.215-82.010-135.744-65.043-183.818-21.21-35.349 32.522-93.323 80.596-120.189 104.636-11.312-5.655-22.624-8.484-35.349-8.484-14.141 0-28.278 4.242-39.591 11.312-25.452-21.21-86.253-73.527-123.015-106.048-48.076-43.833-121.602-60.801-183.818 21.21-4.242 5.655-7.069 11.312-11.312 15.553v1.414c-45.248 80.596-4.242 183.818-4.242 183.818l1.414 1.414c-31.108 24.037-46.661 59.387-46.661 97.564v311.076c0 42.42 8.484 79.184 89.082 124.43 12.725 7.069 28.278 15.553 43.833 22.624h1.414c80.596 39.591 183.818 77.77 213.509 89.082 36.763 12.725 82.010 22.624 128.671 0 21.21-11.312 67.871-39.591 113.118-67.871l1.414-1.414c50.903-32.522 101.806-65.043 118.773-76.354 32.522-19.795 42.42-36.763 42.42-101.806v-301.178c0-26.866-5.655-46.661-18.382-63.629 11.312-8.484 21.21-21.21 29.694-35.349-1.414 1.414 35.349-90.494 1.414-169.678z" fill="#FCE8D0"></path><path d="M767.931 52.579c32.522 0 67.871 15.553 98.979 57.974 4.242 4.242 7.069 9.899 9.899 15.553 2.829 5.655 5.655 9.899 8.484 15.553 33.935 77.77-2.829 171.091-2.829 171.091-8.484 14.141-18.382 26.866-29.694 35.349 14.141 16.967 18.382 36.763 18.382 63.629v301.178c0 66.458-9.899 82.010-42.42 101.806-16.967 9.899-67.871 43.833-118.773 76.354l-1.414 1.414c-45.248 29.694-91.908 57.974-113.118 67.871-19.795 9.899-39.591 14.141-59.387 14.141-25.452 0-48.076-7.069-69.285-14.141-31.108-11.312-132.914-49.49-213.509-89.082h-1.414c-15.553-7.069-31.108-15.553-43.833-22.624-82.010-46.661-89.082-82.010-89.082-124.43v-311.076c0-38.177 15.553-73.527 46.661-97.564l-1.414-1.414s-41.007-104.636 4.242-183.818v-1.414c2.829-5.655 7.069-11.312 11.312-15.553 32.522-41.007 66.458-57.974 98.979-57.974 31.108 0 60.801 15.553 84.838 36.763 36.763 33.935 97.564 84.838 123.015 106.048 11.312-7.069 25.452-11.312 39.591-11.312 12.725 0 24.037 2.829 35.349 8.484 26.866-22.624 84.838-72.113 120.189-104.636 24.037-22.624 53.731-38.177 86.253-38.177M767.931 17.232c-38.177 0-76.354 16.967-108.878 46.661-29.694 26.866-72.113 63.629-103.22 89.082-9.899-2.829-18.382-4.242-28.278-4.242-11.312 0-22.624 1.414-33.935 5.655-29.694-25.452-74.941-63.629-104.636-91.908-32.522-29.694-70.7-46.661-108.878-46.661-32.522 0-82.010 12.725-127.26 72.113-4.242 5.655-9.899 12.725-12.725 19.795 0 0 0 1.414-1.414 1.414-39.591 70.7-24.037 154.124-12.725 192.301-26.866 29.694-41.007 66.458-41.007 107.462v311.076c0 59.387 18.382 104.636 107.462 155.538 12.725 7.069 26.866 14.141 45.248 22.624 1.414 0 1.414 1.414 2.829 1.414 89.082 43.833 203.613 84.838 216.339 89.082 29.694 11.312 56.56 15.553 82.010 15.553 26.866 0 52.317-5.655 74.941-16.967 19.795-9.899 55.145-31.108 115.947-70.7l1.414-1.414c21.21-12.725 41.007-26.866 59.387-38.177 26.866-16.967 49.49-31.108 59.387-36.763 46.661-28.278 59.387-57.974 59.387-132.914v-294.108c0-22.624-2.829-41.007-9.899-57.974 5.655-7.069 11.312-14.141 15.553-22.624 1.414-1.414 1.414-2.829 2.829-5.655 1.414-4.242 41.007-107.462 1.414-197.956-2.829-7.069-5.655-12.725-9.899-18.382-4.242-7.069-8.484-12.725-12.725-18.382-46.661-62.215-96.151-74.941-128.671-74.941z" fill="#640F13"></path><path d="M117.5 431.527v292.693c0 42.42 8.484 79.184 89.082 124.43s221.996 98.979 258.759 111.705c36.763 12.725 82.010 22.624 128.671 0s200.785-124.43 233.307-144.226c32.522-19.795 42.42-36.763 42.42-101.806v-282.796h-752.238z" fill="#98CF97"></path><path d="M562.903 814.715c2.829 35.349 5.655 82.010 8.484 98.979 2.829 16.967 18.382 15.553 48.076 0s180.99-113.118 200.785-125.845c18.382-12.725 31.108-12.725 31.108-52.317 0-39.591 2.829-21.21 0-69.285-2.829-48.076-8.484-65.043-24.037-55.145s-178.162 101.806-206.441 118.773c-31.108 16.967-62.215 41.007-57.974 84.838z" fill="#83B585"></path><path d="M536.037 984.392c-28.278 0-52.317-7.069-72.113-14.141-16.967-5.655-171.091-62.215-260.172-113.118-87.668-49.49-94.737-89.082-94.737-132.914v-292.693c0-4.242 4.242-8.484 8.484-8.484h753.651c4.242 0 8.484 4.242 8.484 8.484v282.796c0 65.043-9.899 87.668-46.661 110.29-9.899 5.655-32.522 19.795-59.387 36.763-60.801 38.177-142.813 91.908-175.332 107.462-21.21 11.312-42.42 15.553-62.215 15.553zM125.983 440.010v284.21c0 39.591 5.655 72.113 84.838 117.361 70.7 39.591 195.13 89.082 257.345 111.705 31.108 11.312 76.354 22.624 121.602 0 31.108-15.553 113.118-67.871 173.921-106.048 26.866-16.967 49.49-31.108 59.387-38.177 28.278-16.967 38.177-28.278 38.177-94.737v-274.313h-735.27z" fill="#640F13"></path><path d="M871.152 410.318v53.731c0 66.458-9.899 82.010-42.42 101.806s-188.059 121.602-233.307 144.226c-46.661 22.624-91.908 12.725-128.671 0-36.763-12.725-178.162-66.458-258.759-111.705s-89.082-82.010-89.082-124.43v-63.629c0-48.076 25.452-93.323 77.77-115.947s200.785-65.043 247.447-83.425c46.661-18.382 117.361-18.382 155.538 0 29.694 14.141 123.015 56.56 164.022 76.354 84.838 43.833 107.462 65.043 107.462 123.015z" fill="#98CF97"></path><path d="M536.037 734.118c-28.278 0-52.317-7.069-72.113-14.141-16.967-5.655-172.507-62.215-260.172-113.118-87.668-49.49-94.737-89.082-94.737-132.914v-63.629c0-55.145 31.108-101.806 83.425-124.43 29.694-12.725 87.668-31.108 142.813-49.49 43.833-14.141 84.838-26.866 104.636-35.349 49.49-19.795 121.602-19.795 162.608 0 12.725 7.069 38.177 18.382 66.458 31.108 35.349 15.553 73.527 33.935 97.564 45.248 84.838 42.42 113.118 66.458 113.118 130.086v53.731c0 65.043-9.899 87.668-46.661 110.29-9.899 5.655-32.522 19.795-59.387 38.177-60.801 38.177-142.813 91.908-175.332 107.462-21.21 12.725-42.42 16.967-62.215 16.967zM524.725 205.289c-26.866 0-55.145 4.242-77.77 12.725-21.21 8.484-62.215 21.21-106.048 35.349-52.317 16.967-113.118 35.349-141.398 48.076-46.661 19.795-73.527 59.387-73.527 107.462v63.629c0 39.591 5.655 72.113 84.838 117.361 87.668 49.49 240.377 104.636 257.345 111.705 31.108 11.312 76.354 22.624 121.602 0 31.108-15.553 113.118-67.871 173.921-106.048 26.866-16.967 49.49-31.108 59.387-38.177 28.278-16.967 38.177-28.278 38.177-94.737v-53.731c0-52.317-18.382-72.113-103.22-114.532-22.624-11.312-62.215-29.694-96.151-45.248-28.278-12.725-53.731-25.452-67.871-31.108-16.967-7.069-42.42-12.725-69.285-12.725z" fill="#640F13"></path><path d="M656.226 468.29c-94.737 38.177-124.43 38.177-115.947 130.086 8.484 91.908 5.655 103.22 41.007 90.494 35.349-12.725 221.996-125.845 246.032-144.226 16.967-12.725 19.795-31.108 21.21-56.56 0-32.522 9.899-84.838-22.624-77.77-32.522 5.655-169.678 57.974-169.678 57.974z" fill="#83B585"></path><path d="M251.828 872.688v-378.946c0-60.801 21.21-103.22 80.596-128.671s98.979-39.591 98.979-39.591l-127.26-67.871 113.118-36.763 121.602 57.974 111.705-43.833 90.494 42.42-108.878 50.903s39.591 16.967 74.941 36.763c35.349 21.21 79.184 65.043 79.184 166.848v311.076l-77.77 49.49v-340.769c0-106.048-86.253-132.914-86.253-132.914l-103.22-48.076s-65.043 18.382-110.29 39.591c-45.248 19.795-57.974 46.661-57.974 87.668v417.124l-98.979-42.42z" fill="#DB4342"></path><path d="M302.732 380.623s19.795 19.795 83.425 5.655c36.763-8.484 50.903-26.866 63.629-35.349 8.484-5.655 19.795-7.069 28.278-2.829 11.312 4.242 18.382 8.484 39.591 9.899 22.624 1.414 49.49-1.414 60.801-7.069 5.655-2.829 15.553-5.655 18.382 0 5.655 11.312 45.248 32.522 117.361 21.21 0 0-94.737-82.010-154.124-84.838s-128.671 4.242-176.747 25.452c-48.076 19.795-80.596 67.871-80.596 67.871z" fill="#C83D3C"></path><path d="M350.806 923.593c-1.414 0-2.829 0-2.829-1.414l-98.979-42.42c-2.829-1.414-5.655-4.242-5.655-8.484v-378.946c0-69.285 26.866-110.29 86.253-137.155 35.349-15.553 63.629-26.866 80.596-32.522l-110.29-57.974c-2.829-1.414-5.655-5.655-4.242-8.484 0-4.242 2.829-7.069 5.655-7.069l113.118-36.763h7.069l118.773 56.56 108.878-42.42c2.829-1.414 4.242-1.414 7.069 0l90.494 42.42c2.829 1.414 5.655 4.242 5.655 8.484 0 2.829-1.414 7.069-5.655 8.484l-91.908 42.42c14.141 7.069 36.763 16.967 57.974 29.694 38.177 21.21 83.425 69.285 83.425 173.921v311.076c0 2.829-1.414 5.655-4.242 7.069l-79.184 50.903c-2.829 1.414-5.655 1.414-8.484 0s-4.242-4.242-4.242-8.484v-339.355c0-97.564-77.77-123.015-80.596-124.43l-100.393-48.076c-14.141 4.242-67.871 19.795-106.048 38.177s-52.317 38.177-52.317 79.184v417.124c0 2.829-1.414 5.655-4.242 7.069s-4.242 1.414-5.655 1.414zM260.311 867.033l82.010 33.935v-402.985c0-48.076 18.382-74.941 63.629-96.151 45.248-19.795 108.878-38.177 111.705-39.591h5.655l103.22 48.076s91.908 29.694 91.908 139.984v323.802l59.387-38.177v-304.006c0-74.941-25.452-130.086-73.527-158.366-33.935-19.795-73.527-36.763-73.527-36.763-2.829-1.414-5.655-4.242-5.655-8.484 0-2.829 1.414-7.069 5.655-8.484l91.908-42.42-70.7-32.522-108.878 42.42c-2.829 1.414-4.242 1.414-7.069 0l-118.773-56.56-89.082 29.694 108.878 57.974c2.829 1.414 5.655 5.655 4.242 8.484 0 4.242-2.829 7.069-5.655 7.069 0 0-39.591 12.725-97.564 39.591-53.731 24.037-74.941 57.974-74.941 120.189v373.29z" fill="#640F13"></path><path d="M866.909 110.552c-62.215-82.010-135.744-65.043-183.818-21.21s-135.744 117.361-135.744 117.361h-46.661s-87.668-73.527-135.744-117.361c-48.076-43.833-121.602-60.801-183.818 21.21s-15.553 200.785-15.553 200.785c26.866 43.833 59.387 62.215 131.501 57.974 70.7-4.242 178.162-57.974 178.162-57.974h101.806s107.462 55.145 178.162 57.974c70.7 4.242 104.636-14.141 131.501-57.974-4.242 0 42.42-118.773-19.795-200.785z" fill="#DB4342"></path><path d="M642.086 300.026c-1.414 0-2.829 0-4.242-1.414-33.935-14.141-50.903-28.278-52.317-38.177-1.414-12.725 8.484-19.795 26.866-31.108 5.655-4.242 14.141-8.484 24.037-15.553 4.242-2.829 9.899-1.414 12.725 2.829 2.829 4.242 1.414 9.899-2.829 12.725-9.899 7.069-18.382 11.312-24.037 15.553-14.141 8.484-18.382 12.725-18.382 14.141 1.414 2.829 21.21 15.553 41.007 24.037 4.242 1.414 7.069 7.069 4.242 11.312 0 2.829-2.829 5.655-7.069 5.655zM403.122 288.715c-4.242 0-8.484-4.242-8.484-8.484s4.242-8.484 8.484-8.484c31.108 0 41.007-7.069 45.248-11.312 2.829-2.829 2.829-7.069 2.829-7.069v-2.829c-1.414-4.242-18.382-14.141-35.349-21.21-4.242-1.414-7.069-7.069-5.655-11.312 1.414-4.242 7.069-7.069 11.312-5.655 14.141 5.655 45.248 18.382 46.661 36.763 0 2.829 1.414 11.312-5.655 19.795-9.899 12.725-29.694 19.795-59.387 19.795z" fill="#640F13"></path><path d="M299.902 120.451c69.285 31.108 127.26 86.253 182.403 91.908s93.323 4.242 169.678-39.591c57.974-33.935 121.602-74.941 233.307-31.108-4.242-9.899-9.899-21.21-18.382-29.694-62.215-82.010-135.744-65.043-183.818-21.21-48.076 43.833-135.744 117.361-135.744 117.361h-46.661s-87.668-73.527-135.744-117.361c-48.076-43.833-121.602-60.801-183.818 21.21-8.484 9.899-14.141 21.21-18.382 32.522-1.414-1.414 67.871-55.145 137.155-24.037z" fill="#E86363"></path><path d="M275.865 379.209c-59.387 0-93.323-18.382-120.189-63.629-2.829-5.655-49.49-125.845 15.553-210.684 28.278-36.763 60.801-57.974 97.564-60.801 33.935-2.829 69.285 11.312 100.393 38.177 42.42 39.591 118.773 103.22 132.914 114.532h41.007c14.141-12.725 90.494-76.354 132.914-114.532 31.108-28.278 66.458-41.007 100.393-38.177 35.349 2.829 67.871 24.037 97.564 60.801 65.043 84.838 18.382 205.028 16.967 209.268-29.694 50.903-69.285 67.871-139.984 63.629-67.871-4.242-164.022-50.903-179.575-57.974h-96.151c-15.553 7.069-111.705 55.145-179.575 57.974-7.069 1.414-12.725 1.414-19.795 1.414zM278.693 62.478h-7.069c-31.108 2.829-59.387 21.21-84.838 53.731-59.387 76.354-15.553 190.887-14.141 192.301 21.21 36.763 49.49 56.56 121.602 53.731 67.871-4.242 173.921-56.56 173.921-57.974 1.414 0 2.829-1.414 4.242-1.414h100.393c1.414 0 2.829 0 4.242 1.414 1.414 0 106.048 53.731 173.921 57.974 73.527 4.242 100.393-16.967 123.015-53.731 0 0 43.833-114.532-15.553-190.887-25.452-32.522-53.731-50.903-84.838-53.731-29.694-2.829-60.801 9.899-86.253 33.935-48.076 43.833-135.744 117.361-135.744 117.361-1.414 1.414-4.242 1.414-5.655 1.414h-46.661c-1.414 0-4.242-1.414-5.655-1.414-1.414-1.414-89.082-73.527-135.744-117.361-24.037-24.037-52.317-35.349-79.184-35.349z" fill="#640F13"></path><path d="M448.371 264.676c0 0 0 0 0 0 0 43.73 35.452 79.184 79.184 79.184 43.73 0 79.184-35.452 79.184-79.184 0 0 0 0 0 0 0 0 0 0 0 0 0-43.73-35.452-79.184-79.184-79.184-43.73 0-79.184 35.452-79.184 79.184s0 0 0 0z" fill="#FFDF00"></path><path d="M527.553 352.343c-48.076 0-87.668-39.591-87.668-87.668s39.591-87.668 87.668-87.668c48.076 0 87.668 39.591 87.668 87.668 0 48.076-39.591 87.668-87.668 87.668zM527.553 193.978c-38.177 0-70.7 31.108-70.7 70.7 0 38.177 31.108 70.7 70.7 70.7 38.177 0 70.7-31.108 70.7-70.7-1.414-39.591-32.522-70.7-70.7-70.7z" fill="#640F13"></path><path d="M482.306 250.537c0 16.4 13.295 29.694 29.694 29.694s29.694-13.295 29.694-29.694c0 0 0 0 0 0 0-16.4-13.295-29.694-29.694-29.694-16.4 0-29.694 13.295-29.694 29.694 0 0 0 0 0 0z" fill="#FFF69D"></path><path d="M763.689 640.795c0 94.737-7.069 180.99-14.141 180.99s-14.141-11.312-14.141-104.636 4.242-231.892 11.312-231.892c7.069 1.414 16.967 62.215 16.967 155.538z" fill="#C83D3C"></path><path d="M292.866 449.192c0 0 0 0 0 0-12.308 9.613-18.002 22.894-12.714 29.665 5.286 6.771 19.553 4.465 31.861-5.15 0 0 0 0 0 0 0 0 0 0 0 0 12.308-9.613 18.002-22.894 12.714-29.665-5.286-6.771-19.553-4.465-31.861 5.15s0 0 0 0z" fill="#E86363"></path></symbol><symbol id="icon-tag" viewBox="0 0 1024 1024"><path d="M789.333333 898.133333L501.333333 669.866667 213.333333 898.133333V121.6h576v776.533333zM501.333333 615.466667L746.666667 810.666667V164.266667H256V810.666667l245.333333-195.2z"></path></symbol><symbol id="icon-reindeer__easyiconnet" viewBox="0 0 1024 1024"><path d="M512 0c282.772 0 512 229.228 512 512S794.772 1024 512 1024 0 794.772 0 512 229.228 0 512 0z" fill="#7FC9C3"></path><path d="M110.274 524.314l0.014 9.928c0.056 25.202 1.96 30.736 5.492 45.762l0.266-0.032c30.264 177.34 176.836 314.988 358.444 331.654l1.516 0.142c2.396 0.196 4.806 0.394 7.216 0.568l3.188 0.202c2.058 0.142 4.1 0.246 6.168 0.356 1.322 0.06 2.666 0.08 4 0.152 1.846 0.05 3.67 0.138 5.516 0.192 2.13 0.036 4.26 0.05 6.396 0.068 1.04 0.022 2.098 0.04 3.132 0.04l0.462-0.01c3.02 0 6.034-0.05 9.016-0.1l1.438-0.032c2.844-0.092 5.662-0.198 8.474-0.33l2.406-0.11c2.5-0.146 5.022-0.308 7.512-0.486l3.538-0.274c1.64-0.142 3.256-0.284 4.878-0.44 180.03-16.784 325.534-152.442 357.214-327.728 3.852-15.046 3.894-19.74 5.832-43.586h0.018l0.436-0.014h0.01c0.06-1.516 0.092-3 0.118-4.498V533.986h0.004V533.214c2.53-29.92-1.374-79.09-11.53-117.128l-0.532-2.04c-43.72-174.304-201.428-303.4-389.292-303.4-192.412 0-353.178 135.43-392.254 316.164h-0.004c-6.454 21.738-8.352 49.414-8.874 73.264a382.26 382.26 0 0 0-0.202 11.93v0.76c-0.016 4.064-0.016 7.922-0.016 11.55z" fill="#8CCEC9"></path><path d="M212.908 521.168l0.01 7.388c0.04 18.764 1.462 22.884 4.092 34.072l0.196-0.022c22.532 132.036 131.662 234.512 266.872 246.924l1.132 0.106c1.782 0.146 3.574 0.292 5.37 0.42l2.372 0.152c1.53 0.106 3.056 0.184 4.59 0.266 0.986 0.046 1.984 0.06 2.978 0.114 1.374 0.036 2.736 0.102 4.11 0.142 1.584 0.028 3.17 0.04 4.758 0.05 0.774 0.018 1.562 0.032 2.332 0.032l0.348-0.004c2.244 0 4.49-0.036 6.712-0.078l1.072-0.022c2.116-0.07 4.214-0.148 6.308-0.248l1.786-0.084c1.864-0.11 3.744-0.228 5.598-0.362l2.628-0.202c1.224-0.106 2.424-0.212 3.634-0.33 134.032-12.494 242.366-113.492 265.956-244.002 2.868-11.196 2.9-14.692 4.338-32.448h0.014l0.324-0.01h0.01c0.04-1.132 0.064-2.236 0.088-3.348v-1.31h0.006v-0.582c1.878-22.274-1.028-58.884-8.586-87.204l-0.394-1.52c-32.554-129.768-149.972-225.882-289.842-225.882-143.254 0-262.944 100.832-292.04 235.388h-0.006c-4.804 16.184-6.216 36.792-6.606 54.548a285.256 285.256 0 0 0-0.152 8.884v0.564c-0.008 3.03-0.008 5.908-0.008 8.608z" fill="#98D3CE"></path><path d="M325.222 517.722l0.01 4.618c0.024 11.714 0.908 14.288 2.552 21.274l0.124-0.014c14.07 82.452 82.22 146.448 166.656 154.2l0.704 0.064c1.114 0.092 2.236 0.184 3.354 0.266l1.484 0.092c0.954 0.068 1.906 0.114 2.868 0.164 0.614 0.032 1.238 0.04 1.86 0.074 0.856 0.022 1.704 0.064 2.562 0.088 0.994 0.018 1.984 0.026 2.976 0.032 0.482 0.014 0.972 0.018 1.452 0.018h0.22c1.402 0 2.804-0.024 4.188-0.05l0.672-0.014c1.32-0.04 2.63-0.092 3.94-0.15l1.114-0.056c1.168-0.068 2.338-0.142 3.496-0.224l1.644-0.13a199.26 199.26 0 0 0 2.268-0.2c83.704-7.806 151.356-70.878 166.084-152.378 1.792-6.994 1.81-9.176 2.712-20.262h0.01l0.202-0.01h0.004c0.028-0.706 0.04-1.392 0.056-2.09V522.216h0.004v-0.362c1.172-13.908-0.64-36.77-5.364-54.456l-0.248-0.948c-20.326-81.038-93.654-141.062-181-141.062-89.458 0-164.204 62.97-182.374 146.998-3 10.108-3.884 22.974-4.126 34.062a183.086 183.086 0 0 0-0.092 5.548v0.354c-0.012 1.89-0.012 3.686-0.012 5.372z" fill="#A2D7D3"></path><path d="M540.554 89.44c144.694 0 261.988 117.294 261.988 261.988s-117.294 261.988-261.988 261.988-261.988-117.296-261.988-261.99S395.86 89.44 540.554 89.44z" fill="#FFFFFF"></path><path d="M373.226 290.158c39.926 0 72.292 32.366 72.292 72.292 0 39.932-32.366 72.296-72.292 72.296-39.93 0-72.296-32.366-72.296-72.296-0.002-39.926 32.366-72.292 72.296-72.292z" fill="#F9F9F9"></path><path d="M980.08 719.718c-84.236-16.63-168.7-48.008-253.842-41.524-62.714 4.778-122.394 29.97-185 36.042-132.146 12.8-263.816-60.29-394.4-36.294-35.514 6.528-71.738 20.154-107.678 30.716C116.258 893.818 298.912 1024 512 1024c208.818 0 388.41-125.024 468.08-304.282z" fill="#4CB5AB"></path><path d="M570.246 295.742c39.926 0 72.292 32.366 72.292 72.292 0 39.932-32.366 72.296-72.292 72.296-39.93 0-72.296-32.366-72.296-72.296-0.002-39.924 32.366-72.292 72.296-72.292z" fill="#F9F9F9"></path><path d="M195.756 875.444s146.058 1.59 348.588-62.666c92.738-29.426 187.394-57.046 284.604-52.388 40.81 1.952 81.414 7.792 121.642 15.898C860.944 924.742 698.072 1024 512 1024c-119.36 0-229.176-40.846-316.242-109.318v-39.238z" fill="#00877A"></path><path d="M867.17 880.744c-65.146-3.692-232.42-17.652-391.004-67.966-92.738-29.426-187.396-57.046-284.604-52.388-39.752 1.902-79.306 7.49-118.516 15.274C162.612 924.464 325.672 1024 512 1024c137.932 0 263.11-54.564 355.17-143.256z" fill="#26A599"></path><path d="M835.386 908.932c-102.012-12.978-204.324-29.654-303.842-42.248-71.92-9.102-145.06-15.384-216.72-4.384-46.826 7.188-92.056 21.6-136.636 37.91C267.82 977.352 384.458 1024 512 1024c122.654 0 235.216-43.15 323.386-115.068z" fill="#00786A"></path><path d="M653.322 723.828c-19.648-23.722-18.788-54.82-16.066-72.81 1.122-4.874 2.144-9.74 3.144-14.582l0.004-0.014h-0.004c2.896-14.084 5.588-28.06 9.954-42.088 2.538-8.158-3.334-31.964-5.19-37.436-4.444-13.13-13.298-16.402-22.37-24.236-12.382-10.706-27.308-14.154-42.762-13.728-14.568 0.402-29.19-0.67-43.764-1.466-1.736-0.096-3.912-2.23-4.874-3.972-1.272-2.31-1.928-5.126-2.158-7.78-0.218-2.602-0.572-6.382 0.886-7.688 4.104-3.692 8.778-7.988 13.852-9.052 6.968-1.462 12.63-2.35 17.468-8.96 5.568-7.606 5.842-16.69-3.148-18.988-9.058-2.318-11.672-10.606-18.246-14.852-0.742-0.482-0.982-2.918-0.462-3.954 2.038-4.076 1.218-7.248-3.504-10.128 2.6-0.692 4.204-0.904 5.616-1.544 4.608-2.094 9.904-3.496 13.546-6.73 6.254-5.552 12.072-11.848 16.908-18.66 4.082-5.75 7.468-11.474 14.884-13.482 2.104-0.568 4.128-2.5 5.566-4.31 8.948-11.242 17.756-22.6 26.502-34.006 1.314-1.714 2.226-3.798 3.034-5.838 3.884-9.83 1.618-18.984-3.158-27.858-0.76 2.294-0.714 4.55-0.768 6.794-0.084 3.624 0.402 7.408-0.462 10.844-5.584 22.206-22.81 30.988-41.63 34.8-4.228 0.852-4.654-1.47-3.426-4.878 3.468-9.652 6.408-19.512 10.4-28.938 3.032-7.176 6.258-14.766 11.302-20.492 14.288-16.208 13.538-33.412 5.794-51.74-0.486-1.148-0.728-2.41-1.086-3.62-3.088 3.166-2.652 6.19-2.528 8.42 0.37 6.75 1.362 13.516 1.09 20.236-0.252 6.082-2.226 11.916-7.926 15.51-3.248 2.058-5.264 2.228-6.762-2.364-3.348-10.258-7.312-20.314-11.192-30.388-0.668-1.726-2.166-3.134-3.28-4.686-1.416 2.062-1.64 3.458-1.58 4.848 0.312 7.5 0.734 14.994 1.04 22.498 0.18 4.27 0.344 8.48-4.662 10.706-0.87 0.39-1.374 2.708-1.246 4.064 0.594 6.346-3.826 10-9.9 7.87-2.066-0.728-5.416-1.878-7.418-2.78-15.58-8.376-25.848-23.058-39.696-33.732 0.092 2.098 0.706 3.724 1.728 5.03 11.402 14.546 22.804 29.086 38.308 39.684 4.604 3.15 9.228 5.758 15.216 5.15 5.882-0.6 7.27 0.768 6.67 6.838-1.93 19.504-8.892 35.56-28.506 44.058-7.192 3.12-13.542 8.462-19.814 13.382-7.478 5.864-16.208 7.234-25.106 7.994-1.924 0.17-4.63-1.534-5.828-3.202-0.576-0.802 1.086-4.018 2.496-5.296 7.462-6.78 10.666-15.658 12.694-25.06 1.338-6.21-0.036-12.074-3.834-17.308-0.514 0.912-0.692 1.8-0.486 2.588 3.486 13.45-7.334 29.408-19.16 34.31-4.962 2.056-9.41 2.006-14.308 0.118a40.242 40.242 0 0 0-10.522-2.46c-3.066-0.302-4.278-1.498-5.31-4.366-1.772-4.934-4.214-12.59-6.44-17.354-0.696 0.28-2.382 0.73-2.194 3.858 1.122 3.678 2.03 7.44 3.426 11.018 1.54 3.934 0.848 6.34-3.72 5.904-18.036-1.746-35.51-5.392-50.582-16.336-1.296-0.94-2.662-2.186-3.27-3.606-3.812-8.884-8.36-17.582-7.33-27.794 0.238-2.372-0.302-4.824-0.48-7.244-0.71-1.992-1.65-1.842-2.452-1.9-0.756 7.528-1.47 16.778-2.222 24.302-0.578 0.046-1.16 0.088-1.738 0.13-11.842-12.38-20.584-26.36-19.112-44.49 0.972-11.994 3.148-23.89 4.844-35.82 0.53-3.756 1.268-7.486 1.91-11.224-0.692-0.214-1.384-0.432-2.08-0.646-2.158 5.122-4.352 10.22-6.454 15.366-2.218 5.402-4.136 10.94-6.652 16.194-0.646 1.352-3.472 2.974-4.6 2.562-9.098-3.326-16.684-8.15-17.024-19.414-0.164-5.576 0.49-9.62-0.046-15.182-0.452-3.05-2.4-4-2.854-4.15-0.816 2.712-2.396 7.646-2.298 10.322 0.298 8.384 0.994 16.766 1.996 25.1 0.61 5.068 0.958 15.53 2.034 20.542-14.87-6.862-13.648-25.014-21.87-34.492-0.358 6.578-0.728 13.252 1.234 19.15 3.94 11.874 11.192 21.728 21.788 28.87 1.756 1.188 3.152 2.968 4.546 4.618 2.322 2.748 4.188 5.97 6.812 8.37 7.536 6.9 15.658 13.168 22.998 20.26 22.802 22.012 49.648 35.288 81.236 38.784 9.062 1.002 9.968 2.772 8.008 11.806-1.992 9.186-3.228 18.462 2.484 27.08 0.7 1.058 0.862 2.892 0.522 4.164-2.168 8.078-4.564 16.09-6.844 24.134-1.992 7.024-4.178 14-5.842 21.106-3.198 13.652-6.138 27.358-9.048 41.076-0.476 2.264-0.44 4.696-0.27 7.014 0.71 9.83 1.846 19.63 2.286 29.47 0.618 13.864 0.536 27.758 1.174 41.616a177.7 177.7 0 0 0 2.454 22.358c1.732 9.91 4.138 19.406 11.888 27.07 7.192 7.114 10.876 16.056 10.32 26.836-0.302 5.85 1.604 11.926 3.112 17.744 2.466 9.53 6.652 18.778 7.86 28.432 1.704 13.532 1.25 27.332 1.93 41.006 0.228 4.546 1.098 9.062 1.69 13.584 0.308 2.35 0.944 4.696 0.94 7.032-0.014 2.872-0.044 5.74-0.088 8.612-0.412 8.928-1.392 28.838-2.24 33.282 0 0-7.216 6.872-7.216 13.194h14.014s0.664-6.596 4.128-12.094c0 0 1.49-28.272 4.434-43.206l-0.064 0.018c0.148-0.908 0.284-1.814 0.404-2.736 0.98-7.586 3.972-15.008 4.216-22.568 0.572-17.716-0.018-35.478-0.01-53.212 0-3.82 0.604-7.636 0.856-11.458 0.284-4.228 3.628-17.174 21.468-18.61 7.086-1.384 15.012 3.51 15.864 10.556 1.402 11.604 2.208 23.304 2.624 34.992 0.198 5.576-0.88 11.234-1.736 16.808-1.1 7.164-4.154 14.39-0.38 21.468 5.684 10.666 2.354 22.412 3.542 33.966-0.404 9.112-1.33 28.506-2.058 32.88 0 0-6.29 6.872-6.29 13.194h12.366s0.714-6.596 3.734-12.094c0 0 0.774-18.834 2.454-33.878 0.138-0.064 0.266-0.134 0.354-0.198 0-0.022-0.142-0.044-0.32-0.082 0.366-3.28 0.778-6.382 1.236-9.048l-0.274 0.1c1.318-6.28 2.808-14.948 2.602-27.982-0.274-17.18 3.632-33.352 7.76-49.648 0.312-1.242 1.42-2.276 2.158-3.408 1.086 0.842 2.428 1.498 3.22 2.566 3.93 5.264 7.238 11.082 11.64 15.902 10.522 11.514 26.91 26.076 29.744 41.786 0.358 1.974 1.178 4.884 1.788 7.528 0.022 27.02-5.634 54.626-5.634 54.626-7.698 5.952-13.19 13.83-13.19 13.83h18.686c1.648-9.894 4.328-9.438 4.328-9.438s3.18-12.168 6.784-28.572l0.202 0.206c0.156-0.962 0.266-1.868 0.354-2.754 5.85-27.034 12.438-63.98 8.346-78.032 0.096-0.59 0.198-1.156 0.288-1.694a60.51 60.51 0 0 0 5.346 9.988c17.39 25.934 2.932 96.466 2.932 96.466-7.698 5.952-13.19 13.83-13.19 13.83h18.686c1.648-9.894 4.328-9.438 4.328-9.438s25.786-98.65 13.774-113.144z m-60.426-346.384c-1.992 8.806-18.056 12.438-26.754 8.352 8.73-2.722 17.458-5.448 26.754-8.352z m-34.598 21.308l-28.84 9.074c2.636-8.368 20.104-13.858 28.84-9.074z" fill="#006064"></path><path d="M775.902 236.218a77.342 77.342 0 0 1-38.446 10.17c-42.894 0-77.664-34.772-77.664-77.666a77.306 77.306 0 0 1 13.226-43.356c44.244 25.984 80.184 64.576 102.884 110.852z" fill="#F9F9F9"></path><path d="M187.794 200.57a8.484 8.484 0 1 1 0 16.966 8.484 8.484 0 0 1 0-16.966z m753.55 205.878a8.484 8.484 0 1 1 0 16.97 8.484 8.484 0 0 1 0-16.97zM123.556 358.158a8.484 8.484 0 1 1 0 16.966 8.484 8.484 0 0 1 0-16.966z m740.214-167.468a8.484 8.484 0 1 1 0 16.966 8.484 8.484 0 0 1 0-16.966z m-16.968 155.152a8.484 8.484 0 1 1 0 16.966 8.484 8.484 0 0 1 0-16.966zM677.094 65.228a8.484 8.484 0 1 1 0 16.966 8.484 8.484 0 0 1 0-16.966z m-279.19-3.642a8.484 8.484 0 1 1 0 16.966 8.484 8.484 0 0 1 0-16.966z m-171.71 284.256a8.484 8.484 0 1 1 0 16.966 8.484 8.484 0 0 1 0-16.966z" fill="#FFFFFF"></path></symbol><symbol id="icon--astonished-" viewBox="0 0 1024 1024"><path d="M511.992 483.514m-464.612 0a464.612 464.612 0 1 0 929.224 0 464.612 464.612 0 1 0-929.224 0Z" fill="#FDDF6D"></path><path d="M611.564 879.53c-256.598 0-464.61-208.012-464.61-464.61 0-137.09 59.388-260.294 153.824-345.338C150.364 146.494 47.392 302.976 47.392 483.512c0 256.598 208.012 464.61 464.61 464.61 119.508 0 228.464-45.136 310.786-119.27-63.372 32.4-135.164 50.678-211.224 50.678z" fill="#FCC56B"></path><path d="M609.364 518.852c100.284 0 181.58 81.298 181.58 181.58v55.228H427.78v-55.228c0-100.284 81.298-181.58 181.584-181.58z" fill="#7F184C"></path><path d="M500.358 584.036h231.274c4.678 0 8.994-1.956 12.532-5.244-33.23-36.804-81.31-59.942-134.802-59.942-49.574 0-94.486 19.886-127.252 52.094 3.84 7.864 10.57 13.092 18.248 13.092z" fill="#F2F2F2"></path><path d="M712.5 692.024h-132.152l-38.23 0.22c-25.522 1.224-57.29 8.478-57.29 63.42 33.808-0.178 26.132 0.012 51.846-0.686 18.088-0.492 43.672 27.374 43.672 44.494v100.098c0 58.286 47.25 105.534 105.534 105.534 58.286 0 105.534-47.25 105.534-105.534v-128.622c0.008-43.59-35.328-78.924-78.914-78.924z" fill="#FC4C59"></path><path d="M685.474 962.702a18.9 18.9 0 0 1-18.902-18.902v-179.596c0-2.236-5.446-7.638-9.28-9.76-9.132-5.052-12.442-16.554-7.39-25.688 5.052-9.136 16.56-12.442 25.688-7.39 2.946 1.628 28.78 16.678 28.78 42.838V943.8c0.006 10.44-8.454 18.902-18.896 18.902z" fill="#BC3B4A"></path><path d="M511.998 0C245.39 0 28.49 216.9 28.49 483.508c0 266.61 216.9 483.512 483.508 483.512 22.28 0 44.612-1.552 66.574-4.574C600.216 999.238 640.204 1024 685.888 1024c68.614 0 124.434-55.822 124.434-124.434v-128.622a98.68 98.68 0 0 0-0.768-12.056 18.82 18.82 0 0 0 0.294-3.224v-55.228c0-110.546-89.936-200.484-200.482-200.484s-200.484 89.938-200.484 200.484v55.228a18.9 18.9 0 0 0 18.902 18.902h57.05c23.412 0 33.104 0 52.528-0.698h0.046c1.006 0 4.876 1.136 10.278 6.35 8.506 8.204 13.77 19.566 13.77 25.388v93.964c0 9.126 1.016 18.016 2.888 26.59a451.988 451.988 0 0 1-52.34 3.064c-245.766 0-445.706-199.946-445.706-445.71s199.94-445.712 445.704-445.712 445.708 199.942 445.708 445.706c0 82.044-22.47 162.222-64.98 231.87-5.438 8.908-2.626 20.542 6.286 25.98 8.906 5.438 20.542 2.626 25.98-6.286 46.134-75.578 70.516-162.572 70.516-251.562C995.51 216.9 778.61 0 511.998 0z m-65.316 700.434c0-89.704 72.978-162.682 162.682-162.682 87.298 0 158.73 69.124 162.496 155.512-16.474-12.62-37.052-20.144-59.36-20.144h-132.26l-38.23 0.22c-0.264 0.002-0.532 0.01-0.796 0.022-16.994 0.814-65.65 3.18-74.026 63.396h-20.506v-36.324z m90.734 35.628c-0.474 0-0.948 0.008-1.418 0.026-12.024 0.434-20.24 0.588-30.638 0.642 4.536-21.92 18.244-24.646 37.27-25.586l37.718-0.216h132.152c33.092 0 60.014 26.926 60.014 60.018v128.622c0 47.77-38.864 86.632-86.632 86.632-47.77 0-86.634-38.862-86.634-86.632v-93.964c0-17.11-9.942-37.754-25.328-52.596-11.51-11.11-24.102-16.946-36.504-16.946z" fill=""></path><path d="M499.88 285.914c-7.384-7.378-19.35-7.378-26.732 0l-35.938 35.938-35.938-35.938a18.902 18.902 0 1 0-26.732 26.732l35.938 35.938-35.938 35.938a18.902 18.902 0 1 0 26.732 26.732l35.938-35.938 35.938 35.938a18.85 18.85 0 0 0 13.366 5.534 18.902 18.902 0 0 0 13.366-32.266l-35.938-35.938 35.938-35.938c7.38-7.382 7.38-19.348 0-26.732zM857.74 384.52l-35.938-35.938 35.938-35.938a18.902 18.902 0 1 0-26.732-26.732l-35.938 35.938-35.938-35.938a18.902 18.902 0 1 0-26.732 26.732l35.938 35.938L732.4 384.52a18.902 18.902 0 1 0 26.732 26.732l35.938-35.938 35.938 35.938a18.85 18.85 0 0 0 13.366 5.534 18.85 18.85 0 0 0 13.366-5.534c7.38-7.382 7.38-19.348 0-26.732z" fill=""></path><path d="M868.944 779.352m-18.902 0a18.902 18.902 0 1 0 37.804 0 18.902 18.902 0 1 0-37.804 0Z" fill=""></path></symbol><symbol id="icon--cool" viewBox="0 0 1024 1024"><path d="M496.214908 511.991m-476.816794 0a476.816794 476.816794 0 1 0 953.633587 0 476.816794 476.816794 0 1 0-953.633587 0Z" fill="#FFDB6C"></path><path d="M598.391506 918.425381c-263.337543 0-476.814794-213.477251-476.814794-476.814793 0-140.690824 60.946357-267.131565 157.864925-354.408077C125.074733 166.128973 19.398114 326.723914 19.398114 512.001c0 263.337543 213.477251 476.814794 476.814793 476.814794 122.646719 0 234.463374-46.322271 318.949869-122.402717-65.036381 33.250195-138.710813 52.012305-216.77127 52.012304z" fill="#FFB04C"></path><path d="M291.303707 518.83704c-35.410207 0-64.118376 28.706168-64.118376 64.114376h128.232752c0.004-35.410207-28.702168-64.114376-64.114376-64.114376zM850.566984 518.83704c-35.410207 0-64.118376 28.706168-64.118376 64.114376h128.232751c0-35.410207-28.706168-64.114376-64.114375-64.114376z" fill="#F9A880"></path><path d="M221.761299 253.949488c124.500729-28.574167 225.28732-18.74011 336.929975 7.278043 16.556097 3.856023 34.044199 8.158048 52.516307 8.722051 30.76018 0.942006 65.338383-6.714039 95.150558-14.204083 117.70069-29.566173 209.645228-14.188083 298.247747 4.744027l-6.546038 52.360307c-13.832081 0.306002-18.182107 6.75604-22.13413 19.346113-20.680121 65.890386-3.068018 179.26105-155.956913 165.930973-100.580589-8.770051-129.384758-36.328213-177.321039-157.492923-4.078024-10.30606-6.730039-27.33816-30.022176-26.708157-13.152077 0.354002-24.914146 2.680016-29.01617 25.53015-7.646045 42.576249-65.786385 158.258927-183.831078 158.130927-104.264611-0.112001-144.038844-54.232318-148.786871-173.487017-0.590003-14.806087-13.492079-17.618103-21.234125-17.792104l-7.996047-52.358307z" fill="#56586F"></path><path d="M402.564359 237.469391l-72.812427 248.311455c19.162112 7.884046 42.292248 11.776069 70.02841 11.80407 0.488003 0 0.970006-0.018 1.458009-0.020001l74.080434-252.63548c-24.228142-3.664021-48.350283-6.228036-72.754426-7.460044zM855.359012 239.481403c-24.232142-0.776005-49.386289 0-75.806444 2.950017l-65.002381 221.675299c17.776104 14.928087 38.762227 23.598138 66.468389 28.89417l74.340436-253.519486z" fill="#737891"></path><path d="M595.539489 861.317047c-106.592625 0-193.005131-86.412506-193.00513-193.005131H788.54462c0.002 106.592625-86.410506 193.005131-193.005131 193.005131z" fill="#7F184C"></path><path d="M449.626635 668.307916v30.128176c0 12.704074 10.29806 23.000135 23.000134 23.000135h245.823441c12.704074 0 23.000135-10.29806 23.000134-23.000135v-30.128176H449.626635z" fill="#F2F2F2"></path><path d="M599.591513 781.242578c-52.172306-24.240142-110.066645-20.716121-157.01492 4.422026 35.278207 45.980269 90.754532 75.650443 153.186898 75.650443a192.281127 192.281127 0 0 0 77.344453-16.170095c-17.376102-26.886158-42.292248-49.394289-73.516431-63.902374z" fill="#FC4C59"></path><path d="M1008.65791 241.519415c-92.632543-19.790116-185.813089-35.034205-307.029799-4.586027-30.182177 7.584044-61.994363 14.474085-89.830526 13.63008-15.552091-0.476003-31.052182-4.096024-46.04227-7.602044l-2.664016-0.624004c-97.26657-22.670133-206.46521-39.24223-345.672025-7.294043a19.398114 19.398114 0 0 0-14.836087 21.834128l8.000047 52.360307a19.396114 19.396114 0 0 0 18.74011 16.462096c0.950006 0.02 1.73001 0.116001 2.328013 0.230002 2.750016 66.008387 15.936093 111.136651 41.476243 141.964832 27.31416 32.968193 68.734403 49.026287 126.628742 49.086287h0.218002c71.188417 0 119.584701-37.840222 147.654865-69.604408 31.478184-35.618209 50.342295-78.148458 55.074322-104.498612 1.238007-6.89204 2.956017-8.60205 2.964018-8.61005 0.282002-0.184001 1.66001-0.800005 7.490044-0.956006 6.040035-0.158001 6.262037-0.162001 9.702057 9.646057 0.592003 1.68801 1.164007 3.308019 1.75801 4.806028 23.394137 59.132346 43.932257 101.200593 73.998433 128.192751 31.794186 28.546167 70.836415 37.230218 119.672702 41.488243 8.802052 0.768005 17.228101 1.154007 25.284148 1.154007 48.494284 0 83.57249-13.950082 106.790626-42.338248 0.590003-0.722004 1.122007-1.470009 1.688009-2.200013 1.034006 12.598074 1.578009 25.258148 1.57801 37.938222 0 252.221478-205.197202 457.41668-457.416681 457.41668S38.794227 764.222478 38.794227 512.001 243.98943 54.58432 496.208907 54.58432c101.060592 0 196.847153 32.290189 277.003624 93.380547 8.52005 6.494038 20.694121 4.850028 27.184159-3.670022 6.494038-8.52205 4.852028-20.694121-3.670022-27.188159-86.97051-66.280388-190.889118-101.316594-300.519761-101.316593C222.599304 15.788093 0 238.389397 0 512.001s222.599304 496.212907 496.208907 496.212908c273.613603 0 496.212907-222.599304 496.212908-496.212908 0-36.180212-3.960023-72.218423-11.682068-107.252628 1.916011-8.998053 3.500021-17.934105 5.014029-26.564156 2.584015-14.680086 5.022029-28.548167 8.674051-40.178235 0.988006-3.142018 1.69601-4.792028 2.120012-5.628033 0.440003-0.06 1.074006-0.118001 1.938012-0.138001a19.396114 19.396114 0 0 0 18.81811-16.9861l6.544038-52.360307a19.388114 19.388114 0 0 0-15.190089-21.374125z m-28.152165 55.360325c-15.966094 6.82004-20.744122 22.038129-23.090135 29.508172-4.404026 14.042082-7.058041 29.116171-9.864058 45.078265-1.282008 7.290043-2.552015 14.458085-3.950023 21.428125a19.320113 19.320113 0 0 0-2.494015 11.466067c-11.194066 47.156276-33.232195 81.96048-119.4547 74.444436-91.150534-7.948047-115.220675-29.676174-160.968943-145.304851-0.414002-1.048006-0.806005-2.180013-1.218007-3.36002-3.764022-10.738063-12.478073-35.624209-45.532267-35.624208-0.600004 0-1.212007 0.008-1.82801 0.026-11.034065 0.298002-40.336236 1.086006-47.586279 41.490243-6.546038 36.456214-59.75035 142.162833-164.550964 142.162833h-0.168001c-89.856527-0.098001-124.934732-42.070247-129.424759-154.858907-0.620004-15.658092-9.540056-27.720162-23.464137-33.198195l-3.220019-21.074123c123.264722-24.950146 222.041301-9.574056 310.59782 11.062064l2.640015 0.616004c16.058094 3.756022 34.260201 8.010047 53.684315 8.60405 32.644191 0.990006 67.570396-6.514038 100.470589-14.780086 105.682619-26.548156 189.731112-15.626092 272.059594 1.250007l-2.638016 21.064124z" fill=""></path><path d="M807.942734 668.307916c0-10.712063-8.682051-19.398114-19.398114-19.398114H402.534359a19.396114 19.396114 0 0 0-19.398114 19.398114c0 117.120686 95.282558 212.403245 212.403244 212.403244s212.403245-95.282558 212.403245-212.403244z m-384.934255 19.398114h345.064021c-9.672057 86.634508-83.358488 154.210904-172.53101 154.210903s-162.860954-67.576396-172.533011-154.210903z" fill=""></path><path d="M832.644879 174.241021m-19.398114 0a19.398114 19.398114 0 1 0 38.796227 0 19.398114 19.398114 0 1 0-38.796227 0Z" fill=""></path></symbol><symbol id="icon--confused" viewBox="0 0 1024 1024"><path d="M512.003 512.002m-491.986 0a491.986 491.986 0 1 0 983.972 0 491.986 491.986 0 1 0-983.972 0Z" fill="#FDDF6D"></path><path d="M382.785 561.106c-7.72 0-15.072-4.492-18.354-12.02-4.42-10.132 0.214-21.928 10.344-26.348l82.108-35.804-82.188-36.286c-10.114-4.464-14.69-16.282-10.228-26.396 4.464-10.114 16.29-14.688 26.392-10.226l123.92 54.706a20.012 20.012 0 1 1-0.082 36.656l-123.92 54.04a19.872 19.872 0 0 1-7.992 1.678zM891.773 549.09a20.014 20.014 0 0 1-18.354 12.02 19.92 19.92 0 0 1-7.99-1.674l-123.92-54.04a20.014 20.014 0 0 1-0.082-36.656l123.92-54.706c10.106-4.464 21.928 0.112 26.392 10.226 4.464 10.114-0.114 21.93-10.228 26.396l-82.188 36.286 82.108 35.804c10.132 4.418 14.762 16.212 10.342 26.344z" fill=""></path><path d="M617.431 931.354c-271.716 0-491.984-220.268-491.984-491.984 0-145.168 62.886-275.632 162.888-365.684-159.28 81.438-268.32 247.14-268.32 438.312 0 271.716 220.268 491.984 491.984 491.984 126.548 0 241.924-47.794 329.096-126.298-67.1 34.312-143.122 53.67-223.664 53.67z" fill="#FCC56B"></path><path d="M490.755 793.098a19.966 19.966 0 0 1-14.154-5.86c-7.816-7.82-7.816-20.49 0-28.306l32.392-32.392c7.82-7.814 20.492-7.814 28.304 0l17.196 17.194 24.856-24.858a20.024 20.024 0 0 1 28.308 0.002l25.552 25.554 28.34-28.344c7.82-7.814 20.49-7.814 28.306 0l23.462 23.466 18.94-18.936c7.816-7.816 20.492-7.812 28.3 0l33.438 33.436c7.82 7.816 7.82 20.49 0.002 28.304-7.82 7.82-20.492 7.816-28.304 0.002l-19.288-19.286-18.94 18.936c-7.816 7.816-20.49 7.812-28.304 0l-23.462-23.466-28.34 28.344a20.024 20.024 0 0 1-28.308-0.002l-25.552-25.554-24.856 24.858c-7.82 7.814-20.492 7.814-28.304 0l-17.196-17.194-18.238 18.24a19.956 19.956 0 0 1-14.15 5.862z" fill=""></path><path d="M940.973 232.388c-52.914-81.02-127.222-145.202-214.886-185.61a20.012 20.012 0 0 0-26.556 9.8c-4.624 10.04-0.24 21.928 9.8 26.556 80.824 37.252 149.336 96.434 198.128 171.144 50.056 76.642 76.512 165.762 76.512 257.724 0 260.246-211.726 471.966-471.97 471.966S40.031 772.246 40.031 512.002 251.755 40.03 511.999 40.03c11.056 0 20.014-8.958 20.014-20.014S523.055 0 511.999 0C229.681 0 0.001 229.682 0.001 512.002c0 282.316 229.68 511.996 511.998 511.996s511.998-229.68 511.998-511.996c0.004-99.758-28.708-196.446-83.024-279.614z" fill=""></path><path d="M508.993 726.534L476.601 758.926c-7.816 7.82-7.816 20.49 0 28.306 3.91 3.906 9.034 5.86 14.154 5.86s10.244-1.954 14.154-5.86l18.238-18.24 17.194 17.196a20.02 20.02 0 0 0 28.308-0.002l24.856-24.856 25.552 25.552a20.014 20.014 0 0 0 28.308 0.002l28.34-28.344 23.462 23.466a20.028 20.028 0 0 0 28.308 0.002l18.936-18.94 19.288 19.286c7.814 7.814 20.486 7.816 28.304-0.002 7.816-7.816 7.816-20.49-0.002-28.304l-33.438-33.436c-7.814-7.814-20.486-7.814-28.304 0l-18.936 18.94-23.462-23.466a20.014 20.014 0 0 0-28.308-0.002l-28.34 28.344-25.552-25.554a20.014 20.014 0 0 0-28.308 0l-24.856 24.858-17.194-17.196c-7.822-7.812-20.492-7.812-28.31-0.002z" fill=""></path><path d="M649.489 40.03m-20.014 0a20.014 20.014 0 1 0 40.028 0 20.014 20.014 0 1 0-40.028 0Z" fill=""></path></symbol><symbol id="icon--cool-" viewBox="0 0 1024 1024"><path d="M496.212907 512.013m-476.816793 0a476.816794 476.816794 0 1 0 953.633587 0 476.816794 476.816794 0 1 0-953.633587 0Z" fill="#FFDB6C"></path><path d="M598.391506 918.423381c-263.337543 0-476.812794-213.475251-476.812794-476.812793 0-140.690824 60.946357-267.131565 157.864925-354.408077C125.074733 166.130973 19.398114 326.723914 19.398114 512.001c0 263.337543 213.475251 476.812794 476.812793 476.812794 122.646719 0 234.463374-46.320271 318.949869-122.402717-65.034381 33.252195-138.710813 52.012305-216.76927 52.012304z" fill="#FFB04C"></path><path d="M291.305707 518.83704c-35.410207 0-64.118376 28.706168-64.118376 64.114376h128.232752c0.002-35.410207-28.704168-64.114376-64.114376-64.114376zM850.564984 518.83704c-35.410207 0-64.118376 28.706168-64.118376 64.114376h128.232751c0.002-35.410207-28.704168-64.114376-64.114375-64.114376z" fill="#F9A880"></path><path d="M221.759299 253.947488c124.500729-28.574167 225.28732-18.74011 336.929975 7.278043 16.554097 3.856023 34.044199 8.158048 52.512307 8.722051 30.76018 0.942006 65.338383-6.714039 95.150558-14.204084 117.70069-29.566173 209.645228-14.188083 298.247747 4.744028l-6.546038 52.360307c-13.832081 0.306002-18.182107 6.75604-22.13413 19.346113-20.680121 65.890386-3.068018 179.26105-155.954914 165.930973-100.580589-8.770051-129.384758-36.328213-177.321039-157.492923-4.078024-10.30606-6.730039-27.33816-30.022175-26.708157-13.152077 0.354002-24.914146 2.680016-29.01617 25.53015-7.646045 42.576249-65.786385 158.256927-183.831078 158.130927-104.264611-0.112001-144.038844-54.232318-148.786871-173.485017-0.590003-14.806087-13.492079-17.618103-21.234125-17.792104l-7.994047-52.360307z" fill="#56586F"></path><path d="M402.564359 237.467391l-72.812427 248.311455c19.162112 7.884046 42.292248 11.776069 70.02841 11.80407 0.488003 0 0.970006-0.018 1.458009-0.020001l74.080434-252.63548c-24.226142-3.664021-48.352283-6.228036-72.754426-7.460044zM855.357012 239.479403c-24.232142-0.776005-49.386289 0-75.804444 2.950017l-65.002381 221.675299c17.776104 14.928087 38.762227 23.598138 66.468389 28.89417l74.338436-253.519486z" fill="#737891"></path><path d="M634.521718 781.222577a141.978832 141.978832 0 0 1-90.022528-32.168188c-8.284049-6.79204-9.492056-19.014111-2.700015-27.29816 6.79204-8.286049 19.014111-9.492056 27.30216-2.700016 28.894169 23.696139 68.408401 29.900175 103.132604 16.208095 33.832198-13.348078 58.756344-45.202265 65.044381-83.130487 1.75601-10.568062 11.740069-17.716104 22.310131-15.962093 10.570062 1.75401 17.716104 11.742069 15.966093 22.31013-8.51005 51.300301-42.64425 94.550554-89.084522 112.870662a141.556829 141.556829 0 0 1-51.948304 9.870057z" fill="#7F184C"></path><path d="M1008.65791 241.517415c-92.634543-19.794116-185.821089-35.036205-307.027799-4.586027-30.188177 7.584044-62.004363 14.484085-89.834526 13.63008-15.548091-0.476003-31.048182-4.096024-46.04027-7.602044l-2.664016-0.624004c-97.26657-22.670133-206.46521-39.24223-345.670025-7.294043a19.398114 19.398114 0 0 0-14.836087 21.834128l8.000047 52.360307a19.396114 19.396114 0 0 0 18.74011 16.462096c0.950006 0.02 1.72801 0.116001 2.326013 0.230002 2.750016 66.008387 15.940093 111.136651 41.476243 141.962832 27.31416 32.968193 68.734403 49.026287 126.628742 49.086287h0.218002c71.188417 0 119.584701-37.840222 147.656865-69.602408 31.476184-35.618209 50.340295-78.148458 55.070322-104.494612 1.238007-6.89604 2.958017-8.60405 2.964018-8.61005 0.282002-0.184001 1.66001-0.800005 7.490044-0.956006 6.008035-0.160001 6.262037-0.170001 9.702057 9.650057 0.592003 1.68601 1.164007 3.302019 1.75801 4.806028 23.394137 59.130346 43.932257 101.200593 73.998433 128.190751 31.796186 28.546167 70.836415 37.230218 119.674702 41.488243 8.802052 0.768005 17.228101 1.154007 25.284148 1.154007 48.494284 0 83.57249-13.950082 106.786626-42.336248 0.592003-0.724004 1.128007-1.476009 1.696009-2.212013 1.038006 12.604074 1.570009 25.266148 1.57001 37.946222 0 252.221478-205.195202 457.41668-457.412681 457.41668S38.794227 764.218478 38.794227 512.001 243.99143 54.58432 496.210907 54.58432c101.058592 0 196.841153 32.288189 276.995624 93.376547 8.52005 6.496038 20.694121 4.850028 27.184159-3.668022a19.394114 19.394114 0 0 0-3.670022-27.184159C709.754159 50.824298 605.83755 15.790093 496.210907 15.790093 222.597304 15.790093 0 238.387397 0 512.001s222.597304 496.210907 496.210907 496.210907c273.609603 0 496.208907-222.597304 496.208908-496.210907 0-36.180212-3.954023-72.238423-11.674068-107.278629 1.914011-8.988053 3.49402-17.912105 5.012029-26.536155 2.584015-14.682086 5.022029-28.550167 8.674051-40.186236 0.986006-3.140018 1.69201-4.790028 2.116012-5.622032 0.440003-0.06 1.074006-0.118001 1.938012-0.138001a19.396114 19.396114 0 0 0 18.81811-16.9841l6.546038-52.360307a19.394114 19.394114 0 0 0-15.192089-21.378125z m-28.152165 55.360325c-15.970094 6.82004-20.744122 22.038129-23.088135 29.508172-4.410026 14.042082-7.060041 29.116171-9.870058 45.080265-1.68801 9.596056-3.34402 18.988111-5.314031 27.986164a19.590115 19.590115 0 0 0-0.450003 1.988011c-10.990064 48.634285-32.128188 85.046498-120.130704 77.362453-91.152534-7.948047-115.222675-29.676174-160.968943-145.302851-0.414002-1.048006-0.806005-2.180013-1.218007-3.35802-3.760022-10.738063-12.476073-35.632209-45.534267-35.632208-0.600004 0-1.212007 0.008-1.82801 0.026-11.030065 0.298002-40.330236 1.086006-47.586279 41.490243-6.546038 36.456214-59.75035 142.162833-164.550964 142.162833h-0.168001c-89.854526-0.098001-124.932732-42.070247-129.424759-154.858907-0.620004-15.654092-9.540056-27.718162-23.460137-33.196195l-3.220019-21.076123c123.262722-24.950146 222.041301-9.574056 310.59782 11.062064l2.640015 0.616004c16.058094 3.756022 34.260201 8.010047 53.682315 8.60405 32.596191 0.994006 67.568396-6.514038 100.474589-14.780086 105.680619-26.548156 189.733112-15.626092 272.059594 1.250007l-2.642016 21.068124z" fill=""></path><path d="M634.521718 781.222577c17.514103 0 35.140206-3.244019 51.946304-9.874057 46.440272-18.318107 80.574472-61.570361 89.084522-112.870662 1.75001-10.568062-5.396032-20.55612-15.966093-22.31013-10.570062-1.75401-20.55412 5.396032-22.310131 15.962093-6.290037 37.928222-31.212183 69.782409-65.044381 83.130487-34.724203 13.69208-74.238435 7.488044-103.132604-16.208095-8.286049-6.79204-20.51012-5.584033-27.30216 2.700016s-5.584033 20.50612 2.700015 27.29816a141.976832 141.976832 0 0 0 90.024528 32.172188z" fill=""></path><path d="M834.55689 174.781024m-19.398114 0a19.398114 19.398114 0 1 0 38.796228 0 19.398114 19.398114 0 1 0-38.796228 0Z" fill=""></path></symbol><symbol id="icon--dizzy" viewBox="0 0 1024 1024"><path d="M512.002 512.002m-491.988 0a491.988 491.988 0 1 0 983.976 0 491.988 491.988 0 1 0-983.976 0Z" fill="#FDDF6D"></path><path d="M617.43 931.356c-271.716 0-491.986-220.268-491.986-491.986 0-145.168 62.886-275.632 162.888-365.684C129.054 155.124 20.014 320.828 20.014 512c0 271.716 220.268 491.986 491.986 491.986 126.548 0 241.924-47.796 329.098-126.298-67.106 34.31-143.124 53.668-223.668 53.668z" fill="#FCC56B"></path><path d="M630.704 722.638m-93.802 0a93.802 93.802 0 1 0 187.604 0 93.802 93.802 0 1 0-187.604 0Z" fill="#7F184C"></path><path d="M984.968 315.608c-7.61-25.84-24.538-49.402-49.242-67.892-36.894-27.612-84.006-38.754-126.008-29.798-40.318 8.596-74.284 35.528-95.64 75.838-19.318 36.458-25.998 79.766-18.33 118.81 17.202 87.598 103.476 138.402 177.798 138.402 3.44 0 6.864-0.11 10.248-0.328 11.03-0.718 19.392-10.24 18.678-21.268a20.012 20.012 0 0 0-21.268-18.678c-30.524 1.988-63.738-7.506-91.11-26.02-29.29-19.818-48.844-48.164-55.062-79.824-5.844-29.752-0.452-64.28 14.422-92.354 15.716-29.66 40.082-49.346 68.616-55.43 30.42-6.48 66.31 2.212 93.676 22.696 10.308 7.718 18.67 16.522 24.9 26.012a473.75 473.75 0 0 1 10.512 23.128 70.35 70.35 0 0 1 2.164 12.716c1.766 23.292-8.196 49.266-26.644 69.48-15.986 17.514-35.872 27.73-54.562 28.02-20.65 0.282-42.532-10.838-55.854-28.428-3.136-4.14-18.52-26.068-13.348-51.328 1.158-5.654 3.312-16.182 12.382-24.172 9.538-8.4 21.258-9.078 24.746-9.078h0.078c18.632 0.056 39.092 14.65 40.534 28.826 0.2 2.348 0.006 11.74-4.616 14.802-2.224 1.474-6.604 2.736-8.718 1.172-1.838-1.358-2.706-4.296-2.162-7.318 1.962-10.878-5.266-21.29-16.142-23.252-10.88-1.954-21.288 5.262-23.252 16.142-3.24 17.958 3.736 36.258 17.776 46.628 17.834 13.172 40.278 9.486 54.602 0 25.17-16.674 22.71-48.55 22.348-52.132-3.172-31.23-36.174-64.764-80.248-64.898-8.986 0.014-31.77 1.782-51.4 19.07-19.14 16.858-23.5 38.166-25.142 46.186-8.414 41.102 13.684 74.33 20.658 83.528 21.082 27.836 54.94 44.764 88.388 44.284 29.678-0.464 60.114-15.43 83.506-41.062a148.04 148.04 0 0 0 20.554-28.8c7.408 33.408 11.174 67.714 11.174 102.72 0 260.248-211.724 471.968-471.97 471.968S40.03 772.248 40.03 512 251.752 40.03 512 40.03c86.774 0 171.59 23.74 245.282 68.662 9.436 5.754 21.752 2.764 27.508-6.674 5.754-9.438 2.764-21.752-6.674-27.508C698.144 25.762 606.126 0 512 0 229.68 0 0 229.68 0 512c0 282.316 229.68 512 512 512s512-229.68 512-511.998c0-68.338-13.13-134.256-39.032-196.394z" fill=""></path><path d="M630.706 836.448c62.752 0 113.806-51.054 113.806-113.806 0-62.756-51.054-113.806-113.806-113.806s-113.806 51.054-113.806 113.806c0 62.756 51.054 113.806 113.806 113.806z m0-187.582c40.68 0 73.776 33.096 73.776 73.776s-33.096 73.776-73.776 73.776-73.776-33.094-73.776-73.776 33.096-73.776 73.776-73.776zM474.78 340.338c-10.878-1.954-21.288 5.262-23.252 16.142-3.24 17.958 3.736 36.262 17.776 46.628 17.838 13.172 40.274 9.486 54.606 0 25.168-16.674 22.708-48.55 22.344-52.132-3.172-31.23-36.174-64.764-80.248-64.898-8.946-0.002-31.768 1.782-51.4 19.07-19.134 16.852-23.498 38.162-25.142 46.186-8.414 41.112 13.688 74.332 20.658 83.528 21.082 27.84 54.95 44.824 88.388 44.284 29.678-0.464 60.116-15.43 83.506-41.064 25.744-28.21 39.574-65.402 36.988-99.49-2.634-34.748-21.634-67.018-53.504-90.872-36.896-27.618-84.008-38.756-126.008-29.8-40.318 8.596-74.284 35.528-95.644 75.838-19.316 36.458-25.998 79.766-18.33 118.81 17.202 87.598 103.476 138.402 177.798 138.402 3.44 0 6.864-0.11 10.248-0.328 11.03-0.718 19.392-10.24 18.678-21.268a20.008 20.008 0 0 0-21.268-18.678c-30.522 1.98-63.738-7.504-91.11-26.02-29.29-19.818-48.844-48.164-55.062-79.824-5.842-29.752-0.45-64.28 14.424-92.354 15.716-29.66 40.082-49.346 68.616-55.43 30.42-6.48 66.31 2.212 93.676 22.696 22.484 16.832 35.826 38.796 37.576 61.856 1.766 23.292-8.192 49.266-26.64 69.478-15.986 17.516-35.872 27.732-54.566 28.024-20.674 0.282-42.53-10.838-55.858-28.432-3.136-4.14-18.518-26.06-13.346-51.322 1.158-5.658 3.314-16.188 12.382-24.176 9.612-8.468 21.454-8.988 24.824-9.078 18.632 0.056 39.092 14.65 40.534 28.826 0.2 2.348 0.006 11.74-4.614 14.802-2.222 1.474-6.61 2.736-8.722 1.172-1.838-1.358-2.706-4.296-2.162-7.318 1.958-10.884-5.268-21.294-16.146-23.258z" fill=""></path><path d="M827.728 136.394m-20.014 0a20.014 20.014 0 1 0 40.028 0 20.014 20.014 0 1 0-40.028 0Z" fill=""></path></symbol><symbol id="icon--expressionless" viewBox="0 0 1024 1024"><path d="M512.003 512.003m-491.986961 0a491.986961 491.986961 0 1 0 983.973922 0 491.986961 491.986961 0 1 0-983.973922 0Z" fill="#FDDF6D"></path><path d="M617.431206 931.355819c-271.716531 0-491.984961-220.26843-491.984961-491.984961 0-145.168284 62.886123-275.632538 162.888318-365.684714-159.280311 81.438159-268.320524 247.140483-268.320524 438.312856 0 271.716531 220.26843 491.984961 491.984961 491.984961 126.548247 0 241.924473-47.794093 329.096643-126.298247-67.100131 34.312067-143.12228 53.670105-223.664437 53.670105z" fill="#FCC56B"></path><path d="M878.789716 413.238807h-163.642319c-11.056022 0-20.014039-8.962018-20.014039-20.014039 0-11.054022 8.958017-20.014039 20.014039-20.014039h163.642319c11.056022 0 20.014039 8.962018 20.014039 20.014039 0 11.054022-8.962018 20.014039-20.014039 20.014039zM503.964984 413.238807h-163.642319c-11.056022 0-20.014039-8.962018-20.014039-20.014039 0-11.054022 8.958017-20.014039 20.014039-20.014039h163.642319c11.056022 0 20.014039 8.962018 20.014039 20.014039 0 11.054022-8.962018 20.014039-20.014039 20.014039zM796.969557 710.345387H435.772851c-11.056022 0-20.014039-8.962018-20.014039-20.014039s8.958017-20.014039 20.014039-20.014039h361.194706c11.056022 0 20.014039 8.962018 20.014039 20.014039s-8.960018 20.014039-20.012039 20.014039z" fill="#7F184C"></path><path d="M934.963826 223.392436c-56.862111-83.176162-136.024266-147.268288-228.930447-185.340362-10.22402-4.192008-21.918043 0.702001-26.108051 10.930022-4.192008 10.22802 0.702001 21.918043 10.930021 26.110051 85.646167 35.098069 158.62831 94.192184 211.064413 170.890333 53.680105 78.522153 82.05216 170.512333 82.05216 266.01652 0 260.246508-211.726414 471.970922-471.970922 471.970922S40.030078 772.247508 40.030078 511.999 251.754492 40.030078 511.999 40.030078c11.056022 0 20.014039-8.962018 20.014039-20.014039S523.055022 0 511.999 0C229.680449 0 0 229.682449 0 511.999s229.680449 511.999 511.999 511.999 511.999-229.680449 511.999-511.999c0.004-103.600202-30.78406-203.398397-89.034174-288.606564z" fill=""></path><path d="M878.789716 413.238807c11.056022 0 20.014039-8.962018 20.014039-20.014039 0-11.054022-8.958017-20.014039-20.014039-20.014039h-163.642319c-11.056022 0-20.014039 8.962018-20.014039 20.014039 0 11.054022 8.958017 20.014039 20.014039 20.014039h163.642319zM415.758812 690.333348c0 11.054022 8.958017 20.014039 20.014039 20.014039h361.194706c11.056022 0 20.014039-8.962018 20.014039-20.014039s-8.958017-20.014039-20.014039-20.014039H435.772851a20.010039 20.010039 0 0 0-20.014039 20.014039zM523.979023 393.224768c0-11.054022-8.958017-20.014039-20.014039-20.014039h-163.642319c-11.056022 0-20.014039 8.962018-20.014039 20.014039 0 11.054022 8.958017 20.014039 20.014039 20.014039h163.642319c11.052022 0 20.014039-8.960018 20.014039-20.014039z" fill=""></path><path d="M628.061227 35.480069m-20.014039 0a20.014039 20.014039 0 1 0 40.028078 0 20.014039 20.014039 0 1 0-40.028078 0Z" fill=""></path></symbol><symbol id="icon--flushed" viewBox="0 0 1024 1024"><path d="M512.002 512.002m-491.988 0a491.988 491.988 0 1 0 983.976 0 491.988 491.988 0 1 0-983.976 0Z" fill="#FDDF6D"></path><path d="M617.43 931.356c-271.716 0-491.986-220.268-491.986-491.986 0-145.168 62.886-275.632 162.888-365.684C129.054 155.124 20.014 320.828 20.014 512c0 271.716 220.268 491.986 491.986 491.986 126.548 0 241.924-47.796 329.098-126.298-67.106 34.31-143.124 53.668-223.668 53.668z" fill="#FCC56B"></path><path d="M426.314 359.704m-142.718 0a142.718 142.718 0 1 0 285.436 0 142.718 142.718 0 1 0-285.436 0Z" fill="#FFFFFF"></path><path d="M826.554 359.704m-142.718 0a142.718 142.718 0 1 0 285.436 0 142.718 142.718 0 1 0-285.436 0Z" fill="#FFFFFF"></path><path d="M300.576 556.564c-36.536 0-66.156 29.62-66.156 66.156h132.314c-0.004-36.538-29.622-66.156-66.158-66.156zM877.628 556.564c-36.536 0-66.156 29.62-66.156 66.156h132.314c0-36.538-29.622-66.156-66.158-66.156z" fill="#F9A880"></path><path d="M717.692 710.348H504.616c-11.054 0-20.014-8.958-20.014-20.014s8.962-20.014 20.014-20.014h213.076c11.054 0 20.014 8.958 20.014 20.014 0.002 11.056-8.96 20.014-20.014 20.014z" fill=""></path><path d="M450.33 359.704m-40.03 0a40.03 40.03 0 1 0 80.06 0 40.03 40.03 0 1 0-80.06 0Z" fill="#7F184C"></path><path d="M856.468 359.704m-40.03 0a40.03 40.03 0 1 0 80.06 0 40.03 40.03 0 1 0-80.06 0Z" fill="#7F184C"></path><path d="M976.296 296.028c-24.834-58.17-82.6-99.052-149.742-99.052-89.732 0-162.732 73-162.732 162.732s73 162.732 162.732 162.732c66.774 0 124.256-40.44 149.316-98.102a475.43 475.43 0 0 1 8.104 87.656c0 260.248-211.724 471.968-471.97 471.968S40.03 772.248 40.03 512 251.752 40.03 512 40.03c85.956 0 170.084 23.324 243.29 67.452 9.468 5.71 21.768 2.658 27.474-6.808 5.706-9.468 2.658-21.768-6.808-27.474C696.514 25.312 605.24 0 512 0 229.68 0 0 229.68 0 512c0 282.316 229.68 512 512 512s512-229.68 512-511.998c0-75.548-16.076-148.154-47.704-215.974z m-27.042 63.684c0 67.66-55.044 122.704-122.704 122.704s-122.704-55.046-122.704-122.704 55.044-122.704 122.704-122.704c48.02 0 89.66 27.744 109.804 68.028 0.136 0.322 0.256 0.648 0.41 0.966 1.016 2.092 1.972 4.206 2.956 6.308a121.964 121.964 0 0 1 9.534 47.402z" fill=""></path><path d="M426.326 196.98c-89.732 0-162.732 73-162.732 162.732s73 162.732 162.732 162.732 162.732-73 162.732-162.732-73.002-162.732-162.732-162.732z m0 285.436c-67.66 0-122.704-55.046-122.704-122.704s55.044-122.704 122.704-122.704 122.704 55.046 122.704 122.704-55.046 122.704-122.704 122.704zM484.602 690.33c0 11.056 8.962 20.014 20.014 20.014h213.076c11.054 0 20.014-8.958 20.014-20.014s-8.962-20.014-20.014-20.014H504.616c-11.054 0-20.014 8.958-20.014 20.014z" fill=""></path><path d="M826.554 132.542m-20.014 0a20.014 20.014 0 1 0 40.028 0 20.014 20.014 0 1 0-40.028 0Z" fill=""></path></symbol><symbol id="icon--happy-" viewBox="0 0 1024 1024"><path d="M1003.986 512c0 271.716-220.268 491.986-491.986 491.986S20.014 783.716 20.014 512 240.284 20.014 512 20.014c65.424 0 127.868 12.77 184.97 35.954C877.02 129.07 1003.986 305.71 1003.986 512z" fill="#FDDF6D"></path><path d="M617.43 931.356c-271.716 0-491.986-220.268-491.986-491.986 0-145.168 62.886-275.632 162.888-365.684C129.054 155.124 20.014 320.828 20.014 512c0 271.716 220.268 491.986 491.986 491.986 126.548 0 241.924-47.796 329.098-126.298-67.106 34.31-143.124 53.668-223.668 53.668z" fill="#FCC56B"></path><path d="M492.588 379.724c-11.054 0-20.014-8.962-20.014-20.014 0-25.816-21.002-46.818-46.818-46.818s-46.818 21.004-46.818 46.818c0 11.054-8.962 20.014-20.014 20.014-11.054 0-20.014-8.962-20.014-20.014 0-47.888 38.962-86.848 86.848-86.848s86.848 38.96 86.848 86.848c-0.002 11.052-8.964 20.014-20.018 20.014zM830.634 379.724c-11.054 0-20.014-8.962-20.014-20.014 0-25.816-21.002-46.818-46.818-46.818s-46.818 21.004-46.818 46.818c0 11.054-8.962 20.014-20.014 20.014s-20.014-8.962-20.014-20.014c0-47.888 38.962-86.848 86.848-86.848 47.886 0 86.848 38.96 86.848 86.848-0.004 11.052-8.964 20.014-20.018 20.014z" fill="#7F184C"></path><path d="M583.584 871.534c-142.222 0-257.514-115.292-257.514-257.514h515.028c0 142.22-115.294 257.514-257.514 257.514z" fill="#FFFFFF"></path><path d="M300.576 481.542c-36.536 0-66.156 29.62-66.156 66.156h132.314c-0.004-36.536-29.622-66.156-66.158-66.156zM877.628 481.542c-36.536 0-66.158 29.62-66.158 66.156h132.314c0.002-36.536-29.616-66.156-66.156-66.156z" fill="#F9A880"></path><path d="M351.386 725.498a257.446 257.446 0 0 0 23.97 40.03h416.456a257.352 257.352 0 0 0 23.97-40.03H351.386z" fill="#E6E6E6"></path><path d="M935.748 224.546c-56.342-82.904-134.876-147.02-227.102-185.414-10.196-4.248-21.92 0.58-26.168 10.784s0.58 21.922 10.784 26.172c176.598 73.52 290.706 244.628 290.706 435.914 0 260.248-211.724 471.97-471.97 471.97S40.03 772.244 40.03 512 251.752 40.03 512 40.03c11.054 0 20.014-8.962 20.014-20.014S523.054 0 512 0C229.68 0 0 229.68 0 512s229.68 512 512 512 512-229.68 512-512c0-103.106-30.516-202.504-88.252-287.454z" fill=""></path><path d="M378.936 359.71c0-25.816 21.004-46.818 46.818-46.818s46.818 21.002 46.818 46.818c0 11.054 8.962 20.014 20.014 20.014 11.054 0 20.014-8.962 20.014-20.014 0-47.888-38.96-86.848-86.848-86.848s-86.848 38.96-86.848 86.848c0 11.054 8.962 20.014 20.014 20.014 11.058 0 20.018-8.958 20.018-20.014zM763.8 272.864c-47.888 0-86.848 38.96-86.848 86.848 0 11.054 8.962 20.014 20.014 20.014s20.014-8.962 20.014-20.014c0-25.816 21.004-46.818 46.818-46.818 25.814 0 46.818 21.002 46.818 46.818 0 11.054 8.962 20.014 20.014 20.014s20.014-8.962 20.014-20.014c0.004-47.888-38.954-86.848-86.844-86.848zM306.054 614.018c0 153.03 124.5 277.53 277.53 277.53s277.53-124.5 277.53-277.53c0-11.054-8.962-20.014-20.014-20.014H326.068c-11.052 0-20.014 8.962-20.014 20.014z m514.194 20.016c-10.194 121.63-112.446 217.486-236.664 217.486S357.114 755.666 346.92 634.034h473.328z" fill=""></path><path d="M631.29 35.012m-20.014 0a20.014 20.014 0 1 0 40.028 0 20.014 20.014 0 1 0-40.028 0Z" fill=""></path></symbol><symbol id="icon--injury" viewBox="0 0 1024 1024"><path d="M1004.174039 511.885c0 101.801801-31.951938 202.277605-91.035822 285.207443-57.561888 80.797842-139.427728 143.35972-232.671546 177.311654-96.485812 35.133931-203.609602 38.993924-302.421409 11.079978-95.773813-27.053947-182.147644-83.703837-245.509521-160.403686-64.293874-77.825848-103.479798-174.849658-111.099783-275.527462-7.715985-101.931801 16.591968-205.075599 69.629864-292.511429C142.261722 172.637663 218.855573 104.503796 308.739397 63.659876c93.981816-42.705917 200.897608-54.539893 302.02741-33.955934 97.609809 19.869961 187.943633 69.999863 256.807499 141.925723 69.089865 72.161859 115.241775 164.933678 130.673744 263.673485a495.893031 495.893031 0 0 1 5.925989 76.58185z" fill="#FDDF6D"></path><path d="M787.224462 905.006232c-96.485812 35.133931-203.609602 38.993924-302.421409 11.079979-95.773813-27.053947-182.147644-83.703837-245.50952-160.401687-64.295874-77.829848-103.481798-174.851658-111.101783-275.529462-7.717985-101.931801 16.589968-205.075599 69.627864-292.511428 27.443946-45.241912 62.189879-85.801832 102.3618-119.995766-86.187832 41.21392-159.559688 107.67779-209.125592 189.39163-53.037896 87.435829-77.345849 190.579628-69.629864 292.511429 7.619985 100.677803 46.805909 197.699614 111.101783 275.531462 63.361876 76.69785 149.735708 133.34774 245.509521 160.401686 98.807807 27.913945 205.931598 24.051953 302.421409-11.079978 54.971893-20.015961 105.979793-49.983902 150.391706-87.761829a484.231054 484.231054 0 0 1-43.625915 18.363964z" fill="#FCC56B"></path><path d="M537.84095 458.417105c0 24.935951-15.993969 47.829907-39.409923 56.403889-23.683954 8.669983-50.9459 1.233998-66.98787-18.203964-15.835969-19.187963-18.093965-47.035908-5.513989-68.511866 12.881975-21.991957 38.981924-33.635934 63.959875-28.525944 27.583946 5.647989 47.951906 30.69994 47.951907 58.837885zM875.952289 458.417105c0 24.935951-15.993969 47.829907-39.409923 56.403889-23.683954 8.669983-50.9459 1.233998-66.987869-18.203964-15.833969-19.187963-18.093965-47.035908-5.513989-68.511866 12.881975-21.991957 38.981924-33.635934 63.959875-28.525944 27.585946 5.647989 47.951906 30.69994 47.951906 58.837885z" fill="#FFFFFF"></path><path d="M312.863389 534.130957c-36.05993 0-66.167871 30.107941-66.167871 66.167871h132.337742c-0.002-36.05993-30.109941-66.167871-66.169871-66.167871zM890.026262 525.262974c-36.05993 0-66.167871 30.109941-66.167871 66.169871h132.337741c0-36.06193-30.107941-66.169871-66.16987-66.169871z" fill="#F9A880"></path><path d="M164.04968 164.145679c-27.887946 27.883946-52.483897 59.081885-72.995858 92.893819-25.259951 41.645919-43.989914 86.85583-55.859891 133.797739l899.140244-131.539743c-18.867963-31.541938-41.247919-61.015881-66.771869-87.669829-35.459931-37.037928-76.62585-68.275867-121.533763-92.599819L164.04968 164.145679z" fill="#F2F2F2"></path><path d="M814.446409 276.839459l91.203822-60.223882a488.825045 488.825045 0 0 0-38.085925-44.987912c-35.459931-37.035928-76.62585-68.275867-121.533763-92.599819L269.899473 148.66371 94.895815 250.91951c-1.277998 2.041996-2.591995 4.059992-3.839993 6.119988-25.259951 41.645919-43.989914 86.85583-55.859891 133.797739l779.250478-113.997778z" fill="#E6E6E6"></path><path d="M867.576306 171.629665C818.258402 120.117765 757.92452 79.791844 691.798649 53.747895L42.783916 364.071289c-18.707963 59.665883-26.093949 122.79976-21.347958 185.481638a485.645051 485.645051 0 0 0 6.447988 50.053902L883.756274 189.42163a484.183054 484.183054 0 0 0-16.179968-17.791965z" fill="#FFFFFF"></path><path d="M789.588458 777.976481c-9.813981 0-15.755969-7.881985-23.271955-12.939975-7.961984-5.35599-16.699967-9.539981-25.62195-13.035975-22.297956-8.733983-46.24191-13.383974-70.059863-15.28397-24.809952-1.979996-50.051902-0.755999-74.425854 4.393992-10.563979 2.231996-21.015959 5.21599-30.98594 9.389981-8.417984 3.525993-16.711967 11.035978-25.55995 12.869975-21.321958 4.413991-32.099937-23.547954-15.42997-36.083929 16.061969-12.083976 36.921928-19.025963 56.20189-23.757954 47.309908-11.615977 98.787807-10.22198 145.867715 1.835996 22.403956 5.737989 44.665913 14.205972 63.783876 27.425947 7.991984 5.525989 17.999965 12.151976 19.355962 22.569956 1.533997 11.779977-7.937984 22.615956-19.853961 22.615956z" fill="#7F184C"></path><path d="M951.462142 249.087514c-4.523991-10.599979-12.609975-20.58796-19.191963-29.997942a517.900988 517.900988 0 0 0-21.275958-28.303945 514.340995 514.340995 0 0 0-45.003912-48.981904c-33.577934-32.069937-72.639858-62.423878-114.627777-82.727838-18.061965-9.575981-38.011926-20.797959-57.867886-26.079949-144.743717-55.005893-310.523394-40.417921-443.369135 39.025923a515.876992 515.876992 0 0 0-95.007814 73.073858c-8.073984 5.745989-14.915971 14.631971-21.565958 21.937957a514.434995 514.434995 0 0 0-20.32596 23.717953 511.791 511.791 0 0 0-89.415826 166.629675c-9.677981 24.675952-14.367972 52.787897-18.231964 78.857846A516.91699 516.91699 0 0 0 0 511.875c0.038 123.327759 45.479911 244.011523 126.671753 336.813342 78.373847 89.581825 187.273634 150.303706 304.903404 168.96167 118.461769 18.789963 241.749528-5.04999 344.441327-67.055869 98.683807-59.585884 175.907656-152.361702 216.167578-260.419491 47.233908-126.773752 41.673919-270.485472-15.32597-393.223232a514.854994 514.854994 0 0 0-25.39595-47.863906c-0.371999-0.863998 46.15191 76.87785 0 0z m-433.639153 209.329591c0 21.793957-18.243964 40.037922-40.037922 40.037921s-40.037922-18.243964-40.037922-40.037921 18.243964-40.037922 40.037922-40.037922 40.037922 18.243964 40.037922 40.037922zM43.629915 570.144886c-7.905985-63.965875-2.671995-129.481747 15.525969-191.321626L689.040654 74.259855c60.313882 24.475952 114.455776 61.063881 159.397689 106.743791l-202.921604 98.117809a19.925961 19.925961 0 0 0-4.719991 2.281995L43.629915 570.144886zM465.423091 137.913731l-386.745245 186.999634c23.491954-54.243894 56.865889-103.245798 97.857809-144.711717l288.887436-42.287917z m410.955197 74.051855a475.063072 475.063072 0 0 1 22.585956 29.731942l-120.583764 17.651965 97.997808-47.383907zM634.78676 56.021891l-49.343903 23.859953-352.549312 51.603899c86.86183-63.925875 194.49162-96.333812 302.20941-91.113822a471.319079 471.319079 0 0 1 99.683805 15.64997z m-122.69176 927.914187c-226.211558 0-415.739188-159.949688-461.501099-372.685272l348.685319-168.597671c-9.539981 47.585907 26.879948 93.889817 75.371853 95.771813 47.387907 1.837996 86.89983-39.491923 82.929838-86.75583-2.291996-27.315947-19.051963-52.071898-43.429915-64.555874l144.209718-69.727864 264.075484-38.653924c70.173863 123.02376 80.889842 274.979463 28.713944 406.591205-43.967914 110.909783-130.387745 202.845604-238.271534 253.757505-62.615878 29.545942-131.553743 44.855912-200.783608 44.855912z" fill=""></path><path d="M815.896406 378.343261c-33.435935 0-64.101875 21.635958-75.391852 53.099896-11.429978 31.845938-1.003998 68.281867 25.33995 89.433826 26.111949 20.965959 63.637876 23.303954 92.11782 5.649989 28.343945-17.567966 43.141916-51.797899 36.329929-84.477835-7.639985-36.621928-40.99392-63.705876-78.395847-63.705876z m0 120.111765c-21.793957 0-40.037922-18.243964-40.037921-40.037921s18.243964-40.037922 40.037921-40.037922 40.037922 18.243964 40.037922 40.037922-18.243964 40.037922-40.037922 40.037921zM666.072699 696.28064c-45.015912-2.529995-94.725815 2.935994-134.275738 26.199949-8.131984 4.783991-15.785969 10.21798-16.173968 20.53596-0.359999 9.487981 6.211988 18.037965 15.43597 20.22196 9.891981 2.337995 16.723967-4.073992 24.859951-8.365983 9.357982-4.93799 19.435962-8.489983 29.643942-11.221978 46.469909-12.443976 98.581807-10.33998 144.267719 4.477991 9.721981 3.151994 19.279962 6.989986 28.243944 11.915977 7.793985 4.281992 13.879973 10.777979 21.397959 15.18997 21.011959 12.333976 39.791922-16.433968 23.127954-32.511937-15.51397-14.965971-36.639928-24.629952-56.767889-31.537938-25.65395-8.801983-52.727897-13.393974-79.759844-14.903971-56.13589-3.157994 57.831887 3.231994 0 0z" fill=""></path></symbol><symbol id="icon--kiss-" viewBox="0 0 1024 1024"><path d="M451.596 511.994m-433.942 0a433.942 433.942 0 1 0 867.884 0 433.942 433.942 0 1 0-867.884 0Z" fill="#FDDF6D"></path><path d="M325.518 457.156c-32.226 0-58.35 26.124-58.35 58.35h116.702c0-32.226-26.124-58.35-58.352-58.35zM740.34 457.156c-32.226 0-58.35 26.124-58.35 58.35h116.702c-0.002-32.226-26.126-58.35-58.352-58.35z" fill="#F9A880"></path><path d="M544.586 881.878c-239.658 0-433.94-194.28-433.94-433.94 0-128.04 55.466-243.112 143.67-322.54C113.828 197.23 17.654 343.384 17.654 512c0 239.658 194.28 433.94 433.94 433.94 111.618 0 213.382-42.156 290.27-111.398-59.188 30.264-126.24 47.336-197.278 47.336z" fill="#FCC56B"></path><path d="M734.65 406.73a17.648 17.648 0 0 1-15.438-9.066c-11.328-20.334-32.804-32.964-56.048-32.964-22.67 0-44.436 12.816-56.806 33.45a17.654 17.654 0 0 1-30.282-18.154c18.712-31.214 52.082-50.604 87.088-50.604 36.044 0 69.338 19.576 86.89 51.088a17.652 17.652 0 0 1-6.83 24.014 17.556 17.556 0 0 1-8.574 2.236zM424.018 406.73a17.648 17.648 0 0 1-15.438-9.066c-11.328-20.334-32.804-32.964-56.048-32.964-22.67 0-44.436 12.816-56.806 33.45a17.654 17.654 0 0 1-30.282-18.154c18.712-31.214 52.082-50.604 87.088-50.604 36.044 0 69.338 19.576 86.89 51.088a17.652 17.652 0 0 1-6.83 24.014 17.572 17.572 0 0 1-8.574 2.236z" fill="#7F184C"></path><path d="M977.584 601.29c-24.52-16.858-55.552-15.1-77.646 1.136a6.106 6.106 0 0 1-6.678 0.378 6.106 6.106 0 0 1-3.004-5.976c3.044-27.226-10.894-54.974-37.694-67.824-29.628-14.206-65.8-4.342-84.148 22.914-11.234 16.69-13.916 36.316-9.356 54.07l28.738 129.386c4.302 19.372 24.27 30.906 43.202 24.95l123.988-38.994c18.826-4.466 35.686-17.02 44.908-36.198 14.142-29.422 4.588-65.346-22.31-83.842z" fill="#FD4DD7"></path><path d="M719.214 397.666a17.646 17.646 0 0 0 24.012 6.832 17.652 17.652 0 0 0 6.83-24.014c-17.552-31.512-50.848-51.088-86.89-51.088-35.006 0-68.374 19.388-87.088 50.602a17.652 17.652 0 0 0 6.064 24.218 17.654 17.654 0 0 0 24.218-6.064c12.37-20.634 34.136-33.45 56.806-33.45 23.246 0 44.722 12.63 56.048 32.964zM352.532 329.396c-35.006 0-68.374 19.388-87.088 50.602a17.654 17.654 0 0 0 30.282 18.154c12.37-20.634 34.136-33.45 56.806-33.45 23.246 0 44.722 12.63 56.048 32.962a17.646 17.646 0 0 0 24.012 6.832 17.652 17.652 0 0 0 6.83-24.014c-17.552-31.51-50.846-51.086-86.89-51.086zM677.55 656.044c20.362-15.088 26.882-44.62 14.972-66.948-11.152-20.906-33.884-29.406-56.47-25.8-27.116 4.33-54.37 9.638-81.238 15.298-5.02 1.056-9.67 1.728-13.622 5.632-8.754 8.65-5.84 23.916 5.426 28.772 9.172 3.954 23.698-1.398 32.866-3.124l49.51-9.324c11.204-2.108 27.928-7.54 33.29 7.076 5.652 15.404-9.83 22.456-20.262 28.824-10.622 6.488-22.552 12.266-32.452 19.816-9.952 7.594-11.66 21.892-0.706 29.678 4.436 3.154 10.434 4.88 15.348 7.024 11.32 4.94 37.072 11.166 38.666 25.344 2.036 18.096-14.53 17.592-26.436 16.762l-49.982-3.488c-9.354-0.652-23.036-4.036-32.306-0.854-11.606 3.982-15.694 18.972-7.6 28.278 4.146 4.766 9.606 5.698 15.432 6.262 28.526 2.752 58.452 6.276 87.104 6.08 24.534-0.168 45.53-20.24 48.816-44.16 1.832-13.336-1.714-27.118-9.772-37.9-8.358-11.182-19.226-14.838-31.212-20.568 6.828-4.17 14.196-7.924 20.628-12.68 13.048-9.666-0.42 0.312 0 0z" fill=""></path><path d="M987.584 586.742a84.83 84.83 0 0 0-80.03-8.666c-3.776-27.76-21.256-52.476-47.36-64.99-37.46-17.964-83.216-5.508-106.426 28.972-13.444 19.972-17.77 44.75-11.886 68.022l28.678 129.12a51.572 51.572 0 0 0 12.838 24.162c-78.586 103.568-201.322 164.924-331.804 164.924-229.54 0-416.286-186.746-416.286-416.286S222.052 95.714 451.592 95.714c95.566 0 188.91 33.188 262.834 93.45 72.906 59.43 124.014 142.46 143.912 233.796a17.65 17.65 0 0 0 21.008 13.49 17.654 17.654 0 0 0 13.49-21.008c-21.592-99.108-77.03-189.19-156.1-253.646-80.208-65.384-181.474-101.392-285.144-101.392C202.582 60.408 0 262.99 0 512s202.582 451.592 451.592 451.592c143.832 0 279.01-68.702 364.042-184.356 1.738 0.176 3.482 0.292 5.232 0.292 5.188 0 10.392-0.782 15.422-2.364l123.42-38.816c24.636-6.05 45.056-22.624 56.09-45.566 17.85-37.12 5.722-82.706-28.214-106.04z m-3.602 90.736c-6.496 13.506-18.552 23.23-33.076 26.676-0.412 0.098-0.82 0.21-1.222 0.336l-123.99 38.994a16.044 16.044 0 0 1-12.96-1.424 16.022 16.022 0 0 1-7.71-10.514l-28.734-129.384a13.496 13.496 0 0 0-0.134-0.562c-3.544-13.804-1.094-27.946 6.902-39.822 9.336-13.868 24.94-21.61 40.88-21.61 7.106 0 14.278 1.536 20.994 4.756 18.94 9.08 30.104 29.154 27.78 49.952a23.776 23.776 0 0 0 11.714 23.212 23.78 23.78 0 0 0 25.97-1.438c16.878-12.404 39.862-12.732 57.19-0.814 19.722 13.562 26.77 40.066 16.396 61.642z" fill=""></path><path d="M883.724 480.076m-17.654 0a17.654 17.654 0 1 0 35.308 0 17.654 17.654 0 1 0-35.308 0Z" fill=""></path></symbol><symbol id="icon--scared" viewBox="0 0 1024 1024"><path d="M512.002 512.002m-491.988 0a491.988 491.988 0 1 0 983.976 0 491.988 491.988 0 1 0-983.976 0Z" fill="#FDDF6D"></path><path d="M617.43 931.356c-271.716 0-491.986-220.268-491.986-491.986 0-145.168 62.886-275.632 162.888-365.684C129.054 155.124 20.014 320.828 20.014 512c0 271.716 220.268 491.986 491.986 491.986 126.548 0 241.924-47.796 329.098-126.298-67.106 34.31-143.124 53.668-223.668 53.668z" fill="#FCC56B"></path><path d="M426.314 359.704m-111.15 0a111.15 111.15 0 1 0 222.3 0 111.15 111.15 0 1 0-222.3 0Z" fill="#FFFFFF"></path><path d="M826.554 359.704m-142.718 0a142.718 142.718 0 1 0 285.436 0 142.718 142.718 0 1 0-285.436 0Z" fill="#FFFFFF"></path><path d="M445.02 359.704m-40.03 0a40.03 40.03 0 1 0 80.06 0 40.03 40.03 0 1 0-80.06 0Z" fill="#7F184C"></path><path d="M856.468 359.704m-40.03 0a40.03 40.03 0 1 0 80.06 0 40.03 40.03 0 1 0-80.06 0Z" fill="#7F184C"></path><path d="M622.278 637.214c84.334 0 152.702 68.368 152.702 152.702v46.444H469.576v-46.444c0-84.334 68.368-152.702 152.702-152.702z" fill="#7F184C"></path><path d="M530.608 692.034h194.49c3.934 0 7.566-1.644 10.542-4.408-27.946-30.95-68.378-50.41-113.36-50.41-41.69 0-79.458 16.724-107.014 43.808 3.23 6.612 8.886 11.01 15.342 11.01z" fill="#F2F2F2"></path><path d="M600.368 780.032c-41.444-25.112-85.876-31.316-127.574-21.374a153.274 153.274 0 0 0-3.214 31.258v46.444h192.302c-17.278-22.778-37.904-42.022-61.514-56.328z" fill="#FC4C59"></path><path d="M975.348 293.936c-1.562-3.52-6.62-13.402-7.106-14.118-27.968-49.404-80.98-82.84-141.688-82.84-89.732 0-162.732 73-162.732 162.732s73 162.732 162.732 162.732c66.78 0 124.268-40.446 149.32-98.118a475.83 475.83 0 0 1 8.096 87.672c0 260.248-211.724 471.968-471.97 471.968S40.03 772.248 40.03 512 251.752 40.03 512 40.03c82.144 0 163.024 21.418 233.898 61.938 9.596 5.492 21.824 2.156 27.308-7.44 5.486-9.596 2.156-21.824-7.44-27.308C688.852 23.244 601.1 0 512 0 229.68 0 0 229.68 0 512c0 282.316 229.68 512 512 512s512-229.68 512-511.998c0-76.416-16.374-149.704-48.652-218.066z m-26.094 65.776c0 67.66-55.044 122.704-122.704 122.704s-122.704-55.046-122.704-122.704 55.044-122.704 122.704-122.704c46.476 0 86.998 25.974 107.816 64.168 1.674 3.344 3.302 6.7 4.888 10.072a121.864 121.864 0 0 1 10 48.464z" fill=""></path><path d="M557.492 359.712c0-72.328-58.84-131.166-131.166-131.166s-131.166 58.84-131.166 131.166 58.84 131.166 131.166 131.166 131.166-58.838 131.166-131.166z m-131.166 91.136c-50.252 0-91.136-40.884-91.136-91.136s40.884-91.136 91.136-91.136 91.136 40.884 91.136 91.136c0 50.254-40.882 91.136-91.136 91.136zM469.576 856.376H774.98c11.054 0 20.014-8.958 20.014-20.014v-46.444c0-95.238-77.48-172.716-172.716-172.716s-172.716 77.478-172.716 172.716v46.444c0 11.056 8.962 20.014 20.014 20.014z m20.016-66.46c0-73.164 59.524-132.686 132.686-132.686 73.164 0 132.686 59.524 132.686 132.686v26.43H489.592v-26.43z" fill=""></path><path d="M816.44 125.182m-20.014 0a20.014 20.014 0 1 0 40.028 0 20.014 20.014 0 1 0-40.028 0Z" fill=""></path><path d="M300.576 556.564c-36.536 0-66.156 29.62-66.156 66.156h132.314c-0.004-36.538-29.622-66.156-66.158-66.156zM877.628 556.564c-36.536 0-66.156 29.62-66.156 66.156h132.314c0-36.538-29.622-66.156-66.158-66.156z" fill="#F9A880"></path></symbol><symbol id="icon--sleeping" viewBox="0 0 1024 1024"><path d="M442.812 512.006m-425.502 0a425.502 425.502 0 1 0 851.004 0 425.502 425.502 0 1 0-851.004 0Z" fill="#FDDF6D"></path><path d="M533.994 874.686c-234.998 0-425.5-190.502-425.5-425.5 0-125.55 54.388-238.384 140.876-316.266C111.614 203.354 17.31 346.662 17.31 512.002c0 234.998 190.502 425.5 425.5 425.5 109.448 0 209.232-41.336 284.624-109.23-58.034 29.674-123.782 46.414-193.44 46.414z" fill="#FCC56B"></path><path d="M528.462 757.486m-70.966 0a70.966 70.966 0 1 0 141.932 0 70.966 70.966 0 1 0-141.932 0Z" fill="#7F184C"></path><path d="M382.418 530.298c-33.214 0-64.44-8.152-79.552-20.77-7.34-6.13-18.252-5.144-24.38 2.192s-5.144 18.254 2.192 24.38c21.61 18.044 59.644 28.816 101.738 28.816 40.838 0 78.918-10.626 101.862-28.426a17.312 17.312 0 0 0-21.222-27.354c-16.566 12.856-48.22 21.162-80.638 21.162zM784.538 536.49c7.552-5.86 8.926-16.736 3.066-24.286-5.86-7.552-16.736-8.922-24.288-3.066-16.566 12.854-48.222 21.16-80.64 21.16-33.212 0-64.436-8.152-79.55-20.77a17.31 17.31 0 0 0-22.188 26.572c21.61 18.044 59.644 28.816 101.736 28.816 40.842 0.002 78.92-10.626 101.864-28.426zM528.46 845.752c48.676 0 88.276-39.598 88.276-88.274s-39.6-88.276-88.276-88.276c-48.676 0-88.276 39.6-88.276 88.276 0 48.676 39.6 88.274 88.276 88.274z m0-141.93c29.586 0 53.656 24.07 53.656 53.656 0 29.584-24.07 53.654-53.656 53.654s-53.656-24.07-53.656-53.654c0-29.586 24.068-53.656 53.656-53.656zM575.962 320.094a17.318 17.318 0 0 0-19.368-2.14l-75.396 40.004a17.312 17.312 0 0 0 16.23 30.582L534 369.136l-19.134 55.394a17.308 17.308 0 0 0 23.85 21.256l67.334-32.312a17.312 17.312 0 0 0-14.978-31.214l-29.944 14.37 19.944-57.736a17.31 17.31 0 0 0-5.11-18.8z" fill=""></path><path d="M759.356 202.31a17.254 17.254 0 0 0-12.754-4.05c-2.298 0.306-4.552 0.796-6.612 1.914l-107.052 56.802a17.31 17.31 0 0 0-7.176 23.406c4.478 8.44 14.958 11.662 23.406 7.176l68.226-36.204-33.192 96.096a17.31 17.31 0 0 0 24.026 21.172l95.672-47.258c30.758 58.116 47.104 123.216 47.104 190.64 0 225.076-183.112 408.188-408.188 408.188S34.62 737.078 34.62 512.002 217.734 103.81 442.81 103.81c51.89 0 102.446 9.602 150.25 28.536a17.3 17.3 0 0 0 22.466-9.718 17.306 17.306 0 0 0-9.718-22.466c-51.882-20.55-106.722-30.97-162.998-30.97C198.642 69.19 0 267.834 0 512.002c0 244.166 198.642 442.808 442.81 442.808 244.166 0 442.808-198.642 442.808-442.808 0-115.294-44.028-224.34-123.988-307.278a17.254 17.254 0 0 0-2.274-2.414c-3.602-3.082 0.854 0.732 0 0z m-28.674 116.606l24.194-70.05a409.22 409.22 0 0 1 31.482 42.546l-55.676 27.504zM1022.292 199.962c-4.138-8.62-14.482-12.248-23.096-8.118l-83.632 40.136 46.64-135.036a17.302 17.302 0 0 0-5.108-18.8 17.318 17.318 0 0 0-19.368-2.14l-135.516 71.906a17.31 17.31 0 0 0 16.23 30.582l96.694-51.304-45.832 132.694a17.308 17.308 0 0 0 23.85 21.256l121.026-58.078c8.612-4.14 12.248-14.48 8.112-23.098z" fill=""></path><path d="M658.356 144.412m-17.31 0a17.31 17.31 0 1 0 34.62 0 17.31 17.31 0 1 0-34.62 0Z" fill=""></path></symbol><symbol id="icon--thinking" viewBox="0 0 1024 1024"><path d="M512.002 512.002m-491.988 0a491.988 491.988 0 1 0 983.976 0 491.988 491.988 0 1 0-983.976 0Z" fill="#FDDF6D"></path><path d="M617.432 931.356c-271.716 0-491.986-220.268-491.986-491.986 0-145.168 62.886-275.632 162.888-365.684C129.054 155.124 20.014 320.828 20.014 512c0 271.716 220.268 491.986 491.986 491.986 126.548 0 241.924-47.796 329.098-126.298-67.102 34.31-143.124 53.668-223.666 53.668z" fill="#FCC56B"></path><path d="M426.314 359.704m-142.718 0a142.718 142.718 0 1 0 285.436 0 142.718 142.718 0 1 0-285.436 0Z" fill="#FFFFFF"></path><path d="M826.554 359.704m-142.718 0a142.718 142.718 0 1 0 285.436 0 142.718 142.718 0 1 0-285.436 0Z" fill="#FFFFFF"></path><path d="M300.576 556.564c-36.536 0-66.156 29.62-66.156 66.158h132.314c-0.004-36.54-29.622-66.158-66.158-66.158zM877.628 547.698c-36.536 0-66.156 29.62-66.156 66.158h132.314c0-36.538-29.618-66.158-66.158-66.158z" fill="#F9A880"></path><path d="M390.526 285.09m-40.03 0a40.03 40.03 0 1 0 80.06 0 40.03 40.03 0 1 0-80.06 0Z" fill="#7F184C"></path><path d="M796.612 282.314m-40.03 0a40.03 40.03 0 1 0 80.06 0 40.03 40.03 0 1 0-80.06 0Z" fill="#7F184C"></path><path d="M553.388 822.268a19.932 19.932 0 0 1-10.272-2.85c-9.482-5.684-12.558-17.976-6.874-27.458 27.59-46.018 76.732-74.606 128.244-74.606a146.14 146.14 0 0 1 45.684 7.282c10.504 3.448 16.22 14.758 12.77 25.262-3.45 10.498-14.76 16.222-25.262 12.766a106.238 106.238 0 0 0-33.192-5.282c-37.528 0-73.51 21.136-93.908 55.16a20.02 20.02 0 0 1-17.19 9.726z" fill="#7F184C"></path><path d="M976.568 296.66a162.334 162.334 0 0 0-7.144-14.786c-0.916-1.814-1.79-3.65-2.724-5.452a19.944 19.944 0 0 0-3.282-4.576c-28.984-44.988-79.486-74.866-136.864-74.866-89.732 0-162.732 73-162.732 162.732 0 89.73 73 162.73 162.732 162.73 66.794 0 124.292-40.462 149.336-98.15 5.354 28.624 8.084 57.894 8.084 87.708 0 260.248-211.724 471.968-471.97 471.968S40.03 772.248 40.03 512 251.752 40.03 512 40.03c73.236 0 143.414 16.308 208.588 48.47 9.906 4.892 21.914 0.824 26.804-9.09 4.892-9.914 0.822-21.914-9.092-26.806C667.572 17.698 591.434 0 512 0 229.68 0 0 229.68 0 512c0 282.316 229.68 512 512 512s512-229.68 512-511.998c0-74.35-16.38-148.314-47.432-215.342z m-27.314 63.052c0 67.66-55.044 122.7-122.704 122.7s-122.704-55.044-122.704-122.7 55.044-122.704 122.704-122.704c46.26 0 86.612 25.742 107.516 63.646a477.884 477.884 0 0 1 5.604 11.532 121.936 121.936 0 0 1 9.584 47.526z" fill=""></path><path d="M426.326 196.98c-89.732 0-162.732 73-162.732 162.732 0 89.73 73 162.73 162.732 162.73s162.732-73 162.732-162.73c0.002-89.732-73.002-162.732-162.732-162.732z m0 285.432c-67.66 0-122.704-55.044-122.704-122.7s55.044-122.704 122.704-122.704 122.704 55.046 122.704 122.704-55.046 122.7-122.704 122.7zM543.116 819.42a20.008 20.008 0 0 0 27.458-6.878c20.398-34.026 56.38-55.16 93.908-55.16 11.358 0 22.524 1.778 33.19 5.282 10.502 3.456 21.814-2.266 25.264-12.764 3.45-10.502-2.262-21.814-12.764-25.264a145.99 145.99 0 0 0-45.69-7.282c-51.516 0-100.652 28.588-128.244 74.606-5.68 9.482-2.604 21.776 6.878 27.46z" fill=""></path><path d="M791.274 106.798m-20.014 0a20.014 20.014 0 1 0 40.028 0 20.014 20.014 0 1 0-40.028 0Z" fill=""></path></symbol><symbol id="icon--tongue-" viewBox="0 0 1024 1024"><path d="M511.270999 474.390927m-455.110889 0a455.110889 455.110889 0 1 0 910.221777 0 455.110889 455.110889 0 1 0-910.221777 0Z" fill="#FDDF6D"></path><path d="M608.789189 862.311684c-251.350491 0-455.108889-203.758398-455.108889-455.108889 0-134.286262 58.172114-254.972498 150.678294-338.27466-147.340288 75.336147-248.206485 228.620447-248.206484 405.462792 0 251.350491 203.758398 455.108889 455.108889 455.108888 117.064229 0 223.790437-44.212086 304.430594-116.832228-62.074121 31.738062-132.396259 49.644097-206.902404 49.644097z" fill="#FCC56B"></path><path d="M315.682617 449.474878c-33.798066 0-61.19812 27.398054-61.19812 61.196119h122.396239c0-33.796066-27.400054-61.19612-61.198119-61.196119zM849.483659 449.474878c-33.798066 0-61.19612 27.398054-61.196119 61.196119h122.396239c-0.002-33.796066-27.400054-61.19612-61.20012-61.196119z" fill="#F9A880"></path><path d="M599.665171 790.923545c-101.740199 0-184.21836-82.478161-184.21836-184.21836h368.43872c0.002 101.740199-82.476161 184.21836-184.22036 184.21836z" fill="#7F184C"></path><path d="M460.394899 606.705185v28.756056c0 12.126024 9.830019 21.954043 21.954043 21.954043H716.9814c12.126024 0 21.954043-9.830019 21.954043-21.954043v-28.756056h-278.540544z" fill="#F2F2F2"></path><path d="M654.347278 698.815365h-129.448253v0.214a168.074328 168.074328 0 0 0-71.232139 19.690039 185.126362 185.126362 0 0 0 48.404095 44.076086 48.734095 48.734095 0 0 1 22.830044 41.26608v98.048192c0 57.094112 46.28409 103.374202 103.374202 103.374202 57.094112 0 103.374202-46.28409 103.374202-103.374202v-125.992246c0.002-42.692083-34.608068-77.302151-77.302151-77.302151z" fill="#FC4C59"></path><path d="M627.871226 963.955883a18.512036 18.512036 0 0 1-18.514036-18.514036v-175.922344c0-2.058004-4.826009-7.102014-9.220018-9.634019-8.948017-4.95201-12.120024-16.182032-7.168014-25.128049 4.95201-8.948017 16.286032-12.146024 25.232049-7.198014 2.886006 1.598003 28.188055 16.340032 28.188055 41.962082v175.922344a18.516036 18.516036 0 0 1-18.518036 18.512036z" fill="#BC3B4A"></path><path d="M443.308866 333.508651m-55.544109 0a55.544108 55.544108 0 1 0 111.088217 0 55.544108 55.544108 0 1 0-111.088217 0Z" fill="#FFFFFF"></path><path d="M756.007477 333.508651m-55.544109 0a55.544108 55.544108 0 1 0 111.088217 0 55.544108 55.544108 0 1 0-111.088217 0Z" fill="#FFFFFF"></path><path d="M511.999 0C250.84249 0 38.376075 212.464415 38.376075 473.622925c0 261.15651 212.464415 473.620925 473.622925 473.620925 1.024002 0 2.052004-0.02 3.076006-0.028 17.972035 44.938088 61.924121 76.78415 113.200221 76.78415 67.212131 0 121.892238-54.680107 121.892238-121.890238v-125.992246a95.400186 95.400186 0 0 0-4.446009-28.846056c36.158071-37.614073 56.678111-88.144172 56.678111-140.570275a18.512036 18.512036 0 0 0-18.514036-18.514036H415.446811a18.514036 18.514036 0 0 0-18.514036 18.514036c0 68.362134 34.114067 131.678257 91.256178 169.358331 0.414001 0.274001 0.854002 0.478001 1.282003 0.716001 10.612021 7.590015 16.914033 19.916039 16.914033 33.292065v92.04218c0 2.704005 0.12 5.376011 0.294001 8.038016-238.294465-2.864006-431.276842-197.564386-431.276843-436.524853 0.002-240.73847 195.858383-436.594853 436.596853-436.594853s436.594853 195.856383 436.594853 436.594853c0 108.626212-40.146078 212.732415-113.042221 293.138573-6.868013 7.574015-6.294012 19.284038 1.284002 26.152051 7.572015 6.868013 19.284038 6.292012 26.152052-1.284003 79.084154-87.23217 122.63824-200.170391 122.638239-318.006621C985.621925 212.464415 773.15751 0 511.999 0z m201.140393 902.111762c0 46.792091-38.070074 84.860166-84.862166 84.860166-38.584075 0-71.216139-25.896051-81.484159-61.21212a18.160035 18.160035 0 0 0-1.050002-3.964008 84.708165 84.708165 0 0 1-2.330005-19.682038v-92.04218c0-26.350051-12.984025-50.660099-34.734067-65.038127a166.658326 166.658326 0 0 1-24.298048-19.554038 150.286294 150.286294 0 0 1 41.404081-7.958016c0.650001-0.032 1.286003-0.096 1.914004-0.192h126.646247c32.418063 0 58.790115 26.374052 58.790115 58.790115v125.992246h0.004z m51.1861-276.892541a166.378325 166.378325 0 0 1-37.772074 88.016172c-17.578034-20.158039-43.420085-32.936064-72.206141-32.936064h-129.448253c-1.300003 0-2.570005 0.138-3.794007 0.398-21.070041 1.348003-41.966082 6.406013-61.40812 14.688029a165.152323 165.152323 0 0 1-24.706048-70.168137h329.336643v0.002z" fill=""></path><path d="M443.312866 259.460507c-40.83608 0-74.058145 33.222065-74.058145 74.058144s33.222065 74.058145 74.058145 74.058145 74.058145-33.222065 74.058144-74.058145-33.224065-74.058145-74.058144-74.058144z m0 111.086217c-20.41804 0-37.028072-16.612032-37.028072-37.028073s16.612032-37.028072 37.028072-37.028072 37.028072 16.612032 37.028072 37.028072-16.610032 37.028072-37.028072 37.028073zM756.021477 259.460507c-40.83608 0-74.058145 33.222065-74.058145 74.058144s33.222065 74.058145 74.058145 74.058145c40.83608 0 74.058145-33.222065 74.058144-74.058145s-33.222065-74.058145-74.058144-74.058144z m0 111.086217c-20.41804 0-37.028072-16.612032-37.028073-37.028073s16.612032-37.028072 37.028073-37.028072c20.41804 0 37.028072 16.612032 37.028072 37.028072s-16.610032 37.028072-37.028072 37.028073z" fill=""></path><path d="M805.799574 820.439602m-18.514036 0a18.514036 18.514036 0 1 0 37.028072 0 18.514036 18.514036 0 1 0-37.028072 0Z" fill=""></path></symbol><symbol id="icon--tongue-1" viewBox="0 0 1024 1024"><path d="M512.001 473.980926m-455.45289 0a455.45289 455.45289 0 1 0 910.90578 0 455.45289 455.45289 0 1 0-910.90578 0Z" fill="#FDDF6D"></path><path d="M609.601191 862.191684c-251.538491 0-455.44889-203.910398-455.44889-455.44889 0-134.388262 58.216114-255.162498 150.792295-338.528661C157.494308 143.60428 56.55011 297.00258 56.55011 473.978926c0 251.538491 203.910398 455.44889 455.45089 455.448889 117.152229 0 223.958437-44.246086 304.658595-116.918228-62.122121 31.762062-132.496259 49.682097-207.058404 49.682097z" fill="#FCC56B"></path><path d="M316.276618 449.046877c-33.822066 0-61.24412 27.420054-61.24412 61.24212h122.488239c-0.002-33.822066-27.420054-61.24212-61.244119-61.24212zM850.477661 449.046877c-33.822066 0-61.24412 27.420054-61.24412 61.24212h122.48824c0-33.822066-27.418054-61.24212-61.24412-61.24212z" fill="#F9A880"></path><path d="M600.473173 790.751544c-101.816199 0-184.35836-82.540161-184.35836-184.35836h368.71472c0 101.818199-82.536161 184.35836-184.35636 184.35836z" fill="#7F184C"></path><path d="M461.096901 606.391184v28.778057c0 12.134024 9.838019 21.970043 21.970042 21.970042h234.808459c12.134024 0 21.970043-9.838019 21.970043-21.970042v-28.778057H461.096901z" fill="#F2F2F2"></path><path d="M655.19528 698.571364h-129.546253v0.214001a168.186328 168.186328 0 0 0-71.28414 19.704038 185.338362 185.338362 0 0 0 48.440095 44.110086 48.770095 48.770095 0 0 1 22.846045 41.296081v98.122192c0 57.136112 46.31809 103.452202 103.452202 103.452202 57.136112 0 103.452202-46.31809 103.452202-103.452202v-126.086247c0.002-42.724083-34.634068-77.360151-77.360151-77.360151z" fill="#FC4C59"></path><path d="M628.699228 963.913883a18.526036 18.526036 0 0 1-18.528036-18.528037v-176.054343c0-2.060004-4.830009-7.108014-9.228018-9.642019-8.956017-4.95601-12.130024-16.194032-7.174014-25.146049 4.95601-8.956017 16.298032-12.154024 25.250049-7.204014 2.888006 1.598003 28.210055 16.352032 28.210055 41.992082v176.054343a18.528036 18.528036 0 0 1-18.530036 18.528037z" fill="#BC3B4A"></path><path d="M366.412716 416.068813a18.534036 18.534036 0 0 1-7.416015-35.51607l76.010149-33.146064-76.088149-33.590066a18.530036 18.530036 0 0 1 14.970029-33.902066l114.718224 50.644099a18.530036 18.530036 0 0 1-0.076 33.934066l-114.718224 50.026098a18.444036 18.444036 0 0 1-7.400014 1.550003zM842.179645 416.068813a18.450036 18.450036 0 0 1-7.396015-1.548003l-114.718224-50.026098a18.530036 18.530036 0 0 1-0.076-33.934066l114.718224-50.644099a18.530036 18.530036 0 0 1 14.97003 33.902066l-76.088149 33.590066 76.010148 33.146064a18.530036 18.530036 0 0 1 9.578019 24.390048 18.548036 18.548036 0 0 1-16.998033 11.124022z" fill="#7F184C"></path><path d="M512.001 0C250.64649 0 38.022074 212.624415 38.022074 473.978926c0 261.35251 212.624415 473.974926 473.978926 473.974925 1.366003 0 2.742005-0.028 4.116008-0.04 18.172035 44.574087 61.958121 76.084149 112.988221 76.084149 67.262131 0 121.984238-54.720107 121.984238-121.980238v-126.086247c0-10.05802-1.564003-19.752039-4.450009-28.868056 36.184071-37.642074 56.722111-88.210172 56.722111-140.674275a18.526036 18.526036 0 0 0-18.528036-18.528036H416.118813a18.526036 18.526036 0 0 0-18.528036 18.528036c0 68.424134 34.144067 131.788257 91.342178 169.498331 0.418001 0.274001 0.858002 0.482001 1.288002 0.718002 10.606021 7.600015 16.906033 19.924039 16.906033 33.302065v92.11018c0 2.970006 0.144 5.904012 0.354001 8.822017-238.840466-2.440005-432.398845-197.456386-432.398844-436.862853 0-240.918471 196.000383-436.920853 436.920853-436.920854s436.920853 196.002383 436.920853 436.920854c0 104.788205-37.660074 206.130403-106.042207 285.348557a18.530036 18.530036 0 0 0 1.920004 26.132051c7.742015 6.688013 19.444038 5.828011 26.132051-1.920004 74.188145-85.946168 115.044225-195.884383 115.044225-309.562604C985.979926 212.624415 773.35551 0 512.001 0z m202.028395 902.021762c0 46.828091-38.100074 84.924166-84.926166 84.924166-38.804076 0-71.58614-26.166051-81.69016-61.774121a18.380036 18.380036 0 0 0-0.626001-2.254004 84.708165 84.708165 0 0 1-2.608005-20.896041v-92.11018c0-26.370052-12.994025-50.698099-34.756068-65.086127a166.908326 166.908326 0 0 1-24.320048-19.568038 150.356294 150.356294 0 0 1 41.434081-7.964016 18.680036 18.680036 0 0 0 1.914004-0.192h126.742248c32.442063 0 58.834115 26.394052 58.834115 58.834114v126.086247h0.002z m51.2281-277.100541c-3.666007 32.398063-16.874033 63.110123-37.800074 88.082172-17.592034-20.174039-43.452085-32.960064-72.260141-32.960065h-129.546253c-1.302003 0-2.572005 0.138-3.798008 0.398001-21.086041 1.348003-41.998082 6.410013-61.45412 14.700029a165.306323 165.306323 0 0 1-24.726048-70.220137h329.584644z" fill=""></path><path d="M349.418682 404.944791a18.530036 18.530036 0 0 0 24.390048 9.578019l114.718224-50.026098a18.530036 18.530036 0 0 0 0.076-33.934066l-114.718224-50.644099c-9.366018-4.128008-20.30004 0.106-24.436047 9.466018-4.134008 9.362018 0.106 20.30204 9.466018 24.436048l76.088149 33.590066-76.010149 33.146064c-9.374018 4.088008-13.664027 15.006029-9.574019 24.388048zM859.173678 404.944791c4.088008-9.380018-0.198-20.30004-9.578019-24.390048l-76.010148-33.146064 76.088149-33.590066a18.530036 18.530036 0 0 0-14.97003-33.902066l-114.718224 50.644099a18.528036 18.528036 0 1 0 0.076 33.934066l114.718224 50.026098a18.532036 18.532036 0 0 0 24.394048-9.576019z" fill=""></path><path d="M809.07358 819.991602m-18.528036 0a18.528036 18.528036 0 1 0 37.056072 0 18.528036 18.528036 0 1 0-37.056072 0Z" fill=""></path></symbol></svg>
<svg class="hidden">
	<defs>
		<symbol id="icon-cross" viewBox="0 0 24 24">
			<title>关闭</title>
			<path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path>
		</symbol>
	</defs>
</svg>
<main class="main-wrap">
<div class="search">
<form class="search__form" onsubmit="search(event);return false;" id="search">
	<input type="text" placeholder="Find..." id="searchInput" class="form-control" value="" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false">
	<span class="search__info">Hit <span style="color:#42b983">enter</span> to search or <span style="color:#42b983">ESC</span> to close</span>
</form>
<div class="search__related">
	<div class="search__suggestion">
		<h2>May I Suggest ?</h2>
		<p> #leanote #leanote blog #code #hello world</p>
	</div>
</div>
</div>
<button id="btn-search-close" class="btn btn--hidden btn--search-close" aria-label="Close search form"><svg class="icon icon--cross" title="关闭搜索"><use xlink:href="#icon-cross"></use></svg></button>
<div id="headerAndNav">
    <div id="blog-title">
        <a id="blog-title-img" href="http://blog.leanote.com/coolboy">
            <svg class="icon emoj" aria-hidden="true">
                <use xlink:href="#icon--scared"></use>
            </svg>
        </a>
        <a id="blog-title">CoolBoy's Blog</a>
    </div>
	<nav class="cl-effect-4">
		<a href="http://blog.leanote.com/coolboy" class=""><span data-hover="Home">Home</span></a>
		<a href="http://blog.leanote.com/archives/coolboy" class=""><span data-hover="Archives">Archives</span></a>
		<a href="http://blog.leanote.com/tags/coolboy" class=""><span data-hover="Tags">Tags</span></a>
		&nbsp;&nbsp;&nbsp;<a href="javascript:void(0);" id="btn-search" class="drop-down">Search</a>
		&nbsp;&nbsp;&nbsp;<span class="hamburger hamburger--spin" type="button"> 
          <span class="hamburger-box">
            <span class="hamburger-inner"></span>
          </span>
          	<div class="drop-down-menu">
    		    <div class="arrow"></div>
		    	
	        	
                	<a href="http://blog.leanote.com/single/coolboy/About-Me" class="drop-down">About Me</a>
                
		    </div>
       </span>
	</nav>
</div>
<style type="text/css">

</style>
<script>
function search(e) {
	var keywords = $("#searchInput").val();
	if(!keywords) {
		location.href = "http:\/\/blog.leanote.com\/search\/coolboy";
	} else {
        var tpl = '<form style="display: none" action="http:\/\/blog.leanote.com\/search\/coolboy" method="get">'; 
        tpl += '<input name="keywords" value="' + keywords + '" />'; 
        tpl += "</form"; 
        var $tpl = $(tpl); 
        $('body').append($tpl) 
        $tpl.submit(); 
        $tpl.remove(); 
	}
}
;(function(window) {

   'use strict';
	var isSearch;
	var mainContainer = document.querySelector('.main-wrap'),
		openCtrl = document.getElementById('btn-search'),
		closeCtrl = document.getElementById('btn-search-close'),
		searchContainer = document.querySelector('.search'),
		inputSearch = searchContainer.querySelector('#searchInput');

	function init() {
		initEvents();	
	}

	function initEvents() {
		openCtrl.addEventListener('click', openSearch);
		closeCtrl.addEventListener('click', closeSearch);
		document.addEventListener('keyup', function(ev) {
			
			if( ev.keyCode == 27 ) {
				closeSearch();
			}
			if (ev.keyCode == 13 && isSearch) {
			    search(event);
			}
		});
	}

	function openSearch() {
	    isSearch = true;
		mainContainer.classList.add('main-wrap--overlay');
		closeCtrl.classList.remove('btn--hidden');
		searchContainer.classList.add('search--open');
		$("body").css({"overflow-y":"hidden"});
		setTimeout(function() {
			inputSearch.focus();
		}, 500);
	}

	function closeSearch() {
		mainContainer.classList.remove('main-wrap--overlay');
		closeCtrl.classList.add('btn--hidden');
		searchContainer.classList.remove('search--open');
		$("body").css({"overflow-y":""});
		inputSearch.value = '';
		isSearch = false;
	}

	init();

})(window);
    $(function(){
        var emojArr = ["icon--thinking","icon--scared","icon--happy-","icon--flushed","icon--expressionless","icon--cool-","icon--cool","icon--confused"];
        var randomNum = Math.floor(Math.random()*emojArr.length);
        var attrVal = "#"+emojArr[randomNum];
        $("#blog-title-img use").attr("xlink:href",attrVal);
        var singleTitle = "";
        if(singleTitle == "Friends") $("#friends").addClass("active");
    });
    $("span.hamburger").click(function(){
        var hamburger = $(this);
        var dropdown = hamburger.find('.drop-down-menu');
        var a = hamburger.find('.drop-down-menu a');
        if(hamburger.hasClass("is-active")){
            hamburger.removeClass("is-active"); 
            dropdown.slideUp();
        }else{
            hamburger.addClass("is-active");
            dropdown.slideDown();
            dropdown.css({"z-index":"99"});
        }
    });
</script>
<script src="./带堆优化的Dijkstra_files/activate-power-mode.js"></script>
<script>
    POWERMODE.colorful = true; 
    POWERMODE.shake = false; 
    document.body.addEventListener('input', POWERMODE);
</script>
<style>
</style>
<div id="postsContainer">
	<div id="posts">
		<div class="each-post">
			<div class="title">
				带堆优化的Dijkstra
			</div>
			<div class="created-time">
			<svg class="icon" aria-hidden="true" style="font-size:18px;color:#e96900">
                <use xlink:href="#icon-tag"></use>
            </svg>
    			
    				无
    			
    			&nbsp;&nbsp;
    			<span class="fa fa-eye"></span> 156
    			&nbsp;&nbsp;
    			<span class="fa fa-thumbs-o-up"></span> 0
    			&nbsp;&nbsp;
    			<span class="fa fa-comments-o"></span> 0
			</div>
			
			
			<div class="mobile-created-time">
			
				<img src="./带堆优化的Dijkstra_files/85693676836ef230939888696d05a336.jpg" id="userLogo">
			
			coolboy
	
			
			</div>
			
			<div class="desc markdown-content" id="content"><a name="最短路"></a><h1 id="title"><strong>最短路</strong></h1>

<p>  在一张无负权环图中，若两点联通，则必有一个或多个最短路径。为连接两点代价最小的路径。</p>

<a name="dijkstra算法"></a><h1 id="title-1"><strong>dijkstra算法</strong></h1>

<p>  dijkstra算法可以解决无负权环图单源最短路问题，求出源点到所有点的最短路。 <br>
  <strong>元素</strong>：start，dist[ ]，flag[ ]；//分别表示源点(起始点)，当前点与源点的最短路,当前点是否标记。 <br>
  <strong>初始化</strong>：初始化dist[ ]=INF，flag[ ]=未标记，dist[start]=0。 <br>
  <strong>步骤</strong>： <br>
    循环n次： <br>
    1. 找出所有未标记点中dist值最小的点x。 <br>
    2. 标记x。 <br>
    3. 更新所有x出发的边(x,y)。//dist[y] = min( dist[y] ,dist[x] + weight[x][y]); <br>
  <strong>结果</strong>：操作dist数组，dist[v]代表v到源点的最短路。</p>

<a name="堆优化"></a><h1 id="title-2"><strong>堆优化</strong></h1>

<p>  可以注意到算法的第1个步骤中扫描dist数组取得最小值的话，复杂度为<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-1-Frame" tabindex="0" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-1" role="math" style="width: 2.281em; display: inline-block;"><span style="display: inline-block; position: relative; width: 1.892em; height: 0px; font-size: 120%;"><span style="position: absolute; clip: rect(1.669em 1001.84em 2.836em -999.997em); top: -2.497em; left: 0.003em;"><span class="mrow" id="MathJax-Span-2"><span class="mi" id="MathJax-Span-3" style="font-family: STIXGeneral-Italic;">O</span><span class="mo" id="MathJax-Span-4" style="font-family: STIXGeneral-Regular;">(</span><span class="mi" id="MathJax-Span-5" style="font-family: STIXGeneral-Italic;">n</span><span class="mo" id="MathJax-Span-6" style="font-family: STIXGeneral-Regular;">)</span></span><span style="display: inline-block; width: 0px; height: 2.503em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.263em; border-left: 0px solid; width: 0px; height: 1.137em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></math></span></span><script type="math/tex" id="MathJax-Element-1">O(n)</script>，循环n次后算法复杂度<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-2-Frame" tabindex="0" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-7" role="math" style="width: 2.836em; display: inline-block;"><span style="display: inline-block; position: relative; width: 2.336em; height: 0px; font-size: 120%;"><span style="position: absolute; clip: rect(1.503em 1002.28em 2.836em -999.997em); top: -2.497em; left: 0.003em;"><span class="mrow" id="MathJax-Span-8"><span class="mi" id="MathJax-Span-9" style="font-family: STIXGeneral-Italic;">O</span><span class="mo" id="MathJax-Span-10" style="font-family: STIXGeneral-Regular;">(</span><span class="msubsup" id="MathJax-Span-11"><span style="display: inline-block; position: relative; width: 0.947em; height: 0px;"><span style="position: absolute; clip: rect(3.392em 1000.5em 4.169em -999.997em); top: -3.997em; left: 0.003em;"><span class="mi" id="MathJax-Span-12" style="font-family: STIXGeneral-Italic;">n</span><span style="display: inline-block; width: 0px; height: 4.003em;"></span></span><span style="position: absolute; top: -4.386em; left: 0.503em;"><span class="mn" id="MathJax-Span-13" style="font-size: 70.7%; font-family: STIXGeneral-Regular;">2</span><span style="display: inline-block; width: 0px; height: 4.003em;"></span></span></span></span><span class="mo" id="MathJax-Span-14" style="font-family: STIXGeneral-Regular;">)</span></span><span style="display: inline-block; width: 0px; height: 2.503em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.263em; border-left: 0px solid; width: 0px; height: 1.337em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></math></span></span><script type="math/tex" id="MathJax-Element-2">O(n^2)</script>，有大量数据时，难以接受。此时可以使用优先队列(小根堆)进行优化，<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-3-Frame" tabindex="0" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-15" role="math" style="width: 2.281em; display: inline-block;"><span style="display: inline-block; position: relative; width: 1.892em; height: 0px; font-size: 120%;"><span style="position: absolute; clip: rect(1.669em 1001.84em 2.836em -999.997em); top: -2.497em; left: 0.003em;"><span class="mrow" id="MathJax-Span-16"><span class="mi" id="MathJax-Span-17" style="font-family: STIXGeneral-Italic;">O</span><span class="mo" id="MathJax-Span-18" style="font-family: STIXGeneral-Regular;">(</span><span class="mn" id="MathJax-Span-19" style="font-family: STIXGeneral-Regular;">1</span><span class="mo" id="MathJax-Span-20" style="font-family: STIXGeneral-Regular;">)</span></span><span style="display: inline-block; width: 0px; height: 2.503em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.263em; border-left: 0px solid; width: 0px; height: 1.137em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></math></span></span><script type="math/tex" id="MathJax-Element-3">O(1)</script>的取最小值，<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-4-Frame" tabindex="0" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-21" role="math" style="width: 4.614em; display: inline-block;"><span style="display: inline-block; position: relative; width: 3.836em; height: 0px; font-size: 120%;"><span style="position: absolute; clip: rect(1.669em 1003.78em 2.892em -999.997em); top: -2.497em; left: 0.003em;"><span class="mrow" id="MathJax-Span-22"><span class="mi" id="MathJax-Span-23" style="font-family: STIXGeneral-Italic;">O</span><span class="mo" id="MathJax-Span-24" style="font-family: STIXGeneral-Regular;">(</span><span class="mi" id="MathJax-Span-25" style="font-family: STIXGeneral-Italic;">l<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-26" style="font-family: STIXGeneral-Italic;">o</span><span class="mi" id="MathJax-Span-27" style="font-family: STIXGeneral-Italic;">g</span><span class="mo" id="MathJax-Span-28" style="font-family: STIXGeneral-Regular;">(</span><span class="mi" id="MathJax-Span-29" style="font-family: STIXGeneral-Italic;">n</span><span class="mo" id="MathJax-Span-30" style="font-family: STIXGeneral-Regular;">)</span><span class="mo" id="MathJax-Span-31" style="font-family: STIXGeneral-Regular;">)</span></span><span style="display: inline-block; width: 0px; height: 2.503em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.33em; border-left: 0px solid; width: 0px; height: 1.203em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></math></span></span><script type="math/tex" id="MathJax-Element-4">O(log(n))</script>的维护。可以将算法优化到<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-5-Frame" tabindex="0" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-32" role="math" style="width: 5.225em; display: inline-block;"><span style="display: inline-block; position: relative; width: 4.336em; height: 0px; font-size: 120%;"><span style="position: absolute; clip: rect(1.669em 1004.28em 2.892em -999.997em); top: -2.497em; left: 0.003em;"><span class="mrow" id="MathJax-Span-33"><span class="mi" id="MathJax-Span-34" style="font-family: STIXGeneral-Italic;">O</span><span class="mo" id="MathJax-Span-35" style="font-family: STIXGeneral-Regular;">(</span><span class="mi" id="MathJax-Span-36" style="font-family: STIXGeneral-Italic;">n</span><span class="mi" id="MathJax-Span-37" style="font-family: STIXGeneral-Italic;">l<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-38" style="font-family: STIXGeneral-Italic;">o</span><span class="mi" id="MathJax-Span-39" style="font-family: STIXGeneral-Italic;">g</span><span class="mo" id="MathJax-Span-40" style="font-family: STIXGeneral-Regular;">(</span><span class="mi" id="MathJax-Span-41" style="font-family: STIXGeneral-Italic;">n</span><span class="mo" id="MathJax-Span-42" style="font-family: STIXGeneral-Regular;">)</span><span class="mo" id="MathJax-Span-43" style="font-family: STIXGeneral-Regular;">)</span></span><span style="display: inline-block; width: 0px; height: 2.503em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.33em; border-left: 0px solid; width: 0px; height: 1.203em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></math></span></span><script type="math/tex" id="MathJax-Element-5">O(nlog(n))</script>。</p>

<a name="特殊技巧"></a><h1 id="title-3"><strong>特殊技巧</strong></h1>

<p>  在有向图的某些情况下，我们可能需要求出所有点到源点的最短路。使用n遍dijkstra来求解是不经济的，这时我们可以记录一个反向图，在反向图上跑一遍dijkstra，其结果就是所有点到源点的最短路。</p>

<a name="举栗"></a><h1 id="title-4"><strong>举栗</strong></h1>

<p><a href="http://codevs.cn/problem/1557/">[CodeVs]1557热浪</a> <br>
  德克萨斯纯朴的民眾们这个夏天正在遭受巨大的热浪！！！他们的德克萨斯长角牛吃起来不错，可是他们并不是很擅长生產富含奶油的乳製品。Farmer John此时以先天下之忧而忧，后天下之乐而乐的精神，身先士卒地承担起向德克萨斯运送大量的营养冰凉的牛奶的重任，以减轻德克萨斯人忍受酷暑的痛苦。 <br>
   John已经研究过可以把牛奶从威斯康星运送到德克萨斯州的路线。这些路线包括起始点和终点先一共经过T(1&lt;=T&lt;=MAXN)个城镇，方便地标号為1到T。除了起点和终点外地每个城镇由两条双向道路连向至少两个其它地城镇。每条道路有一个通过费用(包括油费，过路费等等)。 <br>
   给定一个地图，包含C(1&lt;=C&lt;=MAXM)条直接连接2个城镇的道路。每条道路由道路的起点Rs，终点Re(1&lt;=Rs&lt;=T;1&lt;=Re&lt;=T)，和花费(1&lt;=Ci&lt;=MAXCOST)组成。求从起始的城镇Ts(1&lt;=Ts&lt;=T)到终点的城镇Te(1&lt;=Te&lt;=T)最小的总费用。</p>

<a name="分析"></a><h1 id="title-5"><strong>分析</strong></h1>

<p>  题目中T个城镇与C条道路共同组成了一张图。从城镇Ts到城镇Te的最小总费用就是在这张图上找一条路径，在该路径上付出的代价最小，是一个标准的最短路问题。</p>

<a name="代码"></a><h1 id="title-6"><strong>代码</strong></h1>

<pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><code class="language-c++"><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;cstdio&gt;</span></code></li><li class="L1"><code class="language-c++"><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;cstring&gt;</span></code></li><li class="L2"><code class="language-c++"><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;vector&gt;</span></code></li><li class="L3"><code class="language-c++"><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;queue&gt;</span></code></li><li class="L4"><code class="language-c++"><span class="com">#define</span><span class="pln"> MAXN </span><span class="lit">1005</span></code></li><li class="L5"><code class="language-c++"><span class="com">#define</span><span class="pln"> MAXM </span><span class="lit">2505</span></code></li><li class="L6"><code class="language-c++"><span class="com">#define</span><span class="pln"> INF </span><span class="lit">0x3fffffff</span><span class="pln">  </span><span class="com">//int下正无穷的一半</span></code></li><li class="L7"><code class="language-c++"><span class="kwd">using</span><span class="pln"> </span><span class="kwd">namespace</span><span class="pln"> std</span><span class="pun">;</span></code></li><li class="L8"><code class="language-c++"><span class="kwd">int</span><span class="pln"> n</span><span class="pun">,</span><span class="pln">m</span><span class="pun">;</span><span class="pln">    </span><span class="com">//n:城镇数 m:路径数</span></code></li><li class="L9"><code class="language-c++"><span class="kwd">int</span><span class="pln"> pre</span><span class="pun">[</span><span class="pln">MAXN</span><span class="pun">];</span></code></li><li class="L0"><code class="language-c++"><span class="kwd">struct</span><span class="pln"> </span><span class="typ">Edge</span><span class="pun">{</span></code></li><li class="L1"><code class="language-c++"><span class="pln">    </span><span class="kwd">int</span><span class="pln"> to</span><span class="pun">;</span></code></li><li class="L2"><code class="language-c++"><span class="pln">    </span><span class="kwd">int</span><span class="pln"> weight</span><span class="pun">;</span></code></li><li class="L3"><code class="language-c++"><span class="pln">    </span><span class="kwd">int</span><span class="pln"> </span><span class="kwd">next</span><span class="pun">;</span></code></li><li class="L4"><code class="language-c++"><span class="pun">}</span><span class="pln">edge</span><span class="pun">[</span><span class="pln">MAXM</span><span class="pun">*</span><span class="lit">2</span><span class="pun">];</span></code></li><li class="L5"><code class="language-c++"><span class="kwd">inline</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> addedge</span><span class="pun">(</span><span class="typ">Edge</span><span class="pln"> </span><span class="pun">*</span><span class="pln">edge</span><span class="pun">,</span><span class="kwd">int</span><span class="pln"> </span><span class="pun">*</span><span class="pln">pre</span><span class="pun">,</span><span class="kwd">int</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln">num</span><span class="pun">,</span><span class="kwd">int</span><span class="pln"> </span><span class="kwd">from</span><span class="pun">,</span><span class="kwd">int</span><span class="pln"> to</span><span class="pun">,</span><span class="kwd">int</span><span class="pln"> weight</span><span class="pun">){</span></code></li><li class="L6"><code class="language-c++"><span class="pln">    edge</span><span class="pun">[</span><span class="pln">num</span><span class="pun">].</span><span class="pln">to</span><span class="pun">=</span><span class="pln">to</span><span class="pun">;</span><span class="pln">    </span><span class="com">//*edge,*pre:邻接表    num:当前边序号   from,to,weight:边信息</span></code></li><li class="L7"><code class="language-c++"><span class="pln">    edge</span><span class="pun">[</span><span class="pln">num</span><span class="pun">].</span><span class="pln">weight</span><span class="pun">=</span><span class="pln">weight</span><span class="pun">;</span></code></li><li class="L8"><code class="language-c++"><span class="pln">    edge</span><span class="pun">[</span><span class="pln">num</span><span class="pun">].</span><span class="kwd">next</span><span class="pun">=</span><span class="pln">pre</span><span class="pun">[</span><span class="kwd">from</span><span class="pun">];</span></code></li><li class="L9"><code class="language-c++"><span class="pln">    pre</span><span class="pun">[</span><span class="kwd">from</span><span class="pun">]=</span><span class="pln">num</span><span class="pun">++;</span></code></li><li class="L0"><code class="language-c++"><span class="pun">}</span></code></li><li class="L1"><code class="language-c++"><span class="kwd">int</span><span class="pln"> dist</span><span class="pun">[</span><span class="pln">MAXN</span><span class="pun">];</span><span class="pln"> </span><span class="com">//当前点与源点最短路</span></code></li><li class="L2"><code class="language-c++"><span class="kwd">struct</span><span class="pln"> </span><span class="typ">Dist</span><span class="pun">{</span><span class="pln">    </span><span class="com">//同上，为便于堆的使用</span></code></li><li class="L3"><code class="language-c++"><span class="pln">    </span><span class="kwd">int</span><span class="pln"> dist</span><span class="pun">;</span></code></li><li class="L4"><code class="language-c++"><span class="pln">    </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">;</span></code></li><li class="L5"><code class="language-c++"><span class="pln">    </span><span class="typ">Dist</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">=</span><span class="lit">0</span><span class="pun">,</span><span class="kwd">int</span><span class="pln"> dist</span><span class="pun">=</span><span class="pln">INF</span><span class="pun">):</span><span class="pln">dist</span><span class="pun">(</span><span class="pln">dist</span><span class="pun">),</span><span class="pln">x</span><span class="pun">(</span><span class="pln">x</span><span class="pun">){}</span><span class="pln">    </span><span class="com">//构造函数</span></code></li><li class="L6"><code class="language-c++"><span class="pln">    </span><span class="kwd">bool</span><span class="pln"> </span><span class="kwd">operator</span><span class="pun">()(</span><span class="typ">Dist</span><span class="pln"> l</span><span class="pun">,</span><span class="typ">Dist</span><span class="pln"> r</span><span class="pun">){</span><span class="pln"> </span><span class="com">//重载运算符</span></code></li><li class="L7"><code class="language-c++"><span class="pln">        </span><span class="kwd">return</span><span class="pln"> l</span><span class="pun">.</span><span class="pln">dist</span><span class="pun">&gt;</span><span class="pln">r</span><span class="pun">.</span><span class="pln">dist</span><span class="pun">;</span></code></li><li class="L8"><code class="language-c++"><span class="pln">    </span><span class="pun">}</span></code></li><li class="L9"><code class="language-c++"><span class="pun">};</span></code></li><li class="L0"><code class="language-c++"><span class="pln">priority_queue</span><span class="pun">&lt;</span><span class="typ">Dist</span><span class="pun">,</span><span class="pln">vector</span><span class="pun">&lt;</span><span class="typ">Dist</span><span class="pun">&gt;,</span><span class="typ">Dist</span><span class="pun">&gt;</span><span class="pln">que</span><span class="pun">;</span></code></li><li class="L1"><code class="language-c++"><span class="kwd">void</span><span class="pln"> dijistra</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> start</span><span class="pun">){</span></code></li><li class="L2"><code class="language-c++"><span class="pln">    </span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">1</span><span class="pun">;</span><span class="pln">i</span><span class="pun">&lt;=</span><span class="pln">n</span><span class="pun">;</span><span class="pln">i</span><span class="pun">++)</span><span class="pln">dist</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]=</span><span class="pln">INF</span><span class="pun">;</span><span class="pln">   </span><span class="com">//初始化dist为正无穷</span></code></li><li class="L3"><code class="language-c++"><span class="pln">    que</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="typ">Dist</span><span class="pun">(</span><span class="pln">start</span><span class="pun">,</span><span class="lit">0</span><span class="pun">));</span><span class="pln">    </span><span class="com">//初始化起始城镇dist为0</span></code></li><li class="L4"><code class="language-c++"><span class="pln">    dist</span><span class="pun">[</span><span class="pln">start</span><span class="pun">]=</span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L5"><code class="language-c++"><span class="pln">    </span><span class="kwd">while</span><span class="pun">(!</span><span class="pln">que</span><span class="pun">.</span><span class="pln">empty</span><span class="pun">()){</span></code></li><li class="L6"><code class="language-c++"><span class="pln">        </span><span class="typ">Dist</span><span class="pln"> tmp</span><span class="pun">=</span><span class="pln">que</span><span class="pun">.</span><span class="pln">top</span><span class="pun">();</span><span class="pln"> </span><span class="com">//取出dist值最小的点</span></code></li><li class="L7"><code class="language-c++"><span class="pln">        que</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span></code></li><li class="L8"><code class="language-c++"><span class="pln">        </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">=</span><span class="pln">tmp</span><span class="pun">.</span><span class="pln">x</span><span class="pun">;</span></code></li><li class="L9"><code class="language-c++"><span class="pln">        </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">tmp</span><span class="pun">.</span><span class="pln">dist</span><span class="pun">!=</span><span class="pln">dist</span><span class="pun">[</span><span class="pln">tmp</span><span class="pun">.</span><span class="pln">x</span><span class="pun">])</span><span class="kwd">continue</span><span class="pun">;</span><span class="pln">  </span><span class="com">//判断取出的点是否过期</span></code></li><li class="L0"><code class="language-c++"><span class="pln">        </span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> e</span><span class="pun">=</span><span class="pln">pre</span><span class="pun">[</span><span class="pln">x</span><span class="pun">];</span><span class="pln">e</span><span class="pun">!=-</span><span class="lit">1</span><span class="pun">;</span><span class="pln">e</span><span class="pun">=</span><span class="pln">edge</span><span class="pun">[</span><span class="pln">e</span><span class="pun">].</span><span class="kwd">next</span><span class="pun">){</span><span class="pln"> </span><span class="com">//更新与x相连的点</span></code></li><li class="L1"><code class="language-c++"><span class="pln">            </span><span class="kwd">int</span><span class="pln"> t</span><span class="pun">=</span><span class="pln">edge</span><span class="pun">[</span><span class="pln">e</span><span class="pun">].</span><span class="pln">to</span><span class="pun">;</span></code></li><li class="L2"><code class="language-c++"><span class="pln">            </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">dist</span><span class="pun">[</span><span class="pln">x</span><span class="pun">]+</span><span class="pln">edge</span><span class="pun">[</span><span class="pln">e</span><span class="pun">].</span><span class="pln">weight</span><span class="pun">&lt;</span><span class="pln">dist</span><span class="pun">[</span><span class="pln">t</span><span class="pun">]){</span><span class="pln"> </span><span class="com">//可更新时更新</span></code></li><li class="L3"><code class="language-c++"><span class="pln">                dist</span><span class="pun">[</span><span class="pln">t</span><span class="pun">]=</span><span class="pln">dist</span><span class="pun">[</span><span class="pln">x</span><span class="pun">]+</span><span class="pln">edge</span><span class="pun">[</span><span class="pln">e</span><span class="pun">].</span><span class="pln">weight</span><span class="pun">;</span></code></li><li class="L4"><code class="language-c++"><span class="pln">                que</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="typ">Dist</span><span class="pun">(</span><span class="pln">t</span><span class="pun">,</span><span class="pln">dist</span><span class="pun">[</span><span class="pln">t</span><span class="pun">]));</span></code></li><li class="L5"><code class="language-c++"><span class="pln">            </span><span class="pun">}</span></code></li><li class="L6"><code class="language-c++"><span class="pln">        </span><span class="pun">}</span></code></li><li class="L7"><code class="language-c++"><span class="pln">    </span><span class="pun">}</span></code></li><li class="L8"><code class="language-c++"><span class="pun">}</span></code></li><li class="L9"><code class="language-c++"><span class="kwd">int</span><span class="pln"> main</span><span class="pun">(){</span></code></li><li class="L0"><code class="language-c++"><span class="pln">    </span><span class="kwd">int</span><span class="pln"> start</span><span class="pun">,</span><span class="kwd">end</span><span class="pun">,</span><span class="pln">incedge</span><span class="pun">=</span><span class="lit">0</span><span class="pun">,</span><span class="pln">u</span><span class="pun">,</span><span class="pln">v</span><span class="pun">,</span><span class="pln">e</span><span class="pun">;</span></code></li><li class="L1"><code class="language-c++"><span class="pln">    freopen</span><span class="pun">(</span><span class="str">"input.in"</span><span class="pun">,</span><span class="str">"r"</span><span class="pun">,</span><span class="pln">stdin</span><span class="pun">);</span></code></li><li class="L2"><code class="language-c++"><span class="pln">    freopen</span><span class="pun">(</span><span class="str">"output.out"</span><span class="pun">,</span><span class="str">"w"</span><span class="pun">,</span><span class="pln">stdout</span><span class="pun">);</span></code></li><li class="L3"><code class="language-c++"><span class="pln">    scanf</span><span class="pun">(</span><span class="str">"%d%d%d%d"</span><span class="pun">,&amp;</span><span class="pln">n</span><span class="pun">,&amp;</span><span class="pln">m</span><span class="pun">,&amp;</span><span class="pln">start</span><span class="pun">,&amp;</span><span class="kwd">end</span><span class="pun">);</span></code></li><li class="L4"><code class="language-c++"><span class="pln">    memset</span><span class="pun">(</span><span class="pln">pre</span><span class="pun">,-</span><span class="lit">1</span><span class="pun">,</span><span class="kwd">sizeof</span><span class="pun">(</span><span class="pln">pre</span><span class="pun">));</span></code></li><li class="L5"><code class="language-c++"><span class="pln">    </span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">m</span><span class="pun">;</span><span class="pln">i</span><span class="pun">++){</span></code></li><li class="L6"><code class="language-c++"><span class="pln">        scanf</span><span class="pun">(</span><span class="str">"%d%d%d"</span><span class="pun">,&amp;</span><span class="pln">u</span><span class="pun">,&amp;</span><span class="pln">v</span><span class="pun">,&amp;</span><span class="pln">e</span><span class="pun">);</span></code></li><li class="L7"><code class="language-c++"><span class="pln">        addedge</span><span class="pun">(</span><span class="pln">edge</span><span class="pun">,</span><span class="pln">pre</span><span class="pun">,</span><span class="pln">incedge</span><span class="pun">,</span><span class="pln">u</span><span class="pun">,</span><span class="pln">v</span><span class="pun">,</span><span class="pln">e</span><span class="pun">);</span></code></li><li class="L8"><code class="language-c++"><span class="pln">        addedge</span><span class="pun">(</span><span class="pln">edge</span><span class="pun">,</span><span class="pln">pre</span><span class="pun">,</span><span class="pln">incedge</span><span class="pun">,</span><span class="pln">v</span><span class="pun">,</span><span class="pln">u</span><span class="pun">,</span><span class="pln">e</span><span class="pun">);</span><span class="pln">    </span><span class="com">//无向图有来有回</span></code></li><li class="L9"><code class="language-c++"><span class="pln">    </span><span class="pun">}</span></code></li><li class="L0"><code class="language-c++"><span class="pln">    dijistra</span><span class="pun">(</span><span class="pln">start</span><span class="pun">);</span></code></li><li class="L1"><code class="language-c++"><span class="pln">    printf</span><span class="pun">(</span><span class="str">"%d"</span><span class="pun">,</span><span class="pln">dist</span><span class="pun">[</span><span class="kwd">end</span><span class="pun">]);</span></code></li><li class="L2"><code class="language-c++"><span class="pln">    </span><span class="kwd">return</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L3"><code class="language-c++"><span class="pun">}</span></code></li></ol></pre></div>
			
		   
			
			
			
<div class="entry-controls clearfix">
<div><span class="siguoyi">觉得不错，点个赞？</span></div>
	<ol class="grids">
		<li class="grids__item">
			<button class="icobutton icobutton--thumbs-up" id="likeBtn"><span class="fa fa-thumbs-o-up"></span></button>
		</li>
	</ol>			
	<div class="voters clearfix" id="likers">

</div>
</div>

<script type="text/x-jsrender" id="tLikers" data-jsv-tmpl="_0">
[[for users]]
	<a id="liker_[[:UserId]]" title="[[:BlogTitle]]" href="[[:BlogUrl]]" target="_blank" class="voter">
		[[if Logo]]
			<img alt="avatar" class="avatar-small" src="[[:Logo]]">
		[[else]]
			<img alt="avatar" class="avatar-small" src="/images/blog/default_avatar.png">
		[[/if]]
	</a>
[[/for]]
</script>


	
<script src="./带堆优化的Dijkstra_files/activate-power-mode.js"></script>
<script>
    POWERMODE.colorful = true; 
    POWERMODE.shake = false; 
    document.body.addEventListener('input', POWERMODE);
</script>
		</div>
	</div>
</div>





<div id="footerContainer">
	
	<div class="container" id="footer">
        
    </div>
    <div class="footer-leanote">
    Themed by <a href="http://blog.leanote.com/post/coolboy/mrbird.leanote.com" class="color-summer">mrbird</a>&nbsp;
    Powered by <a href="https://leanote.com/" class="color-summer">Leanote</a>
       
    </div>
</div>
<script src="./带堆优化的Dijkstra_files/bootstrap-min.js"></script>
<script src="./带堆优化的Dijkstra_files/bootstrap-hover-dropdown.js"></script>
<script>
$(function() {
    var $nav = $('#nav-container');
    
    if($nav.css('visibility') != 'hidden') {
        return;
    }
    var $menu = $('#menu');
    var interval;
    function clear() {
        if(interval) {
            clearInterval(interval);
        }
    }
    function showNav() {
        clear();
        $nav.css('visibility', 'visible')
        $menu.hide();
    }
    function hideNav() {
        clear();
        interval = setTimeout(function() {
            $nav.css('visibility', 'hidden');
            $menu.show();
        }, 1000);
    }
    $('#menu i').hover(function() {
        showNav();
    });
    $nav.hover(function() {
        showNav();
    }, function() {
       hideNav(); 
    });
})
</script>

<link href="./带堆优化的Dijkstra_files/prettycode.css" rel="stylesheet">
<script src="./带堆优化的Dijkstra_files/prettify.js"></script>
<style>
@media screen and (min-width:1400px) {
pre.prettyprint  * {
	font-family: 'Roboto Mono',Monaco,courier,monospace;
	font-size: 16px;
	font-weight: 200 !important;
	letter-spacing:0.3px;
}

}
@media screen and (max-width:1399px) {
	pre.prettyprint  * {
		font-family: 'Roboto Mono',Monaco,courier,monospace;
		font-size: 13px !important;
		font-weight: 200 !important;
		letter-spacing:0.3px;
	}

}
pre.prettyprint {
	white-space: pre-wrap;
	white-space: -moz-pre-wrap;
	white-space: -pre-wrap;
	white-space: -o-pre-wrap;
	word-wrap: break-word;
}
code{
    color: #e96900;
    padding: 3px 5px;
    margin: 0 2px;
    background-color: #f8f8f8;
    font-family: 'Roboto Mono', Monaco, courier, monospace;
    border-radius: 2px;
}
.prepar{
    position:relative;
}
.hljs{
    overflow-x:hidden;
}
.hljs:after{
  position: absolute;
  top: 3px;
  right: 3px;
  color: rgba(204,204,204,0.8);
  text-align: right;
  padding: 5px 10px 0;
  line-height: 15px;
  height: 15px;
  font-family: 'consolas';
}
@media screen and (max-width:1399px) {
   .hljs:after{
     font-weight: 600;  
      font-size: 1.1em;
   }   
}  
@media screen and (min-width:1400px) {
   .hljs:after{
     font-weight: 500;  
      font-size: 1.1m;
   }   
} 
pre.brush\:sql:after{
    content:'sql';
}
pre.brush\:xml:after{
    content:'xml';
}
pre.brush\:java:after{
    content:'Java';
}
pre.brush\:css:after{
    content:'CSS';
}
pre.brush\:javascript:after{
    content:'JS';
}
pre.brush\:sh:after{
    content:'Shell';
}
pre.brush\:html:after{
    content:'HTML';
}
pre.brush\:csharp:after{
    content:'c#';
}
pre.brush\:c_cpp:after{
    content:'c/c++';
}
pre.brush\:undefined:after{
    content:'Code';
}
pre.brush\:objectivec:after{
    content:'Objective-c';
}
pre.brush\:php:after{
    content:'PHP';
}
pre.brush\:python:after{
    content:'Python';
}
pre.brush\:ruby:after{
    content:'Ruby';
}
pre.brush\:delphi:after{
    content:'Delphi';
}
pre.brush\:golang:after{
    content:'Golang';
}
pre.brush\:erlang:after{
    content:'Erlang';
}

pre.brush\:groovy:after{
    content:'Groovy';
}
pre.brush\:latex:after{
    content:'Latex';
}
pre.brush\:actionScript:after{
    content:'ActionScript';
}
pre.brush\:matlab:after{
    content:'Matlab';
}
pre.brush\:scala:after{
    content:'Scala';
}
</style>
<script>
$("pre").addClass("prettyprint linenums hljs");
prettyPrint();
$("pre").wrap("<div class='prepar'></div>");
</script>

<div id="blogNav" style="top: 10px; left: 953.297px;">
	<div id="blogNavNav">
		<span>文章目录</span>
	</div>
	<div id="blogNavContent"><ul><li class="nav-h1"><a data-a="h1-%E6%9C%80%E7%9F%AD%E8%B7%AF" onclick="scrollTo(this, &#39;h1&#39;, &#39;最短路&#39;)">最短路</a></li><li class="nav-h1"><a data-a="h1-dijkstra%E7%AE%97%E6%B3%95" onclick="scrollTo(this, &#39;h1&#39;, &#39;dijkstra算法&#39;)">dijkstra算法</a></li><li class="nav-h1"><a data-a="h1-%E5%A0%86%E4%BC%98%E5%8C%96" onclick="scrollTo(this, &#39;h1&#39;, &#39;堆优化&#39;)">堆优化</a></li><li class="nav-h1"><a data-a="h1-%E7%89%B9%E6%AE%8A%E6%8A%80%E5%B7%A7" onclick="scrollTo(this, &#39;h1&#39;, &#39;特殊技巧&#39;)">特殊技巧</a></li><li class="nav-h1"><a data-a="h1-%E4%B8%BE%E6%A0%97" onclick="scrollTo(this, &#39;h1&#39;, &#39;举栗&#39;)">举栗</a></li><li class="nav-h1"><a data-a="h1-%E5%88%86%E6%9E%90" onclick="scrollTo(this, &#39;h1&#39;, &#39;分析&#39;)">分析</a></li><li class="nav-h1"><a data-a="h1-%E4%BB%A3%E7%A0%81" onclick="scrollTo(this, &#39;h1&#39;, &#39;代码&#39;)">代码</a></li></ul></div>
</div>


<script>
var siteUrl = "http:\/\/leanote.com"; 

var blogInfo={UserId: "580e02b4ab64414745004cf1", OpenComment:  false , CommentType: "default"}; 
var noteId = "5819e74deccb1a6b4a000000"; 
var preLikeNum = +"0";
var commentNum = +"0";
</script>


<link href="./带堆优化的Dijkstra_files/share_comments.css" rel="stylesheet">
<link href="./带堆优化的Dijkstra_files/sweetalert.css" rel="stylesheet">

<script src="./带堆优化的Dijkstra_files/jsrender.js"></script>
<script src="./带堆优化的Dijkstra_files/mo.min.js"></script>
<script src="./带堆优化的Dijkstra_files/common.js"></script>
<script src="./带堆优化的Dijkstra_files/sweetalert.min.js"></script>
<script src="./带堆优化的Dijkstra_files/share_comments.js"></script>
<script src="./带堆优化的Dijkstra_files/jquery-cookie-min.js"></script>
<script src="./带堆优化的Dijkstra_files/bootstrap-dialog.min.js"></script>


<script src="./带堆优化的Dijkstra_files/md2html.js"></script>
<script>
var content = $.trim($("#markdownContent textarea").val());
md2Html(content, $("#content"), function(html) {
    $("pre").addClass("prettyprint linenums");
    prettyPrint();
  initNav();
    weixin();
});
</script>



</main><canvas width="1294" height="856" style="position: fixed; top: 0px; left: 0px; pointer-events: none; z-index: 999999;"></canvas><canvas width="1294" height="856" style="position: fixed; top: 0px; left: 0px; pointer-events: none; z-index: 999999;"></canvas><div></div><div id="toTop" title="回到页首" style="width: 32px; height: 32px; bottom: 40px; right: 25px; position: fixed; cursor: pointer; z-index: 100; display: block;"><svg class="icon" aria-hidden="true" style="font-size:30px;color:#42B983;opacity:0.8"><use xlink:href="#icon-top"></use></svg></div><div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px; margin: 0px;"><div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; padding: 0px; border: 0px; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal; font-family: STIXSizeOneSym, sans-serif;"></div></div></body></html>